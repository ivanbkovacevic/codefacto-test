{"version":3,"sources":["../node_modules/react/jsx-runtime.js","../node_modules/@mailchimp/mailchimp_marketing/src/ApiClient.js","../node_modules/react/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/classnames/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/object-assign/index.js","../node_modules/superagent/lib/is-object.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/@mailchimp/mailchimp_marketing/src/index.js","../node_modules/buffer/index.js","../node_modules/webpack/buildin/global.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/superagent/lib/client.js","../node_modules/component-emitter/index.js","../node_modules/superagent/lib/request-base.js","../node_modules/superagent/lib/response-base.js","../node_modules/superagent/lib/utils.js","../node_modules/superagent/lib/agent-base.js","../node_modules/querystring-es3/index.js","../node_modules/querystring-es3/decode.js","../node_modules/querystring-es3/encode.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/ActivityFeedApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/AuthorizedAppsApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/AutomationsApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/BatchWebhooksApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/BatchesApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/CampaignFoldersApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/CampaignsApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/ConnectedSitesApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/ConversationsApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/CustomerJourneysApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/EcommerceApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/FacebookAdsApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/FileManagerApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/LandingPagesApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/ListsApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/PingApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/ReportingApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/ReportsApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/RootApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/SearchCampaignsApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/SearchMembersApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/TemplateFoldersApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/TemplatesApi.js","../node_modules/@mailchimp/mailchimp_marketing/src/api/VerifiedDomainsApi.js"],"names":["module","exports","require","superagent","querystring","ActivityFeed","AuthorizedApps","Automations","BatchWebhooks","Batches","CampaignFolders","Campaigns","ConnectedSites","Conversations","CustomerJourneys","Ecommerce","FacebookAds","FileManager","LandingPages","Lists","Ping","Reporting","Reports","Root","SearchCampaigns","SearchMembers","TemplateFolders","Templates","VerifiedDomains","this","basePath","replace","config","apiKey","accessToken","server","defaultHeaders","timeout","cache","enableCookies","window","agent","activityFeed","authorizedApps","automations","batchWebhooks","batches","campaignFolders","campaigns","connectedSites","conversations","customerJourneys","ecommerce","facebookAds","fileManager","landingPages","lists","ping","reporting","reports","root","searchCampaigns","searchMembers","templateFolders","templates","verifiedDomains","prototype","setConfig","paramToString","param","undefined","Date","toJSON","toString","buildUrl","path","pathParams","match","url","_this","fullMatch","key","value","hasOwnProperty","encodeURIComponent","isJsonMime","contentType","Boolean","jsonPreferredMime","contentTypes","i","length","isFileParam","fs","err","ReadStream","Buffer","Blob","File","normalizeParams","params","newParams","Array","isArray","CollectionFormatEnum","CSV","SSV","TSV","PIPES","MULTI","buildCollectionParam","collectionFormat","map","join","Error","deserialize","response","returnType","status","data","body","Object","keys","text","convertToType","callApi","httpMethod","queryParams","headerParams","formParams","bodyParam","authNames","accepts","request","auth","set","toUpperCase","getTime","query","type","HeaderUtils","caseInsensitiveGet","header","send","stringify","_formParams","attach","field","accept","responseType","attachCookies","withCredentials","Promise","resolve","reject","end","error","saveCookies","parseDate","str","parseInt","parseFloat","String","constructFromObject","itemType","item","keyType","valueType","k","result","obj","instance","_slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","unsupportedIterableToArray","TypeError","_toConsumableArray","arrayLikeToArray","iter","from","hasOwn","classNames","classes","arguments","arg","argType","inner","apply","call","default","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","slice","constructor","name","test","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","val","assign","test1","getOwnPropertyNames","test2","fromCharCode","test3","split","forEach","letter","shouldUseNative","target","source","symbols","to","s","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","l","p","Fragment","StrictMode","Profiler","q","r","t","Suspense","u","v","for","w","x","z","a","b","c","A","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","B","C","props","context","refs","updater","D","E","isReactComponent","setState","forceUpdate","F","isPureReactComponent","G","current","H","I","ref","__self","__source","J","e","d","h","g","children","f","m","defaultProps","$$typeof","_owner","L","M","N","escape","O","K","y","P","Q","_status","_result","then","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","Children","count","toArray","only","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","version","aa","ba","Set","ca","da","ea","add","fa","document","ha","ia","ja","ka","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","toLowerCase","oa","pa","qa","ma","isNaN","na","la","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ra","sa","ta","ua","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ma","Ka","La","Na","stack","trim","Oa","Pa","prepareStackTrace","defineProperty","Reflect","construct","displayName","Qa","tag","_render","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","cb","ownerDocument","eb","db","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","ob","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","sb","tb","style","indexOf","setProperty","charAt","substring","ub","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","track","wbr","vb","wb","is","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","addEventListener","removeEventListener","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","return","flags","$b","memoizedState","dehydrated","ac","cc","child","sibling","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","Map","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","delete","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","xc","yc","shift","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","animation","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","Math","clz32","bd","cd","log","LN2","dd","unstable_UserBlockingPriority","ed","fd","gd","hd","id","uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Jd","clipboardData","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Od","Alt","Control","Meta","Shift","Pd","Rd","code","location","repeat","locale","which","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Zd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","time","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","node","offset","nextSibling","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","start","selectionStart","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","concat","Ze","Yb","listener","$e","has","af","bf","random","cf","df","capture","passive","Nb","ef","ff","parentWindow","gf","hf","je","char","ke","unshift","jf","kf","lf","mf","autoFocus","nf","__html","of","setTimeout","pf","clearTimeout","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Kg","_reactInternals","Hg","Ig","Jg","Lg","shouldComponentUpdate","Mg","contextType","state","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","index","Tg","Ug","mode","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","documentElement","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","getSnapshot","subscribe","setSnapshot","Oh","Ph","Qh","Rh","create","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","fi","gi","hi","ii","ji","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","getDerivedStateFromError","ri","pendingContext","Bi","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","last","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","onclick","size","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","message","Ni","Oi","WeakMap","Pi","element","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","hj","insertBefore","_reactRootContainer","ij","jj","kj","lj","mj","nj","ceil","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","Infinity","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","min","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","onCommitFiberRoot","fk","gk","ik","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","ok","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","hasAttribute","sk","uk","hk","unstable_observedBits","unmount","querySelectorAll","JSON","form","Vj","vk","Events","wk","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","floor","port2","port1","onmessage","postMessage","pop","sortIndex","startTime","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","jsx","jsxs","ApiClient","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","encodingOrOffset","allocUnsafe","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","isBuffer","copy","buffer","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","lo","utf16leToBytes","fromByteArray","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","list","pos","swap16","swap32","swap64","equals","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","Function","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","self","warn","Emitter","RequestBase","isObject","ResponseBase","Agent","noop","method","Request","getXHR","XMLHttpRequest","protocol","ActiveXObject","serialize","pairs","pushEncodedKeyValuePair","subkey","parseString","pair","decodeURIComponent","isJSON","mime","Response","req","xhr","responseText","statusText","_setStatusProperties","headers","line","lines","fields","parseHeader","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_responseType","_parseBody","_query","_header","on","new_err","parse","original","rawResponse","statusCode","emit","_isResponseOK","custom_err","del","fn","serializeObject","types","html","json","xml","urlencoded","_parser","toError","msg","user","pass","btoa","encoder","_auth","file","_data","_getFormData","append","_formData","FormData","_shouldRetry","_retry","_callback","_maxRetries","retries","_retries","crossDomainError","crossDomain","pipe","_isHost","_endCalled","_finalizeQueryString","_end","_setTimeouts","onreadystatechange","readyState","_responseTimeoutTimer","timedout","_aborted","handleProgress","direction","total","percent","loaded","hasListeners","onprogress","upload","username","open","_withCredentials","_serializer","setRequestHeader","_setDefaults","head","patch","post","put","mixin","_callbacks","once","off","removeListener","removeAllListeners","callbacks","splice","args","_timer","_timeout","_responseTimeout","option","deadline","retry","_retryCallback","ERROR_CODES","override","_fullfilledPromise","innerResolve","innerReject","catch","use","_okCallback","getHeader","unset","abort","base64Encoder","redirects","_maxRedirects","maxResponseSize","_maxResponseSize","isObj","sortQuery","sort","_sort","queryArr","_appendQueryString","trace","_timeoutError","reason","errno","utils","ct","links","parseLinks","statusType","info","redirect","clientError","serverError","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","reduce","cleanHeader","changesOrigin","_defaults","def","decode","encode","prop","qs","sep","eq","regexp","maxKeys","kstr","vstr","idx","xs","stringifyPrimitive","objectKeys","ks","apiClient","getChimpChatterWithHttpInfo","opts","getChimpChatter","response_and_data","listWithHttpInfo","getWithHttpInfo","appId","archiveWithHttpInfo","workflowId","archive","deleteWorkflowEmailWithHttpInfo","workflowEmailId","deleteWorkflowEmail","listAllWorkflowEmailsWithHttpInfo","listAllWorkflowEmails","getWorkflowEmailWithHttpInfo","getWorkflowEmail","getWorkflowEmailSubscriberQueueWithHttpInfo","getWorkflowEmailSubscriberQueue","getWorkflowEmailSubscriberWithHttpInfo","subscriberHash","getWorkflowEmailSubscriber","listWorkflowEmailSubscribersRemovedWithHttpInfo","listWorkflowEmailSubscribersRemoved","getRemovedWorkflowEmailSubscriberWithHttpInfo","getRemovedWorkflowEmailSubscriber","updateWorkflowEmailWithHttpInfo","postBody","updateWorkflowEmail","createWithHttpInfo","pauseAllEmailsWithHttpInfo","pauseAllEmails","startAllEmailsWithHttpInfo","startAllEmails","pauseWorkflowEmailWithHttpInfo","pauseWorkflowEmail","startWorkflowEmailWithHttpInfo","startWorkflowEmail","addWorkflowEmailSubscriberWithHttpInfo","addWorkflowEmailSubscriber","removeWorkflowEmailSubscriberWithHttpInfo","removeWorkflowEmailSubscriber","removeWithHttpInfo","batchWebhookId","remove","updateWithHttpInfo","update","deleteRequestWithHttpInfo","batchId","deleteRequest","statusWithHttpInfo","startWithHttpInfo","folderId","campaignId","deleteFeedbackMessageWithHttpInfo","feedbackId","deleteFeedbackMessage","getContentWithHttpInfo","getContent","getFeedbackWithHttpInfo","getFeedback","getFeedbackMessageWithHttpInfo","getFeedbackMessage","getSendChecklistWithHttpInfo","getSendChecklist","updateFeedbackMessageWithHttpInfo","updateFeedbackMessage","cancelSendWithHttpInfo","cancelSend","createResendWithHttpInfo","createResend","pauseWithHttpInfo","pause","replicateWithHttpInfo","replicate","resumeWithHttpInfo","resume","scheduleWithHttpInfo","schedule","sendWithHttpInfo","sendTestEmailWithHttpInfo","sendTestEmail","unscheduleWithHttpInfo","unschedule","addFeedbackWithHttpInfo","addFeedback","setContentWithHttpInfo","setContent","connectedSiteId","verifyScriptInstallationWithHttpInfo","verifyScriptInstallation","conversationId","getConversationMessagesWithHttpInfo","getConversationMessages","getConversationMessageWithHttpInfo","messageId","getConversationMessage","triggerWithHttpInfo","journeyId","stepId","trigger","deleteStoreWithHttpInfo","storeId","deleteStore","deleteStoreCartWithHttpInfo","cartId","deleteStoreCart","deleteCartLineItemWithHttpInfo","lineId","deleteCartLineItem","deleteStoreCustomerWithHttpInfo","customerId","deleteStoreCustomer","deleteOrderWithHttpInfo","orderId","deleteOrder","deleteOrderLineItemWithHttpInfo","deleteOrderLineItem","deleteStoreProductWithHttpInfo","productId","deleteStoreProduct","deleteProductImageWithHttpInfo","imageId","deleteProductImage","deleteProductVariantWithHttpInfo","variantId","deleteProductVariant","deletePromoCodeWithHttpInfo","promoRuleId","promoCodeId","deletePromoCode","deletePromoRuleWithHttpInfo","deletePromoRule","ordersWithHttpInfo","orders","storesWithHttpInfo","stores","getStoreWithHttpInfo","getStore","getStoreCartsWithHttpInfo","getStoreCarts","getStoreCartWithHttpInfo","getStoreCart","getAllCartLineItemsWithHttpInfo","getAllCartLineItems","getCartLineItemWithHttpInfo","getCartLineItem","getAllStoreCustomersWithHttpInfo","getAllStoreCustomers","getStoreCustomerWithHttpInfo","getStoreCustomer","getStoreOrdersWithHttpInfo","getStoreOrders","getOrderWithHttpInfo","getOrder","getAllOrderLineItemsWithHttpInfo","getAllOrderLineItems","getOrderLineItemWithHttpInfo","getOrderLineItem","getAllStoreProductsWithHttpInfo","getAllStoreProducts","getStoreProductWithHttpInfo","getStoreProduct","getProductImagesWithHttpInfo","getProductImages","getProductImageWithHttpInfo","getProductImage","getProductVariantsWithHttpInfo","getProductVariants","getProductVariantWithHttpInfo","getProductVariant","getPromoCodesWithHttpInfo","getPromoCodes","getPromoCodeWithHttpInfo","getPromoCode","listPromoRulesWithHttpInfo","listPromoRules","getPromoRuleWithHttpInfo","getPromoRule","updateStoreWithHttpInfo","updateStore","updateStoreCartWithHttpInfo","updateStoreCart","updateCartLineItemWithHttpInfo","updateCartLineItem","updateStoreCustomerWithHttpInfo","updateStoreCustomer","updateOrderWithHttpInfo","updateOrder","updateOrderLineItemWithHttpInfo","updateOrderLineItem","updateStoreProductWithHttpInfo","updateStoreProduct","updateProductImageWithHttpInfo","updateProductImage","updateProductVariantWithHttpInfo","updateProductVariant","updatePromoCodeWithHttpInfo","updatePromoCode","updatePromoRuleWithHttpInfo","updatePromoRule","addStoreWithHttpInfo","addStore","addStoreCartWithHttpInfo","addStoreCart","addCartLineItemWithHttpInfo","addCartLineItem","addStoreCustomerWithHttpInfo","addStoreCustomer","addStoreOrderWithHttpInfo","addStoreOrder","addOrderLineItemWithHttpInfo","addOrderLineItem","addStoreProductWithHttpInfo","addStoreProduct","addProductImageWithHttpInfo","addProductImage","addProductVariantsWithHttpInfo","addProductVariants","addPromoCodeWithHttpInfo","addPromoCode","addPromoRulesWithHttpInfo","addPromoRules","setStoreCustomerWithHttpInfo","setStoreCustomer","addProductVariantWithHttpInfo","addProductVariant","getAdWithHttpInfo","outreachId","getAd","deleteFileWithHttpInfo","fileId","deleteFile","deleteFolderWithHttpInfo","deleteFolder","filesWithHttpInfo","files","getFileWithHttpInfo","getFile","listFoldersWithHttpInfo","listFolders","getFolderWithHttpInfo","getFolder","updateFileWithHttpInfo","updateFile","updateFolderWithHttpInfo","updateFolder","uploadWithHttpInfo","createFolderWithHttpInfo","createFolder","deletePageWithHttpInfo","pageId","deletePage","getAllWithHttpInfo","getAll","getPageWithHttpInfo","getPage","getPageContentWithHttpInfo","getPageContent","updatePageWithHttpInfo","updatePage","publishPageWithHttpInfo","publishPage","unpublishPageWithHttpInfo","unpublishPage","deleteListWithHttpInfo","listId","deleteList","deleteInterestCategoryWithHttpInfo","interestCategoryId","deleteInterestCategory","deleteInterestCategoryInterestWithHttpInfo","interestId","deleteInterestCategoryInterest","deleteListMemberWithHttpInfo","deleteListMember","deleteListMemberNoteWithHttpInfo","noteId","deleteListMemberNote","deleteListMergeFieldWithHttpInfo","mergeId","deleteListMergeField","deleteSegmentWithHttpInfo","segmentId","deleteSegment","removeSegmentMemberWithHttpInfo","removeSegmentMember","deleteListWebhookWithHttpInfo","webhookId","deleteListWebhook","getListMemberTagsWithHttpInfo","getListMemberTags","getAllListsWithHttpInfo","getAllLists","getListWithHttpInfo","getList","getListAbuseReportsWithHttpInfo","getListAbuseReports","getListAbuseReportDetailsWithHttpInfo","reportId","getListAbuseReportDetails","getListRecentActivityWithHttpInfo","getListRecentActivity","getListClientsWithHttpInfo","getListClients","getListGrowthHistoryWithHttpInfo","getListGrowthHistory","getListGrowthHistoryByMonthWithHttpInfo","getListGrowthHistoryByMonth","getListInterestCategoriesWithHttpInfo","getListInterestCategories","getInterestCategoryWithHttpInfo","getInterestCategory","listInterestCategoryInterestsWithHttpInfo","listInterestCategoryInterests","getInterestCategoryInterestWithHttpInfo","getInterestCategoryInterest","getListLocationsWithHttpInfo","getListLocations","getListMembersInfoWithHttpInfo","getListMembersInfo","getListMemberWithHttpInfo","getListMember","getListMemberActivityWithHttpInfo","getListMemberActivity","getListMemberActivityFeedWithHttpInfo","getListMemberActivityFeed","getListMemberEventsWithHttpInfo","getListMemberEvents","getListMemberGoalsWithHttpInfo","getListMemberGoals","getListMemberNotesWithHttpInfo","getListMemberNotes","getListMemberNoteWithHttpInfo","getListMemberNote","getListMergeFieldsWithHttpInfo","getListMergeFields","getListMergeFieldWithHttpInfo","getListMergeField","getSegmentWithHttpInfo","getSegment","getSegmentMembersListWithHttpInfo","getSegmentMembersList","getListSignupFormsWithHttpInfo","getListSignupForms","getListWebhooksWithHttpInfo","getListWebhooks","getListWebhookWithHttpInfo","getListWebhook","updateListWithHttpInfo","updateList","updateInterestCategoryWithHttpInfo","updateInterestCategory","updateInterestCategoryInterestWithHttpInfo","updateInterestCategoryInterest","updateListMemberWithHttpInfo","updateListMember","updateListMemberNoteWithHttpInfo","updateListMemberNote","updateListMergeFieldWithHttpInfo","updateListMergeField","updateSegmentWithHttpInfo","updateSegment","updateListWebhookWithHttpInfo","updateListWebhook","createListMemberEventWithHttpInfo","createListMemberEvent","updateListMemberTagsWithHttpInfo","updateListMemberTags","createListWithHttpInfo","createList","batchListMembersWithHttpInfo","batchListMembers","createListInterestCategoryWithHttpInfo","createListInterestCategory","createInterestCategoryInterestWithHttpInfo","createInterestCategoryInterest","addListMemberWithHttpInfo","addListMember","deleteListMemberPermanentWithHttpInfo","deleteListMemberPermanent","createListMemberNoteWithHttpInfo","createListMemberNote","addListMergeFieldWithHttpInfo","addListMergeField","createSegmentWithHttpInfo","createSegment","batchSegmentMembersWithHttpInfo","batchSegmentMembers","createSegmentMemberWithHttpInfo","createSegmentMember","updateListSignupFormWithHttpInfo","updateListSignupForm","createListWebhookWithHttpInfo","createListWebhook","listSegmentsWithHttpInfo","listSegments","setListMemberWithHttpInfo","setListMember","tagSearchWithHttpInfo","tagSearch","getFacebookAdsReportAllWithHttpInfo","getFacebookAdsReportAll","getFacebookAdReportWithHttpInfo","getFacebookAdReport","getFacebookAdProductActivityReportWithHttpInfo","getFacebookAdProductActivityReport","getLandingPageReportsAllWithHttpInfo","getLandingPageReportsAll","getLandingPageReportWithHttpInfo","getLandingPageReport","getAllCampaignReportsWithHttpInfo","getAllCampaignReports","getCampaignReportWithHttpInfo","getCampaignReport","getCampaignAbuseReportsWithHttpInfo","getCampaignAbuseReports","getCampaignAbuseReportWithHttpInfo","getCampaignAbuseReport","getCampaignAdviceWithHttpInfo","getCampaignAdvice","getCampaignClickDetailsWithHttpInfo","getCampaignClickDetails","getCampaignClickDetailsForLinkWithHttpInfo","linkId","getCampaignClickDetailsForLink","getSubscribersInfoWithHttpInfo","getSubscribersInfo","getSubscriberInfoWithHttpInfo","getSubscriberInfo","getDomainPerformanceForCampaignWithHttpInfo","getDomainPerformanceForCampaign","getEcommerceProductActivityForCampaignWithHttpInfo","getEcommerceProductActivityForCampaign","getEepurlActivityForCampaignWithHttpInfo","getEepurlActivityForCampaign","getEmailActivityForCampaignWithHttpInfo","getEmailActivityForCampaign","getEmailActivityForSubscriberWithHttpInfo","getEmailActivityForSubscriber","getLocationsForCampaignWithHttpInfo","getLocationsForCampaign","getCampaignOpenDetailsWithHttpInfo","getCampaignOpenDetails","getSubscriberInfoForOpenedCampaignWithHttpInfo","getSubscriberInfoForOpenedCampaign","getCampaignRecipientsWithHttpInfo","getCampaignRecipients","getCampaignRecipientWithHttpInfo","getCampaignRecipient","getSubReportsForCampaignWithHttpInfo","getSubReportsForCampaign","getUnsubscribedListForCampaignWithHttpInfo","getUnsubscribedListForCampaign","getUnsubscribedListMemberWithHttpInfo","getUnsubscribedListMember","getRootWithHttpInfo","getRoot","searchWithHttpInfo","deleteTemplateWithHttpInfo","templateId","deleteTemplate","getTemplateWithHttpInfo","getTemplate","getDefaultContentForTemplateWithHttpInfo","getDefaultContentForTemplate","updateTemplateWithHttpInfo","updateTemplate","createVerifiedDomainWithHttpInfo","createVerifiedDomain","deleteDomainWithHttpInfo","domainName","deleteDomain","getDomainWithHttpInfo","getDomain","getVerifiedDomainsAllWithHttpInfo","getVerifiedDomainsAll","submitDomainVerificationWithHttpInfo","submitDomainVerification"],"mappings":"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","file":"static/js/2.d503d655.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\nvar superagent = require('superagent');\nvar querystring = require('querystring');\n\nvar ActivityFeed = require('./api/ActivityFeedApi');\nvar AuthorizedApps = require('./api/AuthorizedAppsApi');\nvar Automations = require('./api/AutomationsApi');\nvar BatchWebhooks = require('./api/BatchWebhooksApi');\nvar Batches = require('./api/BatchesApi');\nvar CampaignFolders = require('./api/CampaignFoldersApi');\nvar Campaigns = require('./api/CampaignsApi');\nvar ConnectedSites = require('./api/ConnectedSitesApi');\nvar Conversations = require('./api/ConversationsApi');\nvar CustomerJourneys = require('./api/CustomerJourneysApi');\nvar Ecommerce = require('./api/EcommerceApi');\nvar FacebookAds = require('./api/FacebookAdsApi');\nvar FileManager = require('./api/FileManagerApi');\nvar LandingPages = require('./api/LandingPagesApi');\nvar Lists = require('./api/ListsApi');\nvar Ping = require('./api/PingApi');\nvar Reporting = require('./api/ReportingApi');\nvar Reports = require('./api/ReportsApi');\nvar Root = require('./api/RootApi');\nvar SearchCampaigns = require('./api/SearchCampaignsApi');\nvar SearchMembers = require('./api/SearchMembersApi');\nvar TemplateFolders = require('./api/TemplateFoldersApi');\nvar Templates = require('./api/TemplatesApi');\nvar VerifiedDomains = require('./api/VerifiedDomainsApi');\n\n/**\n * @module ApiClient\n * @version 3.0.58\n */\n\n/**\n * Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n * application to use this class directly - the *Api and model classes provide the public API for the service. The\n * contents of this file should be regarded as internal but are documented for completeness.\n * @alias module:ApiClient\n * @class\n */\nvar exports = function() {\n\n  /**\n   * The base URL against which to resolve every API call's (relative) path.\n   * @type {String}\n   * @default https://server.api.mailchimp.com/3.0\n   */\n  this.basePath = 'https://server.api.mailchimp.com/3.0'.replace(/\\/+$/, '');\n\n  /**\n   * The API configuration settings object\n   * @type {Object}\n   * @default {}\n   */\n  this.config = {\n    apiKey: '',\n    accessToken: '',\n    server: 'invalid-server'\n  };\n\n  /**\n   * The default HTTP headers to be included for all API calls.\n   * @type {Array.<String>}\n   * @default {}\n   */\n  this.defaultHeaders = {};\n  /**\n   * The default HTTP timeout for all API calls.\n   * @type {Number}\n   * @default 60000\n   */\n  this.timeout = 120000;\n\n  /**\n   * If set to false an additional timestamp parameter is added to all API GET calls to\n   * prevent browser caching\n   * @type {Boolean}\n   * @default true\n   */\n  this.cache = true;\n\n  /**\n   * If set to true, the client will save the cookies from each server\n   * response, and return them in the next request.\n   * @default false\n   */\n  this.enableCookies = false;\n\n  /*\n   * Used to save and return cookies in a node.js (non-browser) setting,\n   * if this.enableCookies is set to true.\n   */\n  if (typeof window === 'undefined') {\n    this.agent = new superagent.agent();\n  }\n\n  // API Routes\n  this.activityFeed = new ActivityFeed(this);\n  this.authorizedApps = new AuthorizedApps(this);\n  this.automations = new Automations(this);\n  this.batchWebhooks = new BatchWebhooks(this);\n  this.batches = new Batches(this);\n  this.campaignFolders = new CampaignFolders(this);\n  this.campaigns = new Campaigns(this);\n  this.connectedSites = new ConnectedSites(this);\n  this.conversations = new Conversations(this);\n  this.customerJourneys = new CustomerJourneys(this);\n  this.ecommerce = new Ecommerce(this);\n  this.facebookAds = new FacebookAds(this);\n  this.fileManager = new FileManager(this);\n  this.landingPages = new LandingPages(this);\n  this.lists = new Lists(this);\n  this.ping = new Ping(this);\n  this.reporting = new Reporting(this);\n  this.reports = new Reports(this);\n  this.root = new Root(this);\n  this.searchCampaigns = new SearchCampaigns(this);\n  this.searchMembers = new SearchMembers(this);\n  this.templateFolders = new TemplateFolders(this);\n  this.templates = new Templates(this);\n  this.verifiedDomains = new VerifiedDomains(this);\n};\n\n/**\n * Sets the API configuration settings object.\n * @param config {Object} The configuration object\n */\nexports.prototype.setConfig = function(config = {}) {\n  var _this = this;\n  this.config = config;\n};\n\n/**\n * Returns a string representation for an actual parameter.\n * @param param The actual parameter.\n * @returns {String} The string representation of <code>param</code>.\n */\nexports.prototype.paramToString = function(param) {\n  if (param == undefined || param == null) {\n    return '';\n  }\n  if (param instanceof Date) {\n    return param.toJSON();\n  }\n  return param.toString();\n};\n\n/**\n * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n * NOTE: query parameters are not handled here.\n * @param {String} path The path to append to the base URL.\n * @param {Object} pathParams The parameter values to append.\n * @returns {String} The encoded path with parameter values substituted.\n */\nexports.prototype.buildUrl = function(path, pathParams) {\n  if (!path.match(/^\\//)) {\n    path = '/' + path;\n  }\n  var url = this.basePath + path;\n  var _this = this;\n  url = url.replace(/\\{([\\w-]+)\\}/g, function(fullMatch, key) {\n    var value;\n    if (pathParams.hasOwnProperty(key)) {\n      value = _this.paramToString(pathParams[key]);\n    } else {\n      value = fullMatch;\n    }\n    return encodeURIComponent(value);\n  });\n\n  // Define the server\n  if (typeof this.config.server !== 'undefined') {\n    url = url.replace('server', this.config.server);\n  }\n\n  return url;\n};\n\n/**\n * Checks whether the given content type represents JSON.<br>\n * JSON content type examples:<br>\n * <ul>\n * <li>application/json</li>\n * <li>application/json; charset=UTF8</li>\n * <li>APPLICATION/JSON</li>\n * </ul>\n * @param {String} contentType The MIME content type to check.\n * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n */\nexports.prototype.isJsonMime = function(contentType) {\n  return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n};\n\n/**\n * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n * @param {Array.<String>} contentTypes\n * @returns {String} The chosen content type, preferring JSON.\n */\nexports.prototype.jsonPreferredMime = function(contentTypes) {\n  for (var i = 0; i < contentTypes.length; i++) {\n    if (this.isJsonMime(contentTypes[i])) {\n      return contentTypes[i];\n    }\n  }\n  return contentTypes[0];\n};\n\n/**\n * Checks whether the given parameter value represents file-like content.\n * @param param The parameter to check.\n * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n */\nexports.prototype.isFileParam = function(param) {\n  // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)\n  if (typeof require === 'function') {\n    var fs;\n    try {\n      fs = require('fs');\n    } catch (err) {}\n    if (fs && fs.ReadStream && param instanceof fs.ReadStream) {\n      return true;\n    }\n  }\n  // Buffer in Node.js\n  if (typeof Buffer === 'function' && param instanceof Buffer) {\n    return true;\n  }\n  // Blob in browser\n  if (typeof Blob === 'function' && param instanceof Blob) {\n    return true;\n  }\n  // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n  if (typeof File === 'function' && param instanceof File) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Normalizes parameter values:\n * <ul>\n * <li>remove nils</li>\n * <li>keep files and arrays</li>\n * <li>format to string with `paramToString` for other cases</li>\n * </ul>\n * @param {Object.<String, Object>} params The parameters as object properties.\n * @returns {Object.<String, Object>} normalized parameters.\n */\nexports.prototype.normalizeParams = function(params) {\n  var newParams = {};\n  for (var key in params) {\n    if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n      var value = params[key];\n      if (this.isFileParam(value) || Array.isArray(value)) {\n        newParams[key] = value;\n      } else {\n        newParams[key] = this.paramToString(value);\n      }\n    }\n  }\n  return newParams;\n};\n\n/**\n * Enumeration of collection format separator strategies.\n * @enum {String}\n * @readonly\n */\nexports.CollectionFormatEnum = {\n  /**\n   * Comma-separated values. Value: <code>csv</code>\n   * @const\n   */\n  CSV: ',',\n  /**\n   * Space-separated values. Value: <code>ssv</code>\n   * @const\n   */\n  SSV: ' ',\n  /**\n   * Tab-separated values. Value: <code>tsv</code>\n   * @const\n   */\n  TSV: '\\t',\n  /**\n   * Pipe(|)-separated values. Value: <code>pipes</code>\n   * @const\n   */\n  PIPES: '|',\n  /**\n   * Native array. Value: <code>multi</code>\n   * @const\n   */\n  MULTI: 'multi'\n};\n\n/**\n * Builds a string representation of an array-type actual parameter, according to the given collection format.\n * @param {Array} param An array parameter.\n * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n */\nexports.prototype.buildCollectionParam = function buildCollectionParam(param, collectionFormat) {\n  if (param == null) {\n    return null;\n  }\n  switch (collectionFormat) {\n    case 'csv':\n      return param.map(this.paramToString).join(',');\n    case 'ssv':\n      return param.map(this.paramToString).join(' ');\n    case 'tsv':\n      return param.map(this.paramToString).join('\\t');\n    case 'pipes':\n      return param.map(this.paramToString).join('|');\n    case 'multi':\n      // return the array directly as SuperAgent will handle it as expected\n      return param.map(this.paramToString);\n    default:\n      throw new Error('Unknown collection format: ' + collectionFormat);\n  }\n};\n\n/**\n * Deserializes an HTTP response body into a value of the specified type.\n * @param {Object} response A SuperAgent response object.\n * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n * all properties on <code>data<code> will be converted to this type.\n * @returns A value of the specified type.\n */\nexports.prototype.deserialize = function deserialize(response, returnType) {\n  if (response == null || returnType == null || response.status == 204) {\n    return null;\n  }\n  // Rely on SuperAgent for parsing response body.\n  // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n  var data = response.body;\n  if (data == null || (typeof data === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length)) {\n    // SuperAgent does not always produce a body; use the unparsed response as a fallback\n    data = response.text;\n  }\n  return exports.convertToType(data, returnType);\n};\n\n/**\n * Invokes the REST service using the supplied settings and parameters.\n * @param {String} path The base URL to invoke.\n * @param {String} httpMethod The HTTP method to use.\n * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n * @param {Object} bodyParam The value to pass as the request body.\n * @param {Array.<String>} authNames An array of authentication type names.\n * @param {Array.<String>} contentTypes An array of request MIME types.\n * @param {Array.<String>} accepts An array of acceptable response MIME types.\n * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\n * constructor for a complex type.\n * @returns {Promise} A {@link https://www.promisejs.org/|Promise} object.\n */\nexports.prototype.callApi = function callApi(path, httpMethod, pathParams,\n    queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts,\n    returnType) {\n\n  var _this = this;\n  var url = this.buildUrl(path, pathParams);\n  var request = superagent(httpMethod, url);\n\n  // Basic Authentication\n  if (this.config.apiKey !== undefined && this.config.apiKey !== '') {\n    request.auth('user', this.config.apiKey);\n  }\n\n  // OAuth Authentication\n  else if (this.config.accessToken !== undefined && this.config.accessToken !== '') {\n    request.set({'Authorization': 'Bearer ' + this.config.accessToken});\n  }\n\n  // set query parameters\n  if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {\n    queryParams['_'] = new Date().getTime();\n  }\n  request.query(this.normalizeParams(queryParams));\n\n  // set header parameters\n  request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));\n\n  // set request timeout\n  request.timeout(this.timeout);\n\n  var contentType = this.jsonPreferredMime(contentTypes);\n  if (contentType) {\n    // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)\n    if(contentType != 'multipart/form-data') {\n      request.type(contentType);\n    }\n  } else if (!HeaderUtils.caseInsensitiveGet(request.header, 'content-type')) {\n    request.type('application/json');\n  }\n\n  if (contentType === 'application/x-www-form-urlencoded') {\n    request.send(querystring.stringify(this.normalizeParams(formParams)));\n  } else if (contentType == 'multipart/form-data') {\n    var _formParams = this.normalizeParams(formParams);\n    for (var key in _formParams) {\n      if (_formParams.hasOwnProperty(key)) {\n        if (this.isFileParam(_formParams[key])) {\n          // file field\n          request.attach(key, _formParams[key]);\n        } else {\n          request.field(key, _formParams[key]);\n        }\n      }\n    }\n  } else if (bodyParam) {\n    request.send(bodyParam);\n  }\n\n  var accept = this.jsonPreferredMime(accepts);\n  if (accept) {\n    request.accept(accept);\n  }\n\n  if (returnType === 'Blob') {\n    request.responseType('blob');\n  } else if (returnType === 'String') {\n    request.responseType('string');\n  }\n\n  // Attach previously saved cookies, if enabled\n  if (this.enableCookies){\n    if (typeof window === 'undefined') {\n      this.agent.attachCookies(request);\n    }\n    else {\n      request.withCredentials();\n    }\n  }\n\n  return new Promise(function(resolve, reject) {\n    request.end(function(error, response) {\n      if (error) {\n        reject(error);\n      } else {\n        try {\n          var data = _this.deserialize(response, returnType);\n          if (_this.enableCookies && typeof window === 'undefined'){\n            _this.agent.saveCookies(response);\n          }\n          resolve({data: data, response: response});\n        } catch (err) {\n          reject(err);\n        }\n      }\n    });\n  });\n  };\n\n/**\n * Parses an ISO-8601 string representation of a date value.\n * @param {String} str The date value as a string.\n * @returns {Date} The parsed date object.\n */\nexports.parseDate = function(str) {\n  return new Date(str.replace(/T/i, ' '));\n};\n\n/**\n * Converts a value to the specified type.\n * @param {(String|Object)} data The data to convert, as a string or object.\n * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n * all properties on <code>data<code> will be converted to this type.\n * @returns An instance of the specified type or null or undefined if data is null or undefined.\n */\nexports.convertToType = function(data, type) {\n  if (data === null || data === undefined)\n    return data\n\n  switch (type) {\n    case 'Boolean':\n      return Boolean(data);\n    case 'Integer':\n      return parseInt(data, 10);\n    case 'Number':\n      return parseFloat(data);\n    case 'String':\n      return String(data);\n    case 'Date':\n      return this.parseDate(String(data));\n    case 'Blob':\n      return data;\n    default:\n      if (type === Object) {\n        // generic object, return directly\n        return data;\n      } else if (typeof type === 'function') {\n        // for model type like: User\n        return type.constructFromObject(data);\n      } else if (Array.isArray(type)) {\n        // for array type like: ['String']\n        var itemType = type[0];\n        return data.map(function(item) {\n          return exports.convertToType(item, itemType);\n        });\n      } else if (typeof type === 'object') {\n        // for plain object type like: {'String': 'Integer'}\n        var keyType, valueType;\n        for (var k in type) {\n          if (type.hasOwnProperty(k)) {\n            keyType = k;\n            valueType = type[k];\n            break;\n          }\n        }\n        var result = {};\n        for (var k in data) {\n          if (data.hasOwnProperty(k)) {\n            var key = exports.convertToType(k, keyType);\n            var value = exports.convertToType(data[k], valueType);\n            result[key] = value;\n          }\n        }\n        return result;\n      } else {\n        // for unknown type, return the data directly\n        return data;\n      }\n  }\n};\n\n/**\n * Constructs a new map or array model from REST data.\n * @param data {Object|Array} The REST data.\n * @param obj {Object|Array} The target object or array.\n */\nexports.constructFromObject = function(data, obj, itemType) {\n  if (Array.isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      if (data.hasOwnProperty(i))\n        obj[i] = exports.convertToType(data[i], itemType);\n    }\n  } else {\n    for (var k in data) {\n      if (data.hasOwnProperty(k))\n        obj[k] = exports.convertToType(data[k], itemType);\n    }\n  }\n};\n\n  /**\n * The default API client implementation.\n * @type {module:ApiClient}\n */\nexports.instance = new exports();\n\nmodule.exports = exports;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","var ApiClient = require('./ApiClient');\n\nmodule.exports = ApiClient.instance;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar ResponseBase = require('./response-base');\nvar Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only version of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': serialize,\n  'application/json': JSON.stringify,\n};\n\n/**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse,\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) { // could be empty line, just skip it\n      continue;\n    }\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str) {\n  var parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n      }\n    } catch(custom_err) {\n      new_err = custom_err; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (1 === arguments.length) pass = '';\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    };\n  }\n\n  var encoder = function(string) {\n    if ('function' === typeof btoa) {\n      return btoa(string);\n    }\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = (this.xhr = request.getXHR());\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\nrequest.agent = function() {\n  return new Agent();\n};\n\n[\"GET\", \"POST\", \"OPTIONS\", \"PATCH\", \"PUT\", \"DELETE\"].forEach(function(method) {\n  Agent.prototype[method.toLowerCase()] = function(url, fn) {\n    var req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype['delete'];\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn) {\n  var req = request('GET', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn) {\n  var req = request('HEAD', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn) {\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  var req = request('DELETE', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn) {\n  var req = request('PATCH', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn) {\n  var req = request('POST', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn) {\n  var req = request('PUT', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","'use strict';\n\n/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(var option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count, fn){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\nvar ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nRequestBase.prototype._shouldRetry = function(err, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n  if (this._retryCallback) {\n    try {\n      var override = this._retryCallback(err, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch(e) {\n      console.error(e);\n    }\n  }\n  if (res && res.status && res.status >= 500 && res.status != 501) return true;\n  if (err) {\n    if (err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n    // Superagent timeout\n    if (err.timeout && err.code == 'ECONNABORTED') return true;\n    if (err.crossDomain) return true;\n  }\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject) {\n      self.end(function(err, res) {\n        if (err) innerReject(err);\n        else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n  // name should be either a string or an object.\n  if (null === name || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function(user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + base64Encoder(user + ':' + pass));\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', 'Bearer ' + user);\n      break;\n  }\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on == undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function(n){\n  if ('number' !== typeof n) {\n    throw TypeError(\"Invalid argument\");\n  }\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function() {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header,\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if ('function' === typeof this._sort) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = function() {console.trace(\"Unsupported\");}\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n};\n","'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n","'use strict';\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, changesOrigin){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  // secuirty\n  if (changesOrigin) {\n    delete header['authorization'];\n    delete header['cookie'];\n  }\n  return header;\n};\n","function Agent() {\n  this._defaults = [];\n}\n\n[\"use\", \"on\", \"once\", \"set\", \"query\", \"type\", \"accept\", \"auth\", \"withCredentials\", \"sortQuery\", \"retry\", \"ok\", \"redirects\",\n \"timeout\", \"buffer\", \"serialize\", \"parse\", \"ca\", \"key\", \"pfx\", \"cert\"].forEach(function(fn) {\n  /** Default setting for all requests from this agent */\n  Agent.prototype[fn] = function(/*varargs*/) {\n    this._defaults.push({fn:fn, arguments:arguments});\n    return this;\n  }\n});\n\nAgent.prototype._setDefaults = function(req) {\n    this._defaults.forEach(function(def) {\n      req[def.fn].apply(req, def.arguments);\n    });\n};\n\nmodule.exports = Agent;\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * ActivityFeed service.\n * @module api/ActivityFeedApi\n */\n\n/**\n * Constructs a new ActivityFeedApi. \n * @alias module:api/ActivityFeedApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Get latest chimp chatter\n   * Return the Chimp Chatter for this account ordered by most recent.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse200} and HTTP response\n   */\n  this.getChimpChatterWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/activity-feed/chimp-chatter', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get latest chimp chatter\n   * Return the Chimp Chatter for this account ordered by most recent.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse200}\n   */\n  this.getChimpChatter = function(opts) {\n    return this.getChimpChatterWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * AuthorizedApps service.\n * @module api/AuthorizedAppsApi\n */\n\n/**\n * Constructs a new AuthorizedAppsApi. \n * @alias module:api/AuthorizedAppsApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * List authorized apps\n   * Get a list of an account's registered, connected applications.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2001} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/authorized-apps', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List authorized apps\n   * Get a list of an account's registered, connected applications.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2001}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get authorized app info\n   * Get information about a specific authorized application.\n   * @param {String} appId The unique id for the connected authorized application.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2001Apps} and HTTP response\n   */\n  this.getWithHttpInfo = function(appId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'appId' is set\n    if (appId === undefined || appId === null) {\n      throw new Error(\"Missing the required parameter 'appId' when calling \");\n    }\n\n    var pathParams = {\n      'app_id': appId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/authorized-apps/{app_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get authorized app info\n   * Get information about a specific authorized application.\n   * @param {String} appId The unique id for the connected authorized application.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2001Apps}\n   */\n  this.get = function(appId, opts) {\n    return this.getWithHttpInfo(appId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Automations service.\n * @module api/AutomationsApi\n */\n\n/**\n * Constructs a new AutomationsApi. \n * @alias module:api/AutomationsApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Archive automation\n   * Archiving will permanently end your automation and keep the report data. You’ll be able to replicate your archived automation, but you can’t restart it.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.archiveWithHttpInfo = function(workflowId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/actions/archive', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Archive automation\n   * Archiving will permanently end your automation and keep the report data. You’ll be able to replicate your archived automation, but you can’t restart it.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.archive = function(workflowId) {\n    return this.archiveWithHttpInfo(workflowId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete workflow email\n   * Removes an individual classic automation workflow email. Emails from certain workflow types, including the Abandoned Cart Email (abandonedCart) and Product Retargeting Email (abandonedBrowse) Workflows, cannot be deleted.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteWorkflowEmailWithHttpInfo = function(workflowId, workflowEmailId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'workflowEmailId' is set\n    if (workflowEmailId === undefined || workflowEmailId === null) {\n      throw new Error(\"Missing the required parameter 'workflowEmailId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId,\n      'workflow_email_id': workflowEmailId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/emails/{workflow_email_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete workflow email\n   * Removes an individual classic automation workflow email. Emails from certain workflow types, including the Abandoned Cart Email (abandonedCart) and Product Retargeting Email (abandonedBrowse) Workflows, cannot be deleted.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteWorkflowEmail = function(workflowId, workflowEmailId) {\n    return this.deleteWorkflowEmailWithHttpInfo(workflowId, workflowEmailId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List automations\n   * Get a summary of an account's classic automations.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Date} opts.beforeCreateTime Restrict the response to automations created before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceCreateTime Restrict the response to automations created after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.beforeStartTime Restrict the response to automations started before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceStartTime Restrict the response to automations started after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {module:model/String} opts.status Restrict the results to automations with the specified status.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2002} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'before_create_time': opts['beforeCreateTime'],\n      'since_create_time': opts['sinceCreateTime'],\n      'before_start_time': opts['beforeStartTime'],\n      'since_start_time': opts['sinceStartTime'],\n      'status': opts['status']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List automations\n   * Get a summary of an account's classic automations.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Date} opts.beforeCreateTime Restrict the response to automations created before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceCreateTime Restrict the response to automations created after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.beforeStartTime Restrict the response to automations started before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceStartTime Restrict the response to automations started after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {module:model/String} opts.status Restrict the results to automations with the specified status.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2002}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get automation info\n   * Get a summary of an individual classic automation workflow's settings and content. The `trigger_settings` object returns information for the first email in the workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AutomationWorkflow} and HTTP response\n   */\n  this.getWithHttpInfo = function(workflowId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get automation info\n   * Get a summary of an individual classic automation workflow's settings and content. The `trigger_settings` object returns information for the first email in the workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AutomationWorkflow}\n   */\n  this.get = function(workflowId, opts) {\n    return this.getWithHttpInfo(workflowId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List automated emails\n   * Get a summary of the emails in a classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AutomationEmails} and HTTP response\n   */\n  this.listAllWorkflowEmailsWithHttpInfo = function(workflowId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/emails', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List automated emails\n   * Get a summary of the emails in a classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AutomationEmails}\n   */\n  this.listAllWorkflowEmails = function(workflowId) {\n    return this.listAllWorkflowEmailsWithHttpInfo(workflowId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get workflow email info\n   * Get information about an individual classic automation workflow email.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AutomationWorkflowEmail} and HTTP response\n   */\n  this.getWorkflowEmailWithHttpInfo = function(workflowId, workflowEmailId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'workflowEmailId' is set\n    if (workflowEmailId === undefined || workflowEmailId === null) {\n      throw new Error(\"Missing the required parameter 'workflowEmailId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId,\n      'workflow_email_id': workflowEmailId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/emails/{workflow_email_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get workflow email info\n   * Get information about an individual classic automation workflow email.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AutomationWorkflowEmail}\n   */\n  this.getWorkflowEmail = function(workflowId, workflowEmailId) {\n    return this.getWorkflowEmailWithHttpInfo(workflowId, workflowEmailId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List automated email subscribers\n   * Get information about a classic automation email queue.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2003} and HTTP response\n   */\n  this.getWorkflowEmailSubscriberQueueWithHttpInfo = function(workflowId, workflowEmailId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'workflowEmailId' is set\n    if (workflowEmailId === undefined || workflowEmailId === null) {\n      throw new Error(\"Missing the required parameter 'workflowEmailId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId,\n      'workflow_email_id': workflowEmailId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/emails/{workflow_email_id}/queue', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List automated email subscribers\n   * Get information about a classic automation email queue.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2003}\n   */\n  this.getWorkflowEmailSubscriberQueue = function(workflowId, workflowEmailId) {\n    return this.getWorkflowEmailSubscriberQueueWithHttpInfo(workflowId, workflowEmailId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get automated email subscriber\n   * Get information about a specific subscriber in a classic automation email queue.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SubscriberInAutomationQueue2} and HTTP response\n   */\n  this.getWorkflowEmailSubscriberWithHttpInfo = function(workflowId, workflowEmailId, subscriberHash) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'workflowEmailId' is set\n    if (workflowEmailId === undefined || workflowEmailId === null) {\n      throw new Error(\"Missing the required parameter 'workflowEmailId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId,\n      'workflow_email_id': workflowEmailId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get automated email subscriber\n   * Get information about a specific subscriber in a classic automation email queue.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SubscriberInAutomationQueue2}\n   */\n  this.getWorkflowEmailSubscriber = function(workflowId, workflowEmailId, subscriberHash) {\n    return this.getWorkflowEmailSubscriberWithHttpInfo(workflowId, workflowEmailId, subscriberHash)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List subscribers removed from workflow\n   * Get information about subscribers who were removed from a classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RemovedSubscribers} and HTTP response\n   */\n  this.listWorkflowEmailSubscribersRemovedWithHttpInfo = function(workflowId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/removed-subscribers', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List subscribers removed from workflow\n   * Get information about subscribers who were removed from a classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RemovedSubscribers}\n   */\n  this.listWorkflowEmailSubscribersRemoved = function(workflowId) {\n    return this.listWorkflowEmailSubscribersRemovedWithHttpInfo(workflowId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get subscriber removed from workflow\n   * Get information about a specific subscriber who was removed from a classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SubscriberRemovedFromAutomationWorkflow} and HTTP response\n   */\n  this.getRemovedWorkflowEmailSubscriberWithHttpInfo = function(workflowId, subscriberHash) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/removed-subscribers/{subscriber_hash}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get subscriber removed from workflow\n   * Get information about a specific subscriber who was removed from a classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SubscriberRemovedFromAutomationWorkflow}\n   */\n  this.getRemovedWorkflowEmailSubscriber = function(workflowId, subscriberHash) {\n    return this.getRemovedWorkflowEmailSubscriberWithHttpInfo(workflowId, subscriberHash)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update workflow email\n   * Update settings for a classic automation workflow email\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @param {module:model/UpdateInformationAboutASpecificWorkflowEmail} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AutomationWorkflowEmail} and HTTP response\n   */\n  this.updateWorkflowEmailWithHttpInfo = function(workflowId, workflowEmailId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'workflowEmailId' is set\n    if (workflowEmailId === undefined || workflowEmailId === null) {\n      throw new Error(\"Missing the required parameter 'workflowEmailId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId,\n      'workflow_email_id': workflowEmailId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/emails/{workflow_email_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update workflow email\n   * Update settings for a classic automation workflow email\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @param {module:model/UpdateInformationAboutASpecificWorkflowEmail} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AutomationWorkflowEmail}\n   */\n  this.updateWorkflowEmail = function(workflowId, workflowEmailId, body) {\n    return this.updateWorkflowEmailWithHttpInfo(workflowId, workflowEmailId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add automation\n   * Create a new classic automation in your Mailchimp account.\n   * @param {module:model/AutomationWorkflow1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AutomationWorkflow} and HTTP response\n   */\n  this.createWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add automation\n   * Create a new classic automation in your Mailchimp account.\n   * @param {module:model/AutomationWorkflow1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AutomationWorkflow}\n   */\n  this.create = function(body) {\n    return this.createWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Pause automation emails\n   * Pause all emails in a specific classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.pauseAllEmailsWithHttpInfo = function(workflowId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/actions/pause-all-emails', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Pause automation emails\n   * Pause all emails in a specific classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.pauseAllEmails = function(workflowId) {\n    return this.pauseAllEmailsWithHttpInfo(workflowId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Start automation emails\n   * Start all emails in a classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.startAllEmailsWithHttpInfo = function(workflowId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/actions/start-all-emails', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Start automation emails\n   * Start all emails in a classic automation workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.startAllEmails = function(workflowId) {\n    return this.startAllEmailsWithHttpInfo(workflowId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Pause automated email\n   * Pause an automated email.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.pauseWorkflowEmailWithHttpInfo = function(workflowId, workflowEmailId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'workflowEmailId' is set\n    if (workflowEmailId === undefined || workflowEmailId === null) {\n      throw new Error(\"Missing the required parameter 'workflowEmailId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId,\n      'workflow_email_id': workflowEmailId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/emails/{workflow_email_id}/actions/pause', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Pause automated email\n   * Pause an automated email.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.pauseWorkflowEmail = function(workflowId, workflowEmailId) {\n    return this.pauseWorkflowEmailWithHttpInfo(workflowId, workflowEmailId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Start automated email\n   * Start an automated email.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.startWorkflowEmailWithHttpInfo = function(workflowId, workflowEmailId) {\n    var postBody = null;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'workflowEmailId' is set\n    if (workflowEmailId === undefined || workflowEmailId === null) {\n      throw new Error(\"Missing the required parameter 'workflowEmailId' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId,\n      'workflow_email_id': workflowEmailId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/emails/{workflow_email_id}/actions/start', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Start automated email\n   * Start an automated email.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.startWorkflowEmail = function(workflowId, workflowEmailId) {\n    return this.startWorkflowEmailWithHttpInfo(workflowId, workflowEmailId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add subscriber to workflow email\n   * Manually add a subscriber to a workflow, bypassing the default trigger settings. You can also use this endpoint to trigger a series of automated emails in an API 3.0 workflow type.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @param {module:model/SubscriberInAutomationQueue1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SubscriberInAutomationQueue2} and HTTP response\n   */\n  this.addWorkflowEmailSubscriberWithHttpInfo = function(workflowId, workflowEmailId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'workflowEmailId' is set\n    if (workflowEmailId === undefined || workflowEmailId === null) {\n      throw new Error(\"Missing the required parameter 'workflowEmailId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId,\n      'workflow_email_id': workflowEmailId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/emails/{workflow_email_id}/queue', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add subscriber to workflow email\n   * Manually add a subscriber to a workflow, bypassing the default trigger settings. You can also use this endpoint to trigger a series of automated emails in an API 3.0 workflow type.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {String} workflowEmailId The unique id for the Automation workflow email.\n   * @param {module:model/SubscriberInAutomationQueue1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SubscriberInAutomationQueue2}\n   */\n  this.addWorkflowEmailSubscriber = function(workflowId, workflowEmailId, body) {\n    return this.addWorkflowEmailSubscriberWithHttpInfo(workflowId, workflowEmailId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Remove subscriber from workflow\n   * Remove a subscriber from a specific classic automation workflow. You can remove a subscriber at any point in an automation workflow, regardless of how many emails they've been sent from that workflow. Once they're removed, they can never be added back to the same workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {module:model/SubscriberInAutomationQueue3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SubscriberRemovedFromAutomationWorkflow} and HTTP response\n   */\n  this.removeWorkflowEmailSubscriberWithHttpInfo = function(workflowId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'workflowId' is set\n    if (workflowId === undefined || workflowId === null) {\n      throw new Error(\"Missing the required parameter 'workflowId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'workflow_id': workflowId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/automations/{workflow_id}/removed-subscribers', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Remove subscriber from workflow\n   * Remove a subscriber from a specific classic automation workflow. You can remove a subscriber at any point in an automation workflow, regardless of how many emails they've been sent from that workflow. Once they're removed, they can never be added back to the same workflow.\n   * @param {String} workflowId The unique id for the Automation workflow.\n   * @param {module:model/SubscriberInAutomationQueue3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SubscriberRemovedFromAutomationWorkflow}\n   */\n  this.removeWorkflowEmailSubscriber = function(workflowId, body) {\n    return this.removeWorkflowEmailSubscriberWithHttpInfo(workflowId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * BatchWebhooks service.\n * @module api/BatchWebhooksApi\n */\n\n/**\n * Constructs a new BatchWebhooksApi. \n * @alias module:api/BatchWebhooksApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete batch webhook\n   * Remove a batch webhook. Webhooks will no longer be sent to the given URL.\n   * @param {String} batchWebhookId The unique id for the batch webhook.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.removeWithHttpInfo = function(batchWebhookId) {\n    var postBody = null;\n\n    // verify the required parameter 'batchWebhookId' is set\n    if (batchWebhookId === undefined || batchWebhookId === null) {\n      throw new Error(\"Missing the required parameter 'batchWebhookId' when calling \");\n    }\n\n    var pathParams = {\n      'batch_webhook_id': batchWebhookId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/batch-webhooks/{batch_webhook_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete batch webhook\n   * Remove a batch webhook. Webhooks will no longer be sent to the given URL.\n   * @param {String} batchWebhookId The unique id for the batch webhook.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.remove = function(batchWebhookId) {\n    return this.removeWithHttpInfo(batchWebhookId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get batch webhook info\n   * Get information about a specific batch webhook.\n   * @param {String} batchWebhookId The unique id for the batch webhook.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BatchWebhook} and HTTP response\n   */\n  this.getWithHttpInfo = function(batchWebhookId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'batchWebhookId' is set\n    if (batchWebhookId === undefined || batchWebhookId === null) {\n      throw new Error(\"Missing the required parameter 'batchWebhookId' when calling \");\n    }\n\n    var pathParams = {\n      'batch_webhook_id': batchWebhookId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/batch-webhooks/{batch_webhook_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get batch webhook info\n   * Get information about a specific batch webhook.\n   * @param {String} batchWebhookId The unique id for the batch webhook.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BatchWebhook}\n   */\n  this.get = function(batchWebhookId, opts) {\n    return this.getWithHttpInfo(batchWebhookId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List batch webhooks\n   * Get all webhooks that have been configured for batches.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BatchWebhooks} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/batch-webhooks', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List batch webhooks\n   * Get all webhooks that have been configured for batches.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BatchWebhooks}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update batch webhook\n   * Update a webhook that will fire whenever any batch request completes processing.\n   * @param {String} batchWebhookId The unique id for the batch webhook.\n   * @param {module:model/BatchWebhook2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BatchWebhook} and HTTP response\n   */\n  this.updateWithHttpInfo = function(batchWebhookId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'batchWebhookId' is set\n    if (batchWebhookId === undefined || batchWebhookId === null) {\n      throw new Error(\"Missing the required parameter 'batchWebhookId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'batch_webhook_id': batchWebhookId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/batch-webhooks/{batch_webhook_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update batch webhook\n   * Update a webhook that will fire whenever any batch request completes processing.\n   * @param {String} batchWebhookId The unique id for the batch webhook.\n   * @param {module:model/BatchWebhook2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BatchWebhook}\n   */\n  this.update = function(batchWebhookId, body) {\n    return this.updateWithHttpInfo(batchWebhookId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add batch webhook\n   * Configure a webhook that will fire whenever any batch request completes processing.\n   * @param {module:model/BatchWebhook1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BatchWebhook} and HTTP response\n   */\n  this.createWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/batch-webhooks', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add batch webhook\n   * Configure a webhook that will fire whenever any batch request completes processing.\n   * @param {module:model/BatchWebhook1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BatchWebhook}\n   */\n  this.create = function(body) {\n    return this.createWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Batches service.\n * @module api/BatchesApi\n */\n\n/**\n * Constructs a new BatchesApi. \n * @alias module:api/BatchesApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete batch request\n   * Stops a batch request from running. Since only one batch request is run at a time, this can be used to cancel a long running request. The results of any completed operations will not be available after this call.\n   * @param {String} batchId The unique id for the batch operation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteRequestWithHttpInfo = function(batchId) {\n    var postBody = null;\n\n    // verify the required parameter 'batchId' is set\n    if (batchId === undefined || batchId === null) {\n      throw new Error(\"Missing the required parameter 'batchId' when calling \");\n    }\n\n    var pathParams = {\n      'batch_id': batchId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/batches/{batch_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete batch request\n   * Stops a batch request from running. Since only one batch request is run at a time, this can be used to cancel a long running request. The results of any completed operations will not be available after this call.\n   * @param {String} batchId The unique id for the batch operation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteRequest = function(batchId) {\n    return this.deleteRequestWithHttpInfo(batchId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List batch requests\n   * Get a summary of batch requests that have been made.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BatchOperations} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/batches', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List batch requests\n   * Get a summary of batch requests that have been made.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BatchOperations}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get batch operation status\n   * Get the status of a batch request.\n   * @param {String} batchId The unique id for the batch operation.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Batch} and HTTP response\n   */\n  this.statusWithHttpInfo = function(batchId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'batchId' is set\n    if (batchId === undefined || batchId === null) {\n      throw new Error(\"Missing the required parameter 'batchId' when calling \");\n    }\n\n    var pathParams = {\n      'batch_id': batchId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/batches/{batch_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get batch operation status\n   * Get the status of a batch request.\n   * @param {String} batchId The unique id for the batch operation.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Batch}\n   */\n  this.status = function(batchId, opts) {\n    return this.statusWithHttpInfo(batchId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Start batch operation\n   * Begin processing a batch operations request.\n   * @param {module:model/Body} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Batch} and HTTP response\n   */\n  this.startWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/batches', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Start batch operation\n   * Begin processing a batch operations request.\n   * @param {module:model/Body} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Batch}\n   */\n  this.start = function(body) {\n    return this.startWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * CampaignFolders service.\n * @module api/CampaignFoldersApi\n */\n\n/**\n * Constructs a new CampaignFoldersApi. \n * @alias module:api/CampaignFoldersApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete campaign folder\n   * Delete a specific campaign folder, and mark all the campaigns in the folder as 'unfiled'.\n   * @param {String} folderId The unique id for the campaign folder.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.removeWithHttpInfo = function(folderId) {\n    var postBody = null;\n\n    // verify the required parameter 'folderId' is set\n    if (folderId === undefined || folderId === null) {\n      throw new Error(\"Missing the required parameter 'folderId' when calling \");\n    }\n\n    var pathParams = {\n      'folder_id': folderId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaign-folders/{folder_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete campaign folder\n   * Delete a specific campaign folder, and mark all the campaigns in the folder as 'unfiled'.\n   * @param {String} folderId The unique id for the campaign folder.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.remove = function(folderId) {\n    return this.removeWithHttpInfo(folderId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List campaign folders\n   * Get all folders used to organize campaigns.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignFolders} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaign-folders', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List campaign folders\n   * Get all folders used to organize campaigns.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignFolders}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get campaign folder\n   * Get information about a specific folder used to organize campaigns.\n   * @param {String} folderId The unique id for the campaign folder.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignFolder} and HTTP response\n   */\n  this.getWithHttpInfo = function(folderId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'folderId' is set\n    if (folderId === undefined || folderId === null) {\n      throw new Error(\"Missing the required parameter 'folderId' when calling \");\n    }\n\n    var pathParams = {\n      'folder_id': folderId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaign-folders/{folder_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get campaign folder\n   * Get information about a specific folder used to organize campaigns.\n   * @param {String} folderId The unique id for the campaign folder.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignFolder}\n   */\n  this.get = function(folderId, opts) {\n    return this.getWithHttpInfo(folderId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update campaign folder\n   * Update a specific folder used to organize campaigns.\n   * @param {String} folderId The unique id for the campaign folder.\n   * @param {module:model/CampaignFolder2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignFolder} and HTTP response\n   */\n  this.updateWithHttpInfo = function(folderId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'folderId' is set\n    if (folderId === undefined || folderId === null) {\n      throw new Error(\"Missing the required parameter 'folderId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'folder_id': folderId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaign-folders/{folder_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update campaign folder\n   * Update a specific folder used to organize campaigns.\n   * @param {String} folderId The unique id for the campaign folder.\n   * @param {module:model/CampaignFolder2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignFolder}\n   */\n  this.update = function(folderId, body) {\n    return this.updateWithHttpInfo(folderId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add campaign folder\n   * Create a new campaign folder.\n   * @param {module:model/CampaignFolder1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignFolder} and HTTP response\n   */\n  this.createWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaign-folders', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add campaign folder\n   * Create a new campaign folder.\n   * @param {module:model/CampaignFolder1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignFolder}\n   */\n  this.create = function(body) {\n    return this.createWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Campaigns service.\n * @module api/CampaignsApi\n */\n\n/**\n * Constructs a new CampaignsApi. \n * @alias module:api/CampaignsApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete campaign\n   * Remove a campaign from your Mailchimp account.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.removeWithHttpInfo = function(campaignId) {\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete campaign\n   * Remove a campaign from your Mailchimp account.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.remove = function(campaignId) {\n    return this.removeWithHttpInfo(campaignId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete campaign feedback message\n   * Remove a specific feedback message for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} feedbackId The unique id for the feedback message.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteFeedbackMessageWithHttpInfo = function(campaignId, feedbackId) {\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'feedbackId' is set\n    if (feedbackId === undefined || feedbackId === null) {\n      throw new Error(\"Missing the required parameter 'feedbackId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'feedback_id': feedbackId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/feedback/{feedback_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete campaign feedback message\n   * Remove a specific feedback message for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} feedbackId The unique id for the feedback message.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteFeedbackMessage = function(campaignId, feedbackId) {\n    return this.deleteFeedbackMessageWithHttpInfo(campaignId, feedbackId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List campaigns\n   * Get all campaigns in an account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.type The campaign type.\n   * @param {module:model/String} opts.status The status of the campaign.\n   * @param {Date} opts.beforeSendTime Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceSendTime Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.beforeCreateTime Restrict the response to campaigns created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceCreateTime Restrict the response to campaigns created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.listId The unique id for the list.\n   * @param {String} opts.folderId The unique folder id.\n   * @param {String} opts.memberId Retrieve campaigns sent to a particular list member. Member ID is The MD5 hash of the lowercase version of the list member’s email address.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2004} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'type': opts['type'],\n      'status': opts['status'],\n      'before_send_time': opts['beforeSendTime'],\n      'since_send_time': opts['sinceSendTime'],\n      'before_create_time': opts['beforeCreateTime'],\n      'since_create_time': opts['sinceCreateTime'],\n      'list_id': opts['listId'],\n      'folder_id': opts['folderId'],\n      'member_id': opts['memberId'],\n      'sort_field': opts['sortField'],\n      'sort_dir': opts['sortDir']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List campaigns\n   * Get all campaigns in an account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.type The campaign type.\n   * @param {module:model/String} opts.status The status of the campaign.\n   * @param {Date} opts.beforeSendTime Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceSendTime Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.beforeCreateTime Restrict the response to campaigns created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceCreateTime Restrict the response to campaigns created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.listId The unique id for the list.\n   * @param {String} opts.folderId The unique folder id.\n   * @param {String} opts.memberId Retrieve campaigns sent to a particular list member. Member ID is The MD5 hash of the lowercase version of the list member’s email address.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2004}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get campaign info\n   * Get information about a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Campaign} and HTTP response\n   */\n  this.getWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get campaign info\n   * Get information about a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Campaign}\n   */\n  this.get = function(campaignId, opts) {\n    return this.getWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get campaign content\n   * Get the the HTML and plain-text content for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignContent} and HTTP response\n   */\n  this.getContentWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/content', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get campaign content\n   * Get the the HTML and plain-text content for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignContent}\n   */\n  this.getContent = function(campaignId, opts) {\n    return this.getContentWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List campaign feedback\n   * Get team feedback while you're working together on a Mailchimp campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignReports} and HTTP response\n   */\n  this.getFeedbackWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/feedback', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List campaign feedback\n   * Get team feedback while you're working together on a Mailchimp campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignReports}\n   */\n  this.getFeedback = function(campaignId, opts) {\n    return this.getFeedbackWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get campaign feedback message\n   * Get a specific feedback message from a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} feedbackId The unique id for the feedback message.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignFeedback2} and HTTP response\n   */\n  this.getFeedbackMessageWithHttpInfo = function(campaignId, feedbackId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'feedbackId' is set\n    if (feedbackId === undefined || feedbackId === null) {\n      throw new Error(\"Missing the required parameter 'feedbackId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'feedback_id': feedbackId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/feedback/{feedback_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get campaign feedback message\n   * Get a specific feedback message from a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} feedbackId The unique id for the feedback message.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignFeedback2}\n   */\n  this.getFeedbackMessage = function(campaignId, feedbackId, opts) {\n    return this.getFeedbackMessageWithHttpInfo(campaignId, feedbackId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get campaign send checklist\n   * Review the send checklist for a campaign, and resolve any issues before sending.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SendChecklist} and HTTP response\n   */\n  this.getSendChecklistWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/send-checklist', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get campaign send checklist\n   * Review the send checklist for a campaign, and resolve any issues before sending.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SendChecklist}\n   */\n  this.getSendChecklist = function(campaignId, opts) {\n    return this.getSendChecklistWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update campaign settings\n   * Update some or all of the settings for a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/Campaign2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Campaign} and HTTP response\n   */\n  this.updateWithHttpInfo = function(campaignId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update campaign settings\n   * Update some or all of the settings for a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/Campaign2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Campaign}\n   */\n  this.update = function(campaignId, body) {\n    return this.updateWithHttpInfo(campaignId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update campaign feedback message\n   * Update a specific feedback message for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} feedbackId The unique id for the feedback message.\n   * @param {module:model/CampaignFeedback3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignFeedback2} and HTTP response\n   */\n  this.updateFeedbackMessageWithHttpInfo = function(campaignId, feedbackId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'feedbackId' is set\n    if (feedbackId === undefined || feedbackId === null) {\n      throw new Error(\"Missing the required parameter 'feedbackId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'feedback_id': feedbackId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/feedback/{feedback_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update campaign feedback message\n   * Update a specific feedback message for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} feedbackId The unique id for the feedback message.\n   * @param {module:model/CampaignFeedback3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignFeedback2}\n   */\n  this.updateFeedbackMessage = function(campaignId, feedbackId, body) {\n    return this.updateFeedbackMessageWithHttpInfo(campaignId, feedbackId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add campaign\n   * Create a new Mailchimp campaign.\n   * @param {module:model/Campaign1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Campaign} and HTTP response\n   */\n  this.createWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add campaign\n   * Create a new Mailchimp campaign.\n   * @param {module:model/Campaign1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Campaign}\n   */\n  this.create = function(body) {\n    return this.createWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Cancel campaign\n   * Cancel a Regular or Plain-Text Campaign after you send, before all of your recipients receive it. This feature is included with Mailchimp Pro.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.cancelSendWithHttpInfo = function(campaignId) {\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/actions/cancel-send', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Cancel campaign\n   * Cancel a Regular or Plain-Text Campaign after you send, before all of your recipients receive it. This feature is included with Mailchimp Pro.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.cancelSend = function(campaignId) {\n    return this.cancelSendWithHttpInfo(campaignId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Resend campaign\n   * Creates a Resend to Non-Openers version of this campaign. We will also check if this campaign meets the criteria for Resend to Non-Openers campaigns.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Campaign3} and HTTP response\n   */\n  this.createResendWithHttpInfo = function(campaignId) {\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/actions/create-resend', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Resend campaign\n   * Creates a Resend to Non-Openers version of this campaign. We will also check if this campaign meets the criteria for Resend to Non-Openers campaigns.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Campaign3}\n   */\n  this.createResend = function(campaignId) {\n    return this.createResendWithHttpInfo(campaignId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Pause rss campaign\n   * Pause an RSS-Driven campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.pauseWithHttpInfo = function(campaignId) {\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/actions/pause', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Pause rss campaign\n   * Pause an RSS-Driven campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.pause = function(campaignId) {\n    return this.pauseWithHttpInfo(campaignId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Replicate campaign\n   * Replicate a campaign in saved or send status.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Campaign3} and HTTP response\n   */\n  this.replicateWithHttpInfo = function(campaignId) {\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/actions/replicate', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Replicate campaign\n   * Replicate a campaign in saved or send status.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Campaign3}\n   */\n  this.replicate = function(campaignId) {\n    return this.replicateWithHttpInfo(campaignId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Resume rss campaign\n   * Resume an RSS-Driven campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.resumeWithHttpInfo = function(campaignId) {\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/actions/resume', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Resume rss campaign\n   * Resume an RSS-Driven campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.resume = function(campaignId) {\n    return this.resumeWithHttpInfo(campaignId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Schedule campaign\n   * Schedule a campaign for delivery. If you're using Multivariate Campaigns to test send times or sending RSS Campaigns, use the send action instead.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/Body1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.scheduleWithHttpInfo = function(campaignId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/actions/schedule', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Schedule campaign\n   * Schedule a campaign for delivery. If you're using Multivariate Campaigns to test send times or sending RSS Campaigns, use the send action instead.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/Body1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.schedule = function(campaignId, body) {\n    return this.scheduleWithHttpInfo(campaignId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Send campaign\n   * Send a Mailchimp campaign. For RSS Campaigns, the campaign will send according to its schedule. All other campaigns will send immediately.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.sendWithHttpInfo = function(campaignId) {\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/actions/send', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Send campaign\n   * Send a Mailchimp campaign. For RSS Campaigns, the campaign will send according to its schedule. All other campaigns will send immediately.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.send = function(campaignId) {\n    return this.sendWithHttpInfo(campaignId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Send test email\n   * Send a test email.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/Body2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.sendTestEmailWithHttpInfo = function(campaignId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/actions/test', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Send test email\n   * Send a test email.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/Body2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.sendTestEmail = function(campaignId, body) {\n    return this.sendTestEmailWithHttpInfo(campaignId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Unschedule campaign\n   * Unschedule a scheduled campaign that hasn't started sending.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.unscheduleWithHttpInfo = function(campaignId) {\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/actions/unschedule', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Unschedule campaign\n   * Unschedule a scheduled campaign that hasn't started sending.\n   * @param {String} campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.unschedule = function(campaignId) {\n    return this.unscheduleWithHttpInfo(campaignId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add campaign feedback\n   * Add feedback on a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/CampaignFeedback1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignFeedback2} and HTTP response\n   */\n  this.addFeedbackWithHttpInfo = function(campaignId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/feedback', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add campaign feedback\n   * Add feedback on a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/CampaignFeedback1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignFeedback2}\n   */\n  this.addFeedback = function(campaignId, body) {\n    return this.addFeedbackWithHttpInfo(campaignId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Set campaign content\n   * Set the content for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/CampaignContent1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignContent} and HTTP response\n   */\n  this.setContentWithHttpInfo = function(campaignId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/campaigns/{campaign_id}/content', 'PUT',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Set campaign content\n   * Set the content for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {module:model/CampaignContent1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignContent}\n   */\n  this.setContent = function(campaignId, body) {\n    return this.setContentWithHttpInfo(campaignId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * ConnectedSites service.\n * @module api/ConnectedSitesApi\n */\n\n/**\n * Constructs a new ConnectedSitesApi. \n * @alias module:api/ConnectedSitesApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete connected site\n   * Remove a connected site from your Mailchimp account.\n   * @param {String} connectedSiteId The unique identifier for the site.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.removeWithHttpInfo = function(connectedSiteId) {\n    var postBody = null;\n\n    // verify the required parameter 'connectedSiteId' is set\n    if (connectedSiteId === undefined || connectedSiteId === null) {\n      throw new Error(\"Missing the required parameter 'connectedSiteId' when calling \");\n    }\n\n    var pathParams = {\n      'connected_site_id': connectedSiteId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/connected-sites/{connected_site_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete connected site\n   * Remove a connected site from your Mailchimp account.\n   * @param {String} connectedSiteId The unique identifier for the site.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.remove = function(connectedSiteId) {\n    return this.removeWithHttpInfo(connectedSiteId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List connected sites\n   * Get all connected sites in an account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ConnectedSites} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/connected-sites', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List connected sites\n   * Get all connected sites in an account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ConnectedSites}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get connected site\n   * Get information about a specific connected site.\n   * @param {String} connectedSiteId The unique identifier for the site.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ConnectedSite} and HTTP response\n   */\n  this.getWithHttpInfo = function(connectedSiteId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'connectedSiteId' is set\n    if (connectedSiteId === undefined || connectedSiteId === null) {\n      throw new Error(\"Missing the required parameter 'connectedSiteId' when calling \");\n    }\n\n    var pathParams = {\n      'connected_site_id': connectedSiteId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/connected-sites/{connected_site_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get connected site\n   * Get information about a specific connected site.\n   * @param {String} connectedSiteId The unique identifier for the site.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ConnectedSite}\n   */\n  this.get = function(connectedSiteId, opts) {\n    return this.getWithHttpInfo(connectedSiteId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add connected site\n   * Create a new Mailchimp connected site.\n   * @param {module:model/ConnectedSite1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ConnectedSite} and HTTP response\n   */\n  this.createWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/connected-sites', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add connected site\n   * Create a new Mailchimp connected site.\n   * @param {module:model/ConnectedSite1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ConnectedSite}\n   */\n  this.create = function(body) {\n    return this.createWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Verify connected site script\n   * Verify that the connected sites script has been installed, either via the script URL or fragment.\n   * @param {String} connectedSiteId The unique identifier for the site.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.verifyScriptInstallationWithHttpInfo = function(connectedSiteId) {\n    var postBody = null;\n\n    // verify the required parameter 'connectedSiteId' is set\n    if (connectedSiteId === undefined || connectedSiteId === null) {\n      throw new Error(\"Missing the required parameter 'connectedSiteId' when calling \");\n    }\n\n    var pathParams = {\n      'connected_site_id': connectedSiteId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/connected-sites/{connected_site_id}/actions/verify-script-installation', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Verify connected site script\n   * Verify that the connected sites script has been installed, either via the script URL or fragment.\n   * @param {String} connectedSiteId The unique identifier for the site.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.verifyScriptInstallation = function(connectedSiteId) {\n    return this.verifyScriptInstallationWithHttpInfo(connectedSiteId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Conversations service.\n * @module api/ConversationsApi\n */\n\n/**\n * Constructs a new ConversationsApi. \n * @alias module:api/ConversationsApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * List conversations\n   * Get a list of conversations for the account. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages aren’t available using this endpoint.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.hasUnreadMessages Whether the conversation has any unread messages.\n   * @param {String} opts.listId The unique id for the list.\n   * @param {String} opts.campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TrackedConversations} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'has_unread_messages': opts['hasUnreadMessages'],\n      'list_id': opts['listId'],\n      'campaign_id': opts['campaignId']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/conversations', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List conversations\n   * Get a list of conversations for the account. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages aren’t available using this endpoint.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.hasUnreadMessages Whether the conversation has any unread messages.\n   * @param {String} opts.listId The unique id for the list.\n   * @param {String} opts.campaignId The unique id for the campaign.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TrackedConversations}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get conversation\n   * Get details about an individual conversation. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages aren’t available using this endpoint.\n   * @param {String} conversationId The unique id for the conversation.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Conversation} and HTTP response\n   */\n  this.getWithHttpInfo = function(conversationId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'conversationId' is set\n    if (conversationId === undefined || conversationId === null) {\n      throw new Error(\"Missing the required parameter 'conversationId' when calling \");\n    }\n\n    var pathParams = {\n      'conversation_id': conversationId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/conversations/{conversation_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get conversation\n   * Get details about an individual conversation. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages aren’t available using this endpoint.\n   * @param {String} conversationId The unique id for the conversation.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Conversation}\n   */\n  this.get = function(conversationId, opts) {\n    return this.getWithHttpInfo(conversationId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List messages\n   * Get messages from a specific conversation. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages aren’t available using this endpoint.\n   * @param {String} conversationId The unique id for the conversation.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {module:model/String} opts.isRead Whether a conversation message has been marked as read.\n   * @param {Date} opts.beforeTimestamp Restrict the response to messages created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceTimestamp Restrict the response to messages created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CollectionOfConversationMessages} and HTTP response\n   */\n  this.getConversationMessagesWithHttpInfo = function(conversationId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'conversationId' is set\n    if (conversationId === undefined || conversationId === null) {\n      throw new Error(\"Missing the required parameter 'conversationId' when calling \");\n    }\n\n    var pathParams = {\n      'conversation_id': conversationId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'is_read': opts['isRead'],\n      'before_timestamp': opts['beforeTimestamp'],\n      'since_timestamp': opts['sinceTimestamp']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/conversations/{conversation_id}/messages', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List messages\n   * Get messages from a specific conversation. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages aren’t available using this endpoint.\n   * @param {String} conversationId The unique id for the conversation.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {module:model/String} opts.isRead Whether a conversation message has been marked as read.\n   * @param {Date} opts.beforeTimestamp Restrict the response to messages created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceTimestamp Restrict the response to messages created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CollectionOfConversationMessages}\n   */\n  this.getConversationMessages = function(conversationId, opts) {\n    return this.getConversationMessagesWithHttpInfo(conversationId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get message\n   * Get an individual message in a conversation. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages aren’t available using this endpoint.\n   * @param {String} conversationId The unique id for the conversation.\n   * @param {String} messageId The unique id for the conversation message.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ConversationMessage} and HTTP response\n   */\n  this.getConversationMessageWithHttpInfo = function(conversationId, messageId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'conversationId' is set\n    if (conversationId === undefined || conversationId === null) {\n      throw new Error(\"Missing the required parameter 'conversationId' when calling \");\n    }\n\n    // verify the required parameter 'messageId' is set\n    if (messageId === undefined || messageId === null) {\n      throw new Error(\"Missing the required parameter 'messageId' when calling \");\n    }\n\n    var pathParams = {\n      'conversation_id': conversationId,\n      'message_id': messageId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/conversations/{conversation_id}/messages/{message_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get message\n   * Get an individual message in a conversation. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages aren’t available using this endpoint.\n   * @param {String} conversationId The unique id for the conversation.\n   * @param {String} messageId The unique id for the conversation message.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ConversationMessage}\n   */\n  this.getConversationMessage = function(conversationId, messageId, opts) {\n    return this.getConversationMessageWithHttpInfo(conversationId, messageId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * CustomerJourneys service.\n * @module api/CustomerJourneysApi\n */\n\n/**\n * Constructs a new CustomerJourneysApi. \n * @alias module:api/CustomerJourneysApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Customer Journeys API trigger for a contact\n   * A step trigger in a Customer Journey. To use it, create a starting point or step from the Customer Journey builder in the app using the Customer Journeys API condition. We’ll provide a url during the process that includes the {journey_id} and {step_id}. You’ll then be able to use this endpoint to trigger the condition for the posted contact.\n   * @param {Number} journeyId The id for the Journey.\n   * @param {Number} stepId The id for the Step.\n   * @param {module:model/SubscriberInCustomerJourneysAudience} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object} and HTTP response\n   */\n  this.triggerWithHttpInfo = function(journeyId, stepId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'journeyId' is set\n    if (journeyId === undefined || journeyId === null) {\n      throw new Error(\"Missing the required parameter 'journeyId' when calling \");\n    }\n\n    // verify the required parameter 'stepId' is set\n    if (stepId === undefined || stepId === null) {\n      throw new Error(\"Missing the required parameter 'stepId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'journey_id': journeyId,\n      'step_id': stepId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Customer Journeys API trigger for a contact\n   * A step trigger in a Customer Journey. To use it, create a starting point or step from the Customer Journey builder in the app using the Customer Journeys API condition. We’ll provide a url during the process that includes the {journey_id} and {step_id}. You’ll then be able to use this endpoint to trigger the condition for the posted contact.\n   * @param {Number} journeyId The id for the Journey.\n   * @param {Number} stepId The id for the Step.\n   * @param {module:model/SubscriberInCustomerJourneysAudience} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object}\n   */\n  this.trigger = function(journeyId, stepId, body) {\n    return this.triggerWithHttpInfo(journeyId, stepId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Ecommerce service.\n * @module api/EcommerceApi\n */\n\n/**\n * Constructs a new EcommerceApi. \n * @alias module:api/EcommerceApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete store\n   * Delete a store. Deleting a store will also delete any associated subresources, including Customers, Orders, Products, and Carts.\n   * @param {String} storeId The store id.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object} and HTTP response\n   */\n  this.deleteStoreWithHttpInfo = function(storeId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete store\n   * Delete a store. Deleting a store will also delete any associated subresources, including Customers, Orders, Products, and Carts.\n   * @param {String} storeId The store id.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object}\n   */\n  this.deleteStore = function(storeId) {\n    return this.deleteStoreWithHttpInfo(storeId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete cart\n   * Delete a cart.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteStoreCartWithHttpInfo = function(storeId, cartId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'cartId' is set\n    if (cartId === undefined || cartId === null) {\n      throw new Error(\"Missing the required parameter 'cartId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'cart_id': cartId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts/{cart_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete cart\n   * Delete a cart.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteStoreCart = function(storeId, cartId) {\n    return this.deleteStoreCartWithHttpInfo(storeId, cartId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete cart line item\n   * Delete a specific cart line item.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {String} lineId The id for the line item of a cart.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteCartLineItemWithHttpInfo = function(storeId, cartId, lineId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'cartId' is set\n    if (cartId === undefined || cartId === null) {\n      throw new Error(\"Missing the required parameter 'cartId' when calling \");\n    }\n\n    // verify the required parameter 'lineId' is set\n    if (lineId === undefined || lineId === null) {\n      throw new Error(\"Missing the required parameter 'lineId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'cart_id': cartId,\n      'line_id': lineId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete cart line item\n   * Delete a specific cart line item.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {String} lineId The id for the line item of a cart.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteCartLineItem = function(storeId, cartId, lineId) {\n    return this.deleteCartLineItemWithHttpInfo(storeId, cartId, lineId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete customer\n   * Delete a customer from a store.\n   * @param {String} storeId The store id.\n   * @param {String} customerId The id for the customer of a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteStoreCustomerWithHttpInfo = function(storeId, customerId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'customerId' is set\n    if (customerId === undefined || customerId === null) {\n      throw new Error(\"Missing the required parameter 'customerId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'customer_id': customerId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/customers/{customer_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete customer\n   * Delete a customer from a store.\n   * @param {String} storeId The store id.\n   * @param {String} customerId The id for the customer of a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteStoreCustomer = function(storeId, customerId) {\n    return this.deleteStoreCustomerWithHttpInfo(storeId, customerId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete order\n   * Delete an order.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteOrderWithHttpInfo = function(storeId, orderId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'orderId' is set\n    if (orderId === undefined || orderId === null) {\n      throw new Error(\"Missing the required parameter 'orderId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'order_id': orderId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders/{order_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete order\n   * Delete an order.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteOrder = function(storeId, orderId) {\n    return this.deleteOrderWithHttpInfo(storeId, orderId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete order line item\n   * Delete a specific order line item.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {String} lineId The id for the line item of an order.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteOrderLineItemWithHttpInfo = function(storeId, orderId, lineId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'orderId' is set\n    if (orderId === undefined || orderId === null) {\n      throw new Error(\"Missing the required parameter 'orderId' when calling \");\n    }\n\n    // verify the required parameter 'lineId' is set\n    if (lineId === undefined || lineId === null) {\n      throw new Error(\"Missing the required parameter 'lineId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'order_id': orderId,\n      'line_id': lineId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete order line item\n   * Delete a specific order line item.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {String} lineId The id for the line item of an order.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteOrderLineItem = function(storeId, orderId, lineId) {\n    return this.deleteOrderLineItemWithHttpInfo(storeId, orderId, lineId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete product\n   * Delete a product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteStoreProductWithHttpInfo = function(storeId, productId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete product\n   * Delete a product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteStoreProduct = function(storeId, productId) {\n    return this.deleteStoreProductWithHttpInfo(storeId, productId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete product image\n   * Delete a product image.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} imageId The id for the product image.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteProductImageWithHttpInfo = function(storeId, productId, imageId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'imageId' is set\n    if (imageId === undefined || imageId === null) {\n      throw new Error(\"Missing the required parameter 'imageId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId,\n      'image_id': imageId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete product image\n   * Delete a product image.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} imageId The id for the product image.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteProductImage = function(storeId, productId, imageId) {\n    return this.deleteProductImageWithHttpInfo(storeId, productId, imageId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete product variant\n   * Delete a product variant.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} variantId The id for the product variant.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteProductVariantWithHttpInfo = function(storeId, productId, variantId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'variantId' is set\n    if (variantId === undefined || variantId === null) {\n      throw new Error(\"Missing the required parameter 'variantId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId,\n      'variant_id': variantId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete product variant\n   * Delete a product variant.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} variantId The id for the product variant.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteProductVariant = function(storeId, productId, variantId) {\n    return this.deleteProductVariantWithHttpInfo(storeId, productId, variantId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete promo code\n   * Delete a promo code from a store.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {String} promoCodeId The id for the promo code of a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deletePromoCodeWithHttpInfo = function(storeId, promoRuleId, promoCodeId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'promoRuleId' is set\n    if (promoRuleId === undefined || promoRuleId === null) {\n      throw new Error(\"Missing the required parameter 'promoRuleId' when calling \");\n    }\n\n    // verify the required parameter 'promoCodeId' is set\n    if (promoCodeId === undefined || promoCodeId === null) {\n      throw new Error(\"Missing the required parameter 'promoCodeId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'promo_rule_id': promoRuleId,\n      'promo_code_id': promoCodeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete promo code\n   * Delete a promo code from a store.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {String} promoCodeId The id for the promo code of a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deletePromoCode = function(storeId, promoRuleId, promoCodeId) {\n    return this.deletePromoCodeWithHttpInfo(storeId, promoRuleId, promoCodeId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete promo rule\n   * Delete a promo rule from a store.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deletePromoRuleWithHttpInfo = function(storeId, promoRuleId) {\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'promoRuleId' is set\n    if (promoRuleId === undefined || promoRuleId === null) {\n      throw new Error(\"Missing the required parameter 'promoRuleId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'promo_rule_id': promoRuleId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete promo rule\n   * Delete a promo rule from a store.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deletePromoRule = function(storeId, promoRuleId) {\n    return this.deletePromoRuleWithHttpInfo(storeId, promoRuleId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List account orders\n   * Get information about an account's orders.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.campaignId Restrict results to orders with a specific `campaign_id` value.\n   * @param {String} opts.outreachId Restrict results to orders with a specific `outreach_id` value.\n   * @param {String} opts.customerId Restrict results to orders made by a specific customer.\n   * @param {Boolean} opts.hasOutreach Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Orders} and HTTP response\n   */\n  this.ordersWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'campaign_id': opts['campaignId'],\n      'outreach_id': opts['outreachId'],\n      'customer_id': opts['customerId'],\n      'has_outreach': opts['hasOutreach']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/orders', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List account orders\n   * Get information about an account's orders.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.campaignId Restrict results to orders with a specific `campaign_id` value.\n   * @param {String} opts.outreachId Restrict results to orders with a specific `outreach_id` value.\n   * @param {String} opts.customerId Restrict results to orders made by a specific customer.\n   * @param {Boolean} opts.hasOutreach Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Orders}\n   */\n  this.orders = function(opts) {\n    return this.ordersWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List stores\n   * Get information about all stores in the account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceStores} and HTTP response\n   */\n  this.storesWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List stores\n   * Get information about all stores in the account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceStores}\n   */\n  this.stores = function(opts) {\n    return this.storesWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get store info\n   * Get information about a specific store.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceStore} and HTTP response\n   */\n  this.getStoreWithHttpInfo = function(storeId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get store info\n   * Get information about a specific store.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceStore}\n   */\n  this.getStore = function(storeId, opts) {\n    return this.getStoreWithHttpInfo(storeId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List carts\n   * Get information about a store's carts.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Carts} and HTTP response\n   */\n  this.getStoreCartsWithHttpInfo = function(storeId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List carts\n   * Get information about a store's carts.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Carts}\n   */\n  this.getStoreCarts = function(storeId, opts) {\n    return this.getStoreCartsWithHttpInfo(storeId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get cart info\n   * Get information about a specific cart.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCart} and HTTP response\n   */\n  this.getStoreCartWithHttpInfo = function(storeId, cartId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'cartId' is set\n    if (cartId === undefined || cartId === null) {\n      throw new Error(\"Missing the required parameter 'cartId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'cart_id': cartId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts/{cart_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get cart info\n   * Get information about a specific cart.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCart}\n   */\n  this.getStoreCart = function(storeId, cartId, opts) {\n    return this.getStoreCartWithHttpInfo(storeId, cartId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List cart line items\n   * Get information about a cart's line items.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CartLines} and HTTP response\n   */\n  this.getAllCartLineItemsWithHttpInfo = function(storeId, cartId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'cartId' is set\n    if (cartId === undefined || cartId === null) {\n      throw new Error(\"Missing the required parameter 'cartId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'cart_id': cartId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts/{cart_id}/lines', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List cart line items\n   * Get information about a cart's line items.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CartLines}\n   */\n  this.getAllCartLineItems = function(storeId, cartId, opts) {\n    return this.getAllCartLineItemsWithHttpInfo(storeId, cartId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get cart line item\n   * Get information about a specific cart line item.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {String} lineId The id for the line item of a cart.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCartLineItem} and HTTP response\n   */\n  this.getCartLineItemWithHttpInfo = function(storeId, cartId, lineId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'cartId' is set\n    if (cartId === undefined || cartId === null) {\n      throw new Error(\"Missing the required parameter 'cartId' when calling \");\n    }\n\n    // verify the required parameter 'lineId' is set\n    if (lineId === undefined || lineId === null) {\n      throw new Error(\"Missing the required parameter 'lineId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'cart_id': cartId,\n      'line_id': lineId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get cart line item\n   * Get information about a specific cart line item.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {String} lineId The id for the line item of a cart.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCartLineItem}\n   */\n  this.getCartLineItem = function(storeId, cartId, lineId, opts) {\n    return this.getCartLineItemWithHttpInfo(storeId, cartId, lineId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List customers\n   * Get information about a store's customers.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.emailAddress Restrict the response to customers with the email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Customers} and HTTP response\n   */\n  this.getAllStoreCustomersWithHttpInfo = function(storeId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'email_address': opts['emailAddress']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/customers', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List customers\n   * Get information about a store's customers.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.emailAddress Restrict the response to customers with the email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Customers}\n   */\n  this.getAllStoreCustomers = function(storeId, opts) {\n    return this.getAllStoreCustomersWithHttpInfo(storeId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get customer info\n   * Get information about a specific customer.\n   * @param {String} storeId The store id.\n   * @param {String} customerId The id for the customer of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCustomer} and HTTP response\n   */\n  this.getStoreCustomerWithHttpInfo = function(storeId, customerId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'customerId' is set\n    if (customerId === undefined || customerId === null) {\n      throw new Error(\"Missing the required parameter 'customerId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'customer_id': customerId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/customers/{customer_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get customer info\n   * Get information about a specific customer.\n   * @param {String} storeId The store id.\n   * @param {String} customerId The id for the customer of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCustomer}\n   */\n  this.getStoreCustomer = function(storeId, customerId, opts) {\n    return this.getStoreCustomerWithHttpInfo(storeId, customerId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List orders\n   * Get information about a store's orders.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.customerId Restrict results to orders made by a specific customer.\n   * @param {Boolean} opts.hasOutreach Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.\n   * @param {String} opts.campaignId Restrict results to orders with a specific `campaign_id` value.\n   * @param {String} opts.outreachId Restrict results to orders with a specific `outreach_id` value.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Orders1} and HTTP response\n   */\n  this.getStoreOrdersWithHttpInfo = function(storeId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'customer_id': opts['customerId'],\n      'has_outreach': opts['hasOutreach'],\n      'campaign_id': opts['campaignId'],\n      'outreach_id': opts['outreachId']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List orders\n   * Get information about a store's orders.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.customerId Restrict results to orders made by a specific customer.\n   * @param {Boolean} opts.hasOutreach Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.\n   * @param {String} opts.campaignId Restrict results to orders with a specific `campaign_id` value.\n   * @param {String} opts.outreachId Restrict results to orders with a specific `outreach_id` value.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Orders1}\n   */\n  this.getStoreOrders = function(storeId, opts) {\n    return this.getStoreOrdersWithHttpInfo(storeId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get order info\n   * Get information about a specific order.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceOrder} and HTTP response\n   */\n  this.getOrderWithHttpInfo = function(storeId, orderId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'orderId' is set\n    if (orderId === undefined || orderId === null) {\n      throw new Error(\"Missing the required parameter 'orderId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'order_id': orderId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders/{order_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get order info\n   * Get information about a specific order.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceOrder}\n   */\n  this.getOrder = function(storeId, orderId, opts) {\n    return this.getOrderWithHttpInfo(storeId, orderId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List order line items\n   * Get information about an order's line items.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/OrderLines} and HTTP response\n   */\n  this.getAllOrderLineItemsWithHttpInfo = function(storeId, orderId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'orderId' is set\n    if (orderId === undefined || orderId === null) {\n      throw new Error(\"Missing the required parameter 'orderId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'order_id': orderId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders/{order_id}/lines', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List order line items\n   * Get information about an order's line items.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/OrderLines}\n   */\n  this.getAllOrderLineItems = function(storeId, orderId, opts) {\n    return this.getAllOrderLineItemsWithHttpInfo(storeId, orderId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get order line item\n   * Get information about a specific order line item.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {String} lineId The id for the line item of an order.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceOrderLineItem} and HTTP response\n   */\n  this.getOrderLineItemWithHttpInfo = function(storeId, orderId, lineId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'orderId' is set\n    if (orderId === undefined || orderId === null) {\n      throw new Error(\"Missing the required parameter 'orderId' when calling \");\n    }\n\n    // verify the required parameter 'lineId' is set\n    if (lineId === undefined || lineId === null) {\n      throw new Error(\"Missing the required parameter 'lineId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'order_id': orderId,\n      'line_id': lineId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get order line item\n   * Get information about a specific order line item.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {String} lineId The id for the line item of an order.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceOrderLineItem}\n   */\n  this.getOrderLineItem = function(storeId, orderId, lineId, opts) {\n    return this.getOrderLineItemWithHttpInfo(storeId, orderId, lineId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List product\n   * Get information about a store's products.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Products} and HTTP response\n   */\n  this.getAllStoreProductsWithHttpInfo = function(storeId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List product\n   * Get information about a store's products.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Products}\n   */\n  this.getAllStoreProducts = function(storeId, opts) {\n    return this.getAllStoreProductsWithHttpInfo(storeId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get product info\n   * Get information about a specific product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProduct} and HTTP response\n   */\n  this.getStoreProductWithHttpInfo = function(storeId, productId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get product info\n   * Get information about a specific product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProduct}\n   */\n  this.getStoreProduct = function(storeId, productId, opts) {\n    return this.getStoreProductWithHttpInfo(storeId, productId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List product images\n   * Get information about a product's images.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProductImages} and HTTP response\n   */\n  this.getProductImagesWithHttpInfo = function(storeId, productId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/images', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List product images\n   * Get information about a product's images.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProductImages}\n   */\n  this.getProductImages = function(storeId, productId, opts) {\n    return this.getProductImagesWithHttpInfo(storeId, productId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get product image info\n   * Get information about a specific product image.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} imageId The id for the product image.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProductImage} and HTTP response\n   */\n  this.getProductImageWithHttpInfo = function(storeId, productId, imageId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'imageId' is set\n    if (imageId === undefined || imageId === null) {\n      throw new Error(\"Missing the required parameter 'imageId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId,\n      'image_id': imageId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get product image info\n   * Get information about a specific product image.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} imageId The id for the product image.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProductImage}\n   */\n  this.getProductImage = function(storeId, productId, imageId, opts) {\n    return this.getProductImageWithHttpInfo(storeId, productId, imageId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List product variants\n   * Get information about a product's variants.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProductVariants} and HTTP response\n   */\n  this.getProductVariantsWithHttpInfo = function(storeId, productId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/variants', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List product variants\n   * Get information about a product's variants.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProductVariants}\n   */\n  this.getProductVariants = function(storeId, productId, opts) {\n    return this.getProductVariantsWithHttpInfo(storeId, productId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get product variant info\n   * Get information about a specific product variant.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} variantId The id for the product variant.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProductVariant} and HTTP response\n   */\n  this.getProductVariantWithHttpInfo = function(storeId, productId, variantId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'variantId' is set\n    if (variantId === undefined || variantId === null) {\n      throw new Error(\"Missing the required parameter 'variantId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId,\n      'variant_id': variantId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get product variant info\n   * Get information about a specific product variant.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} variantId The id for the product variant.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProductVariant}\n   */\n  this.getProductVariant = function(storeId, productId, variantId, opts) {\n    return this.getProductVariantWithHttpInfo(storeId, productId, variantId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List promo codes\n   * Get information about a store's promo codes.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PromoCodes} and HTTP response\n   */\n  this.getPromoCodesWithHttpInfo = function(promoRuleId, storeId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'promoRuleId' is set\n    if (promoRuleId === undefined || promoRuleId === null) {\n      throw new Error(\"Missing the required parameter 'promoRuleId' when calling \");\n    }\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    var pathParams = {\n      'promo_rule_id': promoRuleId,\n      'store_id': storeId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List promo codes\n   * Get information about a store's promo codes.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PromoCodes}\n   */\n  this.getPromoCodes = function(promoRuleId, storeId, opts) {\n    return this.getPromoCodesWithHttpInfo(promoRuleId, storeId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get promo code\n   * Get information about a specific promo code.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {String} promoCodeId The id for the promo code of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommercePromoCode} and HTTP response\n   */\n  this.getPromoCodeWithHttpInfo = function(storeId, promoRuleId, promoCodeId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'promoRuleId' is set\n    if (promoRuleId === undefined || promoRuleId === null) {\n      throw new Error(\"Missing the required parameter 'promoRuleId' when calling \");\n    }\n\n    // verify the required parameter 'promoCodeId' is set\n    if (promoCodeId === undefined || promoCodeId === null) {\n      throw new Error(\"Missing the required parameter 'promoCodeId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'promo_rule_id': promoRuleId,\n      'promo_code_id': promoCodeId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get promo code\n   * Get information about a specific promo code.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {String} promoCodeId The id for the promo code of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommercePromoCode}\n   */\n  this.getPromoCode = function(storeId, promoRuleId, promoCodeId, opts) {\n    return this.getPromoCodeWithHttpInfo(storeId, promoRuleId, promoCodeId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List promo rules\n   * Get information about a store's promo rules.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PromoRules} and HTTP response\n   */\n  this.listPromoRulesWithHttpInfo = function(storeId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List promo rules\n   * Get information about a store's promo rules.\n   * @param {String} storeId The store id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PromoRules}\n   */\n  this.listPromoRules = function(storeId, opts) {\n    return this.listPromoRulesWithHttpInfo(storeId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get promo rule\n   * Get information about a specific promo rule.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommercePromoRule} and HTTP response\n   */\n  this.getPromoRuleWithHttpInfo = function(storeId, promoRuleId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'promoRuleId' is set\n    if (promoRuleId === undefined || promoRuleId === null) {\n      throw new Error(\"Missing the required parameter 'promoRuleId' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'promo_rule_id': promoRuleId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get promo rule\n   * Get information about a specific promo rule.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommercePromoRule}\n   */\n  this.getPromoRule = function(storeId, promoRuleId, opts) {\n    return this.getPromoRuleWithHttpInfo(storeId, promoRuleId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update store\n   * Update a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceStore2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceStore} and HTTP response\n   */\n  this.updateStoreWithHttpInfo = function(storeId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update store\n   * Update a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceStore2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceStore}\n   */\n  this.updateStore = function(storeId, body) {\n    return this.updateStoreWithHttpInfo(storeId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update cart\n   * Update a specific cart.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {module:model/EcommerceCart2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCart} and HTTP response\n   */\n  this.updateStoreCartWithHttpInfo = function(storeId, cartId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'cartId' is set\n    if (cartId === undefined || cartId === null) {\n      throw new Error(\"Missing the required parameter 'cartId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'cart_id': cartId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts/{cart_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update cart\n   * Update a specific cart.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {module:model/EcommerceCart2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCart}\n   */\n  this.updateStoreCart = function(storeId, cartId, body) {\n    return this.updateStoreCartWithHttpInfo(storeId, cartId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update cart line item\n   * Update a specific cart line item.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {String} lineId The id for the line item of a cart.\n   * @param {module:model/EcommerceCartLineItem4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCartLineItem} and HTTP response\n   */\n  this.updateCartLineItemWithHttpInfo = function(storeId, cartId, lineId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'cartId' is set\n    if (cartId === undefined || cartId === null) {\n      throw new Error(\"Missing the required parameter 'cartId' when calling \");\n    }\n\n    // verify the required parameter 'lineId' is set\n    if (lineId === undefined || lineId === null) {\n      throw new Error(\"Missing the required parameter 'lineId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'cart_id': cartId,\n      'line_id': lineId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update cart line item\n   * Update a specific cart line item.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {String} lineId The id for the line item of a cart.\n   * @param {module:model/EcommerceCartLineItem4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCartLineItem}\n   */\n  this.updateCartLineItem = function(storeId, cartId, lineId, body) {\n    return this.updateCartLineItemWithHttpInfo(storeId, cartId, lineId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update customer\n   * Update a customer.\n   * @param {String} storeId The store id.\n   * @param {String} customerId The id for the customer of a store.\n   * @param {module:model/EcommerceCustomer5} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCustomer} and HTTP response\n   */\n  this.updateStoreCustomerWithHttpInfo = function(storeId, customerId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'customerId' is set\n    if (customerId === undefined || customerId === null) {\n      throw new Error(\"Missing the required parameter 'customerId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'customer_id': customerId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/customers/{customer_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update customer\n   * Update a customer.\n   * @param {String} storeId The store id.\n   * @param {String} customerId The id for the customer of a store.\n   * @param {module:model/EcommerceCustomer5} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCustomer}\n   */\n  this.updateStoreCustomer = function(storeId, customerId, body) {\n    return this.updateStoreCustomerWithHttpInfo(storeId, customerId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update order\n   * Update a specific order.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {module:model/EcommerceOrder2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceOrder} and HTTP response\n   */\n  this.updateOrderWithHttpInfo = function(storeId, orderId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'orderId' is set\n    if (orderId === undefined || orderId === null) {\n      throw new Error(\"Missing the required parameter 'orderId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'order_id': orderId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders/{order_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update order\n   * Update a specific order.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {module:model/EcommerceOrder2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceOrder}\n   */\n  this.updateOrder = function(storeId, orderId, body) {\n    return this.updateOrderWithHttpInfo(storeId, orderId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update order line item\n   * Update a specific order line item.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {String} lineId The id for the line item of an order.\n   * @param {module:model/EcommerceOrderLineItem4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceOrderLineItem} and HTTP response\n   */\n  this.updateOrderLineItemWithHttpInfo = function(storeId, orderId, lineId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'orderId' is set\n    if (orderId === undefined || orderId === null) {\n      throw new Error(\"Missing the required parameter 'orderId' when calling \");\n    }\n\n    // verify the required parameter 'lineId' is set\n    if (lineId === undefined || lineId === null) {\n      throw new Error(\"Missing the required parameter 'lineId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'order_id': orderId,\n      'line_id': lineId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update order line item\n   * Update a specific order line item.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {String} lineId The id for the line item of an order.\n   * @param {module:model/EcommerceOrderLineItem4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceOrderLineItem}\n   */\n  this.updateOrderLineItem = function(storeId, orderId, lineId, body) {\n    return this.updateOrderLineItemWithHttpInfo(storeId, orderId, lineId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update product\n   * Update a specific product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {module:model/EcommerceProduct2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProduct} and HTTP response\n   */\n  this.updateStoreProductWithHttpInfo = function(storeId, productId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update product\n   * Update a specific product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {module:model/EcommerceProduct2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProduct}\n   */\n  this.updateStoreProduct = function(storeId, productId, body) {\n    return this.updateStoreProductWithHttpInfo(storeId, productId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update product image\n   * Update a product image.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} imageId The id for the product image.\n   * @param {module:model/EcommerceProductImage4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProductImage} and HTTP response\n   */\n  this.updateProductImageWithHttpInfo = function(storeId, productId, imageId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'imageId' is set\n    if (imageId === undefined || imageId === null) {\n      throw new Error(\"Missing the required parameter 'imageId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId,\n      'image_id': imageId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update product image\n   * Update a product image.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} imageId The id for the product image.\n   * @param {module:model/EcommerceProductImage4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProductImage}\n   */\n  this.updateProductImage = function(storeId, productId, imageId, body) {\n    return this.updateProductImageWithHttpInfo(storeId, productId, imageId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update product variant\n   * Update a product variant.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} variantId The id for the product variant.\n   * @param {module:model/EcommerceProductVariant5} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProductVariant} and HTTP response\n   */\n  this.updateProductVariantWithHttpInfo = function(storeId, productId, variantId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'variantId' is set\n    if (variantId === undefined || variantId === null) {\n      throw new Error(\"Missing the required parameter 'variantId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId,\n      'variant_id': variantId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update product variant\n   * Update a product variant.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} variantId The id for the product variant.\n   * @param {module:model/EcommerceProductVariant5} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProductVariant}\n   */\n  this.updateProductVariant = function(storeId, productId, variantId, body) {\n    return this.updateProductVariantWithHttpInfo(storeId, productId, variantId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update promo code\n   * Update a promo code.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {String} promoCodeId The id for the promo code of a store.\n   * @param {module:model/EcommercePromoCode2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommercePromoCode} and HTTP response\n   */\n  this.updatePromoCodeWithHttpInfo = function(storeId, promoRuleId, promoCodeId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'promoRuleId' is set\n    if (promoRuleId === undefined || promoRuleId === null) {\n      throw new Error(\"Missing the required parameter 'promoRuleId' when calling \");\n    }\n\n    // verify the required parameter 'promoCodeId' is set\n    if (promoCodeId === undefined || promoCodeId === null) {\n      throw new Error(\"Missing the required parameter 'promoCodeId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'promo_rule_id': promoRuleId,\n      'promo_code_id': promoCodeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update promo code\n   * Update a promo code.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {String} promoCodeId The id for the promo code of a store.\n   * @param {module:model/EcommercePromoCode2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommercePromoCode}\n   */\n  this.updatePromoCode = function(storeId, promoRuleId, promoCodeId, body) {\n    return this.updatePromoCodeWithHttpInfo(storeId, promoRuleId, promoCodeId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update promo rule\n   * Update a promo rule.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {module:model/EcommercePromoRule2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommercePromoRule} and HTTP response\n   */\n  this.updatePromoRuleWithHttpInfo = function(storeId, promoRuleId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'promoRuleId' is set\n    if (promoRuleId === undefined || promoRuleId === null) {\n      throw new Error(\"Missing the required parameter 'promoRuleId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'promo_rule_id': promoRuleId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update promo rule\n   * Update a promo rule.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {module:model/EcommercePromoRule2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommercePromoRule}\n   */\n  this.updatePromoRule = function(storeId, promoRuleId, body) {\n    return this.updatePromoRuleWithHttpInfo(storeId, promoRuleId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add store\n   * Add a new store to your Mailchimp account.\n   * @param {module:model/EcommerceStore1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceStore} and HTTP response\n   */\n  this.addStoreWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add store\n   * Add a new store to your Mailchimp account.\n   * @param {module:model/EcommerceStore1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceStore}\n   */\n  this.addStore = function(body) {\n    return this.addStoreWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add cart\n   * Add a new cart to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceCart1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCart} and HTTP response\n   */\n  this.addStoreCartWithHttpInfo = function(storeId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add cart\n   * Add a new cart to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceCart1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCart}\n   */\n  this.addStoreCart = function(storeId, body) {\n    return this.addStoreCartWithHttpInfo(storeId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add cart line item\n   * Add a new line item to an existing cart.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {module:model/EcommerceCartLineItem3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCartLineItem} and HTTP response\n   */\n  this.addCartLineItemWithHttpInfo = function(storeId, cartId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'cartId' is set\n    if (cartId === undefined || cartId === null) {\n      throw new Error(\"Missing the required parameter 'cartId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'cart_id': cartId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/carts/{cart_id}/lines', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add cart line item\n   * Add a new line item to an existing cart.\n   * @param {String} storeId The store id.\n   * @param {String} cartId The id for the cart.\n   * @param {module:model/EcommerceCartLineItem3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCartLineItem}\n   */\n  this.addCartLineItem = function(storeId, cartId, body) {\n    return this.addCartLineItemWithHttpInfo(storeId, cartId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add customer\n   * Add a new customer to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceCustomer3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCustomer} and HTTP response\n   */\n  this.addStoreCustomerWithHttpInfo = function(storeId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/customers', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add customer\n   * Add a new customer to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceCustomer3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCustomer}\n   */\n  this.addStoreCustomer = function(storeId, body) {\n    return this.addStoreCustomerWithHttpInfo(storeId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add order\n   * Add a new order to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceOrder1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceOrder} and HTTP response\n   */\n  this.addStoreOrderWithHttpInfo = function(storeId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add order\n   * Add a new order to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceOrder1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceOrder}\n   */\n  this.addStoreOrder = function(storeId, body) {\n    return this.addStoreOrderWithHttpInfo(storeId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add order line item\n   * Add a new line item to an existing order.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {module:model/EcommerceOrderLineItem3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceOrderLineItem} and HTTP response\n   */\n  this.addOrderLineItemWithHttpInfo = function(storeId, orderId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'orderId' is set\n    if (orderId === undefined || orderId === null) {\n      throw new Error(\"Missing the required parameter 'orderId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'order_id': orderId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/orders/{order_id}/lines', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add order line item\n   * Add a new line item to an existing order.\n   * @param {String} storeId The store id.\n   * @param {String} orderId The id for the order in a store.\n   * @param {module:model/EcommerceOrderLineItem3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceOrderLineItem}\n   */\n  this.addOrderLineItem = function(storeId, orderId, body) {\n    return this.addOrderLineItemWithHttpInfo(storeId, orderId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add product\n   * Add a new product to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceProduct1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProduct} and HTTP response\n   */\n  this.addStoreProductWithHttpInfo = function(storeId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add product\n   * Add a new product to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommerceProduct1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProduct}\n   */\n  this.addStoreProduct = function(storeId, body) {\n    return this.addStoreProductWithHttpInfo(storeId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add product image\n   * Add a new image to the product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {module:model/EcommerceProductImage3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProductImage} and HTTP response\n   */\n  this.addProductImageWithHttpInfo = function(storeId, productId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/images', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add product image\n   * Add a new image to the product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {module:model/EcommerceProductImage3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProductImage}\n   */\n  this.addProductImage = function(storeId, productId, body) {\n    return this.addProductImageWithHttpInfo(storeId, productId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add product variant\n   * Add a new variant to the product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {module:model/EcommerceProductVariant3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProductVariant} and HTTP response\n   */\n  this.addProductVariantsWithHttpInfo = function(storeId, productId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/variants', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add product variant\n   * Add a new variant to the product.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {module:model/EcommerceProductVariant3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProductVariant}\n   */\n  this.addProductVariants = function(storeId, productId, body) {\n    return this.addProductVariantsWithHttpInfo(storeId, productId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add promo code\n   * Add a new promo code to a store.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {module:model/EcommercePromoCode1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommercePromoCode} and HTTP response\n   */\n  this.addPromoCodeWithHttpInfo = function(storeId, promoRuleId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'promoRuleId' is set\n    if (promoRuleId === undefined || promoRuleId === null) {\n      throw new Error(\"Missing the required parameter 'promoRuleId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'promo_rule_id': promoRuleId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add promo code\n   * Add a new promo code to a store.\n   * @param {String} storeId The store id.\n   * @param {String} promoRuleId The id for the promo rule of a store.\n   * @param {module:model/EcommercePromoCode1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommercePromoCode}\n   */\n  this.addPromoCode = function(storeId, promoRuleId, body) {\n    return this.addPromoCodeWithHttpInfo(storeId, promoRuleId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add promo rule\n   * Add a new promo rule to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommercePromoRule1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommercePromoRule} and HTTP response\n   */\n  this.addPromoRulesWithHttpInfo = function(storeId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/promo-rules', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add promo rule\n   * Add a new promo rule to a store.\n   * @param {String} storeId The store id.\n   * @param {module:model/EcommercePromoRule1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommercePromoRule}\n   */\n  this.addPromoRules = function(storeId, body) {\n    return this.addPromoRulesWithHttpInfo(storeId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add or update customer\n   * Add or update a customer.\n   * @param {String} storeId The store id.\n   * @param {String} customerId The id for the customer of a store.\n   * @param {module:model/EcommerceCustomer4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceCustomer} and HTTP response\n   */\n  this.setStoreCustomerWithHttpInfo = function(storeId, customerId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'customerId' is set\n    if (customerId === undefined || customerId === null) {\n      throw new Error(\"Missing the required parameter 'customerId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'customer_id': customerId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/customers/{customer_id}', 'PUT',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add or update customer\n   * Add or update a customer.\n   * @param {String} storeId The store id.\n   * @param {String} customerId The id for the customer of a store.\n   * @param {module:model/EcommerceCustomer4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceCustomer}\n   */\n  this.setStoreCustomer = function(storeId, customerId, body) {\n    return this.setStoreCustomerWithHttpInfo(storeId, customerId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add or update product variant\n   * Add or update a product variant.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} variantId The id for the product variant.\n   * @param {module:model/EcommerceProductVariant4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EcommerceProductVariant} and HTTP response\n   */\n  this.addProductVariantWithHttpInfo = function(storeId, productId, variantId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'storeId' is set\n    if (storeId === undefined || storeId === null) {\n      throw new Error(\"Missing the required parameter 'storeId' when calling \");\n    }\n\n    // verify the required parameter 'productId' is set\n    if (productId === undefined || productId === null) {\n      throw new Error(\"Missing the required parameter 'productId' when calling \");\n    }\n\n    // verify the required parameter 'variantId' is set\n    if (variantId === undefined || variantId === null) {\n      throw new Error(\"Missing the required parameter 'variantId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'store_id': storeId,\n      'product_id': productId,\n      'variant_id': variantId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}', 'PUT',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add or update product variant\n   * Add or update a product variant.\n   * @param {String} storeId The store id.\n   * @param {String} productId The id for the product of a store.\n   * @param {String} variantId The id for the product variant.\n   * @param {module:model/EcommerceProductVariant4} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EcommerceProductVariant}\n   */\n  this.addProductVariant = function(storeId, productId, variantId, body) {\n    return this.addProductVariantWithHttpInfo(storeId, productId, variantId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * FacebookAds service.\n * @module api/FacebookAdsApi\n */\n\n/**\n * Constructs a new FacebookAdsApi. \n * @alias module:api/FacebookAdsApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * List facebook ads\n   * Get list of Facebook ads.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2007} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'sort_field': opts['sortField'],\n      'sort_dir': opts['sortDir']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/facebook-ads', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List facebook ads\n   * Get list of Facebook ads.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2007}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get facebook ad info\n   * Get details of a Facebook ad.\n   * @param {String} outreachId The outreach id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2008} and HTTP response\n   */\n  this.getAdWithHttpInfo = function(outreachId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'outreachId' is set\n    if (outreachId === undefined || outreachId === null) {\n      throw new Error(\"Missing the required parameter 'outreachId' when calling \");\n    }\n\n    var pathParams = {\n      'outreach_id': outreachId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/facebook-ads/{outreach_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get facebook ad info\n   * Get details of a Facebook ad.\n   * @param {String} outreachId The outreach id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2008}\n   */\n  this.getAd = function(outreachId, opts) {\n    return this.getAdWithHttpInfo(outreachId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * FileManager service.\n * @module api/FileManagerApi\n */\n\n/**\n * Constructs a new FileManagerApi. \n * @alias module:api/FileManagerApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete file\n   * Remove a specific file from the File Manager.\n   * @param {String} fileId The unique id for the File Manager file.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteFileWithHttpInfo = function(fileId) {\n    var postBody = null;\n\n    // verify the required parameter 'fileId' is set\n    if (fileId === undefined || fileId === null) {\n      throw new Error(\"Missing the required parameter 'fileId' when calling \");\n    }\n\n    var pathParams = {\n      'file_id': fileId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/files/{file_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete file\n   * Remove a specific file from the File Manager.\n   * @param {String} fileId The unique id for the File Manager file.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteFile = function(fileId) {\n    return this.deleteFileWithHttpInfo(fileId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete folder\n   * Delete a specific folder in the File Manager.\n   * @param {String} folderId The unique id for the File Manager folder.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteFolderWithHttpInfo = function(folderId) {\n    var postBody = null;\n\n    // verify the required parameter 'folderId' is set\n    if (folderId === undefined || folderId === null) {\n      throw new Error(\"Missing the required parameter 'folderId' when calling \");\n    }\n\n    var pathParams = {\n      'folder_id': folderId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/folders/{folder_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete folder\n   * Delete a specific folder in the File Manager.\n   * @param {String} folderId The unique id for the File Manager folder.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteFolder = function(folderId) {\n    return this.deleteFolderWithHttpInfo(folderId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List stored files\n   * Get a list of available images and files stored in the File Manager for the account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.type The file type for the File Manager file.\n   * @param {String} opts.createdBy The Mailchimp account user who created the File Manager file.\n   * @param {String} opts.beforeCreatedAt Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceCreatedAt Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FileManager} and HTTP response\n   */\n  this.filesWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'type': opts['type'],\n      'created_by': opts['createdBy'],\n      'before_created_at': opts['beforeCreatedAt'],\n      'since_created_at': opts['sinceCreatedAt'],\n      'sort_field': opts['sortField'],\n      'sort_dir': opts['sortDir']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/files', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List stored files\n   * Get a list of available images and files stored in the File Manager for the account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.type The file type for the File Manager file.\n   * @param {String} opts.createdBy The Mailchimp account user who created the File Manager file.\n   * @param {String} opts.beforeCreatedAt Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceCreatedAt Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/FileManager}\n   */\n  this.files = function(opts) {\n    return this.filesWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get file\n   * Get information about a specific file in the File Manager.\n   * @param {String} fileId The unique id for the File Manager file.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GalleryFile} and HTTP response\n   */\n  this.getFileWithHttpInfo = function(fileId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'fileId' is set\n    if (fileId === undefined || fileId === null) {\n      throw new Error(\"Missing the required parameter 'fileId' when calling \");\n    }\n\n    var pathParams = {\n      'file_id': fileId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/files/{file_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get file\n   * Get information about a specific file in the File Manager.\n   * @param {String} fileId The unique id for the File Manager file.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GalleryFile}\n   */\n  this.getFile = function(fileId, opts) {\n    return this.getFileWithHttpInfo(fileId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List folders\n   * Get a list of all folders in the File Manager.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.createdBy The Mailchimp account user who created the File Manager file.\n   * @param {String} opts.beforeCreatedAt Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceCreatedAt Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FileManagerFolders} and HTTP response\n   */\n  this.listFoldersWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'created_by': opts['createdBy'],\n      'before_created_at': opts['beforeCreatedAt'],\n      'since_created_at': opts['sinceCreatedAt']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/folders', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List folders\n   * Get a list of all folders in the File Manager.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.createdBy The Mailchimp account user who created the File Manager file.\n   * @param {String} opts.beforeCreatedAt Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceCreatedAt Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/FileManagerFolders}\n   */\n  this.listFolders = function(opts) {\n    return this.listFoldersWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get folder\n   * Get information about a specific folder in the File Manager.\n   * @param {String} folderId The unique id for the File Manager folder.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GalleryFolder} and HTTP response\n   */\n  this.getFolderWithHttpInfo = function(folderId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'folderId' is set\n    if (folderId === undefined || folderId === null) {\n      throw new Error(\"Missing the required parameter 'folderId' when calling \");\n    }\n\n    var pathParams = {\n      'folder_id': folderId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/folders/{folder_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get folder\n   * Get information about a specific folder in the File Manager.\n   * @param {String} folderId The unique id for the File Manager folder.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GalleryFolder}\n   */\n  this.getFolder = function(folderId, opts) {\n    return this.getFolderWithHttpInfo(folderId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update file\n   * Update a file in the File Manager.\n   * @param {String} fileId The unique id for the File Manager file.\n   * @param {module:model/GalleryFile2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GalleryFile} and HTTP response\n   */\n  this.updateFileWithHttpInfo = function(fileId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'fileId' is set\n    if (fileId === undefined || fileId === null) {\n      throw new Error(\"Missing the required parameter 'fileId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'file_id': fileId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/files/{file_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update file\n   * Update a file in the File Manager.\n   * @param {String} fileId The unique id for the File Manager file.\n   * @param {module:model/GalleryFile2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GalleryFile}\n   */\n  this.updateFile = function(fileId, body) {\n    return this.updateFileWithHttpInfo(fileId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update folder\n   * Update a specific File Manager folder.\n   * @param {String} folderId The unique id for the File Manager folder.\n   * @param {module:model/GalleryFolder2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GalleryFolder} and HTTP response\n   */\n  this.updateFolderWithHttpInfo = function(folderId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'folderId' is set\n    if (folderId === undefined || folderId === null) {\n      throw new Error(\"Missing the required parameter 'folderId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'folder_id': folderId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/folders/{folder_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update folder\n   * Update a specific File Manager folder.\n   * @param {String} folderId The unique id for the File Manager folder.\n   * @param {module:model/GalleryFolder2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GalleryFolder}\n   */\n  this.updateFolder = function(folderId, body) {\n    return this.updateFolderWithHttpInfo(folderId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add file\n   * Upload a new image or file to the File Manager.\n   * @param {module:model/GalleryFile1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GalleryFile} and HTTP response\n   */\n  this.uploadWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/files', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add file\n   * Upload a new image or file to the File Manager.\n   * @param {module:model/GalleryFile1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GalleryFile}\n   */\n  this.upload = function(body) {\n    return this.uploadWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add folder\n   * Create a new folder in the File Manager.\n   * @param {module:model/GalleryFolder1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GalleryFolder} and HTTP response\n   */\n  this.createFolderWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/file-manager/folders', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add folder\n   * Create a new folder in the File Manager.\n   * @param {module:model/GalleryFolder1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GalleryFolder}\n   */\n  this.createFolder = function(body) {\n    return this.createFolderWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * LandingPages service.\n * @module api/LandingPagesApi\n */\n\n/**\n * Constructs a new LandingPagesApi. \n * @alias module:api/LandingPagesApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete landing page\n   * Delete a landing page.\n   * @param {String} pageId The unique id for the page.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deletePageWithHttpInfo = function(pageId) {\n    var postBody = null;\n\n    // verify the required parameter 'pageId' is set\n    if (pageId === undefined || pageId === null) {\n      throw new Error(\"Missing the required parameter 'pageId' when calling \");\n    }\n\n    var pathParams = {\n      'page_id': pageId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/landing-pages/{page_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete landing page\n   * Delete a landing page.\n   * @param {String} pageId The unique id for the page.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deletePage = function(pageId) {\n    return this.deletePageWithHttpInfo(pageId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List landing pages\n   * Get all landing pages.\n   * @param {Object} opts Optional parameters\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2005} and HTTP response\n   */\n  this.getAllWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'sort_dir': opts['sortDir'],\n      'sort_field': opts['sortField'],\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/landing-pages', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List landing pages\n   * Get all landing pages.\n   * @param {Object} opts Optional parameters\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2005}\n   */\n  this.getAll = function(opts) {\n    return this.getAllWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get landing page info\n   * Get information about a specific page.\n   * @param {String} pageId The unique id for the page.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LandingPage} and HTTP response\n   */\n  this.getPageWithHttpInfo = function(pageId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'pageId' is set\n    if (pageId === undefined || pageId === null) {\n      throw new Error(\"Missing the required parameter 'pageId' when calling \");\n    }\n\n    var pathParams = {\n      'page_id': pageId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/landing-pages/{page_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get landing page info\n   * Get information about a specific page.\n   * @param {String} pageId The unique id for the page.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LandingPage}\n   */\n  this.getPage = function(pageId, opts) {\n    return this.getPageWithHttpInfo(pageId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get landing page content\n   * Get the the HTML for your landing page.\n   * @param {String} pageId The unique id for the page.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LandingPageContent} and HTTP response\n   */\n  this.getPageContentWithHttpInfo = function(pageId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'pageId' is set\n    if (pageId === undefined || pageId === null) {\n      throw new Error(\"Missing the required parameter 'pageId' when calling \");\n    }\n\n    var pathParams = {\n      'page_id': pageId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/landing-pages/{page_id}/content', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get landing page content\n   * Get the the HTML for your landing page.\n   * @param {String} pageId The unique id for the page.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LandingPageContent}\n   */\n  this.getPageContent = function(pageId, opts) {\n    return this.getPageContentWithHttpInfo(pageId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update landing page\n   * Update a landing page.\n   * @param {String} pageId The unique id for the page.\n   * @param {module:model/LandingPage2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LandingPage} and HTTP response\n   */\n  this.updatePageWithHttpInfo = function(pageId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'pageId' is set\n    if (pageId === undefined || pageId === null) {\n      throw new Error(\"Missing the required parameter 'pageId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'page_id': pageId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/landing-pages/{page_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update landing page\n   * Update a landing page.\n   * @param {String} pageId The unique id for the page.\n   * @param {module:model/LandingPage2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LandingPage}\n   */\n  this.updatePage = function(pageId, body) {\n    return this.updatePageWithHttpInfo(pageId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add landing page\n   * Create a new Mailchimp landing page.\n   * @param {module:model/LandingPage1} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.useDefaultList Will create the Landing Page using the account's Default List instead of requiring a list_id.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LandingPage} and HTTP response\n   */\n  this.createWithHttpInfo = function(body, opts) {\n    opts = opts || {};\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'use_default_list': opts['useDefaultList']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/landing-pages', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add landing page\n   * Create a new Mailchimp landing page.\n   * @param {module:model/LandingPage1} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.useDefaultList Will create the Landing Page using the account's Default List instead of requiring a list_id.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LandingPage}\n   */\n  this.create = function(body, opts) {\n    return this.createWithHttpInfo(body, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Publish landing page\n   * Publish a landing page that is in draft, unpublished, or has been previously published and edited.\n   * @param {String} pageId The unique id for the page.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LandingPage} and HTTP response\n   */\n  this.publishPageWithHttpInfo = function(pageId) {\n    var postBody = null;\n\n    // verify the required parameter 'pageId' is set\n    if (pageId === undefined || pageId === null) {\n      throw new Error(\"Missing the required parameter 'pageId' when calling \");\n    }\n\n    var pathParams = {\n      'page_id': pageId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/landing-pages/{page_id}/actions/publish', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Publish landing page\n   * Publish a landing page that is in draft, unpublished, or has been previously published and edited.\n   * @param {String} pageId The unique id for the page.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LandingPage}\n   */\n  this.publishPage = function(pageId) {\n    return this.publishPageWithHttpInfo(pageId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Unpublish landing page\n   * Unpublish a landing page that is in draft or has been published.\n   * @param {String} pageId The unique id for the page.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.unpublishPageWithHttpInfo = function(pageId) {\n    var postBody = null;\n\n    // verify the required parameter 'pageId' is set\n    if (pageId === undefined || pageId === null) {\n      throw new Error(\"Missing the required parameter 'pageId' when calling \");\n    }\n\n    var pathParams = {\n      'page_id': pageId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/landing-pages/{page_id}/actions/unpublish', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Unpublish landing page\n   * Unpublish a landing page that is in draft or has been published.\n   * @param {String} pageId The unique id for the page.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.unpublishPage = function(pageId) {\n    return this.unpublishPageWithHttpInfo(pageId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Lists service.\n * @module api/ListsApi\n */\n\n/**\n * Constructs a new ListsApi. \n * @alias module:api/ListsApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete list\n   * Delete a list from your Mailchimp account. If you delete a list, you'll lose the list history—including subscriber activity, unsubscribes, complaints, and bounces. You’ll also lose subscribers’ email addresses, unless you exported and backed up your list.\n   * @param {String} listId The unique ID for the list.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteListWithHttpInfo = function(listId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete list\n   * Delete a list from your Mailchimp account. If you delete a list, you'll lose the list history—including subscriber activity, unsubscribes, complaints, and bounces. You’ll also lose subscribers’ email addresses, unless you exported and backed up your list.\n   * @param {String} listId The unique ID for the list.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteList = function(listId) {\n    return this.deleteListWithHttpInfo(listId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete interest category\n   * Delete a specific interest category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteInterestCategoryWithHttpInfo = function(listId, interestCategoryId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'interestCategoryId' is set\n    if (interestCategoryId === undefined || interestCategoryId === null) {\n      throw new Error(\"Missing the required parameter 'interestCategoryId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'interest_category_id': interestCategoryId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories/{interest_category_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete interest category\n   * Delete a specific interest category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteInterestCategory = function(listId, interestCategoryId) {\n    return this.deleteInterestCategoryWithHttpInfo(listId, interestCategoryId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete interest in category\n   * Delete interests or group names in a specific category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {String} interestId The specific interest or 'group name'.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteInterestCategoryInterestWithHttpInfo = function(listId, interestCategoryId, interestId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'interestCategoryId' is set\n    if (interestCategoryId === undefined || interestCategoryId === null) {\n      throw new Error(\"Missing the required parameter 'interestCategoryId' when calling \");\n    }\n\n    // verify the required parameter 'interestId' is set\n    if (interestId === undefined || interestId === null) {\n      throw new Error(\"Missing the required parameter 'interestId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'interest_category_id': interestCategoryId,\n      'interest_id': interestId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete interest in category\n   * Delete interests or group names in a specific category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {String} interestId The specific interest or 'group name'.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteInterestCategoryInterest = function(listId, interestCategoryId, interestId) {\n    return this.deleteInterestCategoryInterestWithHttpInfo(listId, interestCategoryId, interestId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Archive list member\n   * Archive a list member. To permanently delete, use the delete-permanent action.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteListMemberWithHttpInfo = function(listId, subscriberHash) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Archive list member\n   * Archive a list member. To permanently delete, use the delete-permanent action.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteListMember = function(listId, subscriberHash) {\n    return this.deleteListMemberWithHttpInfo(listId, subscriberHash)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete note\n   * Delete a specific note for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {String} noteId The id for the note.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteListMemberNoteWithHttpInfo = function(listId, subscriberHash, noteId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    // verify the required parameter 'noteId' is set\n    if (noteId === undefined || noteId === null) {\n      throw new Error(\"Missing the required parameter 'noteId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash,\n      'note_id': noteId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete note\n   * Delete a specific note for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {String} noteId The id for the note.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteListMemberNote = function(listId, subscriberHash, noteId) {\n    return this.deleteListMemberNoteWithHttpInfo(listId, subscriberHash, noteId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete merge field\n   * Delete a specific merge field ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} mergeId The id for the merge field.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteListMergeFieldWithHttpInfo = function(listId, mergeId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'mergeId' is set\n    if (mergeId === undefined || mergeId === null) {\n      throw new Error(\"Missing the required parameter 'mergeId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'merge_id': mergeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/merge-fields/{merge_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete merge field\n   * Delete a specific merge field ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} mergeId The id for the merge field.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteListMergeField = function(listId, mergeId) {\n    return this.deleteListMergeFieldWithHttpInfo(listId, mergeId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete segment\n   * Delete a specific segment in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteSegmentWithHttpInfo = function(listId, segmentId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'segmentId' is set\n    if (segmentId === undefined || segmentId === null) {\n      throw new Error(\"Missing the required parameter 'segmentId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'segment_id': segmentId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/segments/{segment_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete segment\n   * Delete a specific segment in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteSegment = function(listId, segmentId) {\n    return this.deleteSegmentWithHttpInfo(listId, segmentId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Remove list member from segment\n   * Remove a member from the specified static segment.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.removeSegmentMemberWithHttpInfo = function(listId, segmentId, subscriberHash) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'segmentId' is set\n    if (segmentId === undefined || segmentId === null) {\n      throw new Error(\"Missing the required parameter 'segmentId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'segment_id': segmentId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Remove list member from segment\n   * Remove a member from the specified static segment.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.removeSegmentMember = function(listId, segmentId, subscriberHash) {\n    return this.removeSegmentMemberWithHttpInfo(listId, segmentId, subscriberHash)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete webhook\n   * Delete a specific webhook in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} webhookId The webhook's id.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteListWebhookWithHttpInfo = function(listId, webhookId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'webhookId' is set\n    if (webhookId === undefined || webhookId === null) {\n      throw new Error(\"Missing the required parameter 'webhookId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'webhook_id': webhookId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/webhooks/{webhook_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete webhook\n   * Delete a specific webhook in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} webhookId The webhook's id.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteListWebhook = function(listId, webhookId) {\n    return this.deleteListWebhookWithHttpInfo(listId, webhookId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List member tags\n   * Get the tags on a list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CollectionOfTags} and HTTP response\n   */\n  this.getListMemberTagsWithHttpInfo = function(listId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/tags', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List member tags\n   * Get the tags on a list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CollectionOfTags}\n   */\n  this.getListMemberTags = function(listId, subscriberHash, opts) {\n    return this.getListMemberTagsWithHttpInfo(listId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get lists info\n   * Get information about all lists in the account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.beforeDateCreated Restrict response to lists created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceDateCreated Restrict results to lists created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeCampaignLastSent Restrict results to lists created before the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceCampaignLastSent Restrict results to lists created after the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.email Restrict results to lists that include a specific subscriber's email address.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @param {Boolean} opts.hasEcommerceStore Restrict results to lists that contain an active, connected, undeleted ecommerce store.\n   * @param {Boolean} opts.includeTotalContacts Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SubscriberLists} and HTTP response\n   */\n  this.getAllListsWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'before_date_created': opts['beforeDateCreated'],\n      'since_date_created': opts['sinceDateCreated'],\n      'before_campaign_last_sent': opts['beforeCampaignLastSent'],\n      'since_campaign_last_sent': opts['sinceCampaignLastSent'],\n      'email': opts['email'],\n      'sort_field': opts['sortField'],\n      'sort_dir': opts['sortDir'],\n      'has_ecommerce_store': opts['hasEcommerceStore'],\n      'include_total_contacts': opts['includeTotalContacts']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get lists info\n   * Get information about all lists in the account.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.beforeDateCreated Restrict response to lists created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceDateCreated Restrict results to lists created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeCampaignLastSent Restrict results to lists created before the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceCampaignLastSent Restrict results to lists created after the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.email Restrict results to lists that include a specific subscriber's email address.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @param {Boolean} opts.hasEcommerceStore Restrict results to lists that contain an active, connected, undeleted ecommerce store.\n   * @param {Boolean} opts.includeTotalContacts Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SubscriberLists}\n   */\n  this.getAllLists = function(opts) {\n    return this.getAllListsWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get list info\n   * Get information about a specific list in your Mailchimp account. Results include list members who have signed up but haven't confirmed their subscription yet and unsubscribed or cleaned.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Boolean} opts.includeTotalContacts Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SubscriberList} and HTTP response\n   */\n  this.getListWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'include_total_contacts': opts['includeTotalContacts']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get list info\n   * Get information about a specific list in your Mailchimp account. Results include list members who have signed up but haven't confirmed their subscription yet and unsubscribed or cleaned.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Boolean} opts.includeTotalContacts Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SubscriberList}\n   */\n  this.getList = function(listId, opts) {\n    return this.getListWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List abuse reports\n   * Get all abuse reports for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AbuseComplaints} and HTTP response\n   */\n  this.getListAbuseReportsWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/abuse-reports', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List abuse reports\n   * Get all abuse reports for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AbuseComplaints}\n   */\n  this.getListAbuseReports = function(listId, opts) {\n    return this.getListAbuseReportsWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get abuse report\n   * Get details about a specific abuse report.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} reportId The id for the abuse report.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AbuseComplaint} and HTTP response\n   */\n  this.getListAbuseReportDetailsWithHttpInfo = function(listId, reportId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'reportId' is set\n    if (reportId === undefined || reportId === null) {\n      throw new Error(\"Missing the required parameter 'reportId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'report_id': reportId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/abuse-reports/{report_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get abuse report\n   * Get details about a specific abuse report.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} reportId The id for the abuse report.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AbuseComplaint}\n   */\n  this.getListAbuseReportDetails = function(listId, reportId, opts) {\n    return this.getListAbuseReportDetailsWithHttpInfo(listId, reportId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List recent activity\n   * Get up to the previous 180 days of daily detailed aggregated activity stats for a list, not including Automation activity.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListActivity} and HTTP response\n   */\n  this.getListRecentActivityWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/activity', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List recent activity\n   * Get up to the previous 180 days of daily detailed aggregated activity stats for a list, not including Automation activity.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListActivity}\n   */\n  this.getListRecentActivity = function(listId, opts) {\n    return this.getListRecentActivityWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List top email clients\n   * Get a list of the top email clients based on user-agent strings.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EmailClients} and HTTP response\n   */\n  this.getListClientsWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/clients', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List top email clients\n   * Get a list of the top email clients based on user-agent strings.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EmailClients}\n   */\n  this.getListClients = function(listId, opts) {\n    return this.getListClientsWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List growth history data\n   * Get a month-by-month summary of a specific list's growth activity.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GrowthHistory} and HTTP response\n   */\n  this.getListGrowthHistoryWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'sort_field': opts['sortField'],\n      'sort_dir': opts['sortDir']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/growth-history', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List growth history data\n   * Get a month-by-month summary of a specific list's growth activity.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GrowthHistory}\n   */\n  this.getListGrowthHistory = function(listId, opts) {\n    return this.getListGrowthHistoryWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get growth history by month\n   * Get a summary of a specific list's growth activity for a specific month and year.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} month A specific month of list growth history.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GrowthHistory} and HTTP response\n   */\n  this.getListGrowthHistoryByMonthWithHttpInfo = function(listId, month, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'month' is set\n    if (month === undefined || month === null) {\n      throw new Error(\"Missing the required parameter 'month' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'month': month\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/growth-history/{month}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get growth history by month\n   * Get a summary of a specific list's growth activity for a specific month and year.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} month A specific month of list growth history.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GrowthHistory}\n   */\n  this.getListGrowthHistoryByMonth = function(listId, month, opts) {\n    return this.getListGrowthHistoryByMonthWithHttpInfo(listId, month, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List interest categories\n   * Get information about a list's interest categories.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.type Restrict results a type of interest group\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InterestGroupings} and HTTP response\n   */\n  this.getListInterestCategoriesWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'type': opts['type']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List interest categories\n   * Get information about a list's interest categories.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.type Restrict results a type of interest group\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InterestGroupings}\n   */\n  this.getListInterestCategories = function(listId, opts) {\n    return this.getListInterestCategoriesWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get interest category info\n   * Get information about a specific interest category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InterestCategory} and HTTP response\n   */\n  this.getInterestCategoryWithHttpInfo = function(listId, interestCategoryId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'interestCategoryId' is set\n    if (interestCategoryId === undefined || interestCategoryId === null) {\n      throw new Error(\"Missing the required parameter 'interestCategoryId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'interest_category_id': interestCategoryId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories/{interest_category_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get interest category info\n   * Get information about a specific interest category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InterestCategory}\n   */\n  this.getInterestCategory = function(listId, interestCategoryId, opts) {\n    return this.getInterestCategoryWithHttpInfo(listId, interestCategoryId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List interests in category\n   * Get a list of this category's interests.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Interests} and HTTP response\n   */\n  this.listInterestCategoryInterestsWithHttpInfo = function(listId, interestCategoryId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'interestCategoryId' is set\n    if (interestCategoryId === undefined || interestCategoryId === null) {\n      throw new Error(\"Missing the required parameter 'interestCategoryId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'interest_category_id': interestCategoryId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories/{interest_category_id}/interests', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List interests in category\n   * Get a list of this category's interests.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Interests}\n   */\n  this.listInterestCategoryInterests = function(listId, interestCategoryId, opts) {\n    return this.listInterestCategoryInterestsWithHttpInfo(listId, interestCategoryId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get interest in category\n   * Get interests or 'group names' for a specific category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {String} interestId The specific interest or 'group name'.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Interest} and HTTP response\n   */\n  this.getInterestCategoryInterestWithHttpInfo = function(listId, interestCategoryId, interestId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'interestCategoryId' is set\n    if (interestCategoryId === undefined || interestCategoryId === null) {\n      throw new Error(\"Missing the required parameter 'interestCategoryId' when calling \");\n    }\n\n    // verify the required parameter 'interestId' is set\n    if (interestId === undefined || interestId === null) {\n      throw new Error(\"Missing the required parameter 'interestId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'interest_category_id': interestCategoryId,\n      'interest_id': interestId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get interest in category\n   * Get interests or 'group names' for a specific category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {String} interestId The specific interest or 'group name'.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Interest}\n   */\n  this.getInterestCategoryInterest = function(listId, interestCategoryId, interestId, opts) {\n    return this.getInterestCategoryInterestWithHttpInfo(listId, interestCategoryId, interestId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List locations\n   * Get the locations (countries) that the list's subscribers have been tagged to based on geocoding their IP address.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListLocations} and HTTP response\n   */\n  this.getListLocationsWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/locations', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List locations\n   * Get the locations (countries) that the list's subscribers have been tagged to based on geocoding their IP address.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListLocations}\n   */\n  this.getListLocations = function(listId, opts) {\n    return this.getListLocationsWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List members info\n   * Get information about members in a specific Mailchimp list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.emailType The email type.\n   * @param {module:model/String} opts.status The subscriber's status.\n   * @param {String} opts.sinceTimestampOpt Restrict results to subscribers who opted-in after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeTimestampOpt Restrict results to subscribers who opted-in before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceLastChanged Restrict results to subscribers whose information changed after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeLastChanged Restrict results to subscribers whose information changed before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.uniqueEmailId A unique identifier for the email address across all Mailchimp lists.\n   * @param {Boolean} opts.vipOnly A filter to return only the list's VIP members. Passing `true` will restrict results to VIP list members, passing `false` will return all list members.\n   * @param {String} opts.interestCategoryId The unique id for the interest category.\n   * @param {String} opts.interestIds Used to filter list members by interests. Must be accompanied by interest_category_id and interest_match. The value must be a comma separated list of interest ids present for any supplied interest categories.\n   * @param {module:model/String} opts.interestMatch Used to filter list members by interests. Must be accompanied by interest_category_id and interest_ids. \\\"any\\\" will match a member with any of the interest supplied, \\\"all\\\" will only match members with every interest supplied, and \\\"none\\\" will match members without any of the interest supplied.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @param {Boolean} opts.sinceLastCampaign Filter subscribers by those subscribed/unsubscribed/pending/cleaned since last email campaign send. Member status is required to use this filter.\n   * @param {String} opts.unsubscribedSince Filter subscribers by those unsubscribed since a specific date. Using any status other than unsubscribed with this filter will result in an error.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListMembers2} and HTTP response\n   */\n  this.getListMembersInfoWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'email_type': opts['emailType'],\n      'status': opts['status'],\n      'since_timestamp_opt': opts['sinceTimestampOpt'],\n      'before_timestamp_opt': opts['beforeTimestampOpt'],\n      'since_last_changed': opts['sinceLastChanged'],\n      'before_last_changed': opts['beforeLastChanged'],\n      'unique_email_id': opts['uniqueEmailId'],\n      'vip_only': opts['vipOnly'],\n      'interest_category_id': opts['interestCategoryId'],\n      'interest_ids': opts['interestIds'],\n      'interest_match': opts['interestMatch'],\n      'sort_field': opts['sortField'],\n      'sort_dir': opts['sortDir'],\n      'since_last_campaign': opts['sinceLastCampaign'],\n      'unsubscribed_since': opts['unsubscribedSince']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List members info\n   * Get information about members in a specific Mailchimp list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.emailType The email type.\n   * @param {module:model/String} opts.status The subscriber's status.\n   * @param {String} opts.sinceTimestampOpt Restrict results to subscribers who opted-in after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeTimestampOpt Restrict results to subscribers who opted-in before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.sinceLastChanged Restrict results to subscribers whose information changed after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeLastChanged Restrict results to subscribers whose information changed before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.uniqueEmailId A unique identifier for the email address across all Mailchimp lists.\n   * @param {Boolean} opts.vipOnly A filter to return only the list's VIP members. Passing `true` will restrict results to VIP list members, passing `false` will return all list members.\n   * @param {String} opts.interestCategoryId The unique id for the interest category.\n   * @param {String} opts.interestIds Used to filter list members by interests. Must be accompanied by interest_category_id and interest_match. The value must be a comma separated list of interest ids present for any supplied interest categories.\n   * @param {module:model/String} opts.interestMatch Used to filter list members by interests. Must be accompanied by interest_category_id and interest_ids. \\\"any\\\" will match a member with any of the interest supplied, \\\"all\\\" will only match members with every interest supplied, and \\\"none\\\" will match members without any of the interest supplied.\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @param {Boolean} opts.sinceLastCampaign Filter subscribers by those subscribed/unsubscribed/pending/cleaned since last email campaign send. Member status is required to use this filter.\n   * @param {String} opts.unsubscribedSince Filter subscribers by those unsubscribed since a specific date. Using any status other than unsubscribed with this filter will result in an error.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListMembers2}\n   */\n  this.getListMembersInfo = function(listId, opts) {\n    return this.getListMembersInfoWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get member info\n   * Get information about a specific list member, including a currently subscribed, unsubscribed, or bounced member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts email addresses.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListMembers2} and HTTP response\n   */\n  this.getListMemberWithHttpInfo = function(listId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get member info\n   * Get information about a specific list member, including a currently subscribed, unsubscribed, or bounced member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts email addresses.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListMembers2}\n   */\n  this.getListMember = function(listId, subscriberHash, opts) {\n    return this.getListMemberWithHttpInfo(listId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * View recent activity 50\n   * Get the last 50 events of a member's activity on a specific list, including opens, clicks, and unsubscribes.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.action A comma seperated list of actions to return.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MemberActivityEvents} and HTTP response\n   */\n  this.getListMemberActivityWithHttpInfo = function(listId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'action': this.apiClient.buildCollectionParam(opts['action'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/activity', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * View recent activity 50\n   * Get the last 50 events of a member's activity on a specific list, including opens, clicks, and unsubscribes.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.action A comma seperated list of actions to return.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MemberActivityEvents}\n   */\n  this.getListMemberActivity = function(listId, subscriberHash, opts) {\n    return this.getListMemberActivityWithHttpInfo(listId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * View recent activity\n   * Get a member's activity on a specific list, including opens, clicks, and unsubscribes.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Array.<String>} opts.activityFilters A comma-separated list of activity filters that correspond to a set of activity types, e.g \\\"?activity_filters=open,bounce,click\\\".\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MemberActivityEvents1} and HTTP response\n   */\n  this.getListMemberActivityFeedWithHttpInfo = function(listId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'activity_filters': this.apiClient.buildCollectionParam(opts['activityFilters'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/activity-feed', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * View recent activity\n   * Get a member's activity on a specific list, including opens, clicks, and unsubscribes.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Array.<String>} opts.activityFilters A comma-separated list of activity filters that correspond to a set of activity types, e.g \\\"?activity_filters=open,bounce,click\\\".\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MemberActivityEvents1}\n   */\n  this.getListMemberActivityFeed = function(listId, subscriberHash, opts) {\n    return this.getListMemberActivityFeedWithHttpInfo(listId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List member events\n   * Get events for a contact.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts email addresses.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CollectionOfEvents} and HTTP response\n   */\n  this.getListMemberEventsWithHttpInfo = function(listId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/events', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List member events\n   * Get events for a contact.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts email addresses.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CollectionOfEvents}\n   */\n  this.getListMemberEvents = function(listId, subscriberHash, opts) {\n    return this.getListMemberEventsWithHttpInfo(listId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List member goal events\n   * Get the last 50 Goal events for a member on a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CollectionOfMemberActivityEvents} and HTTP response\n   */\n  this.getListMemberGoalsWithHttpInfo = function(listId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/goals', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List member goal events\n   * Get the last 50 Goal events for a member on a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CollectionOfMemberActivityEvents}\n   */\n  this.getListMemberGoals = function(listId, subscriberHash, opts) {\n    return this.getListMemberGoalsWithHttpInfo(listId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List recent member notes\n   * Get recent notes for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {module:model/String} opts.sortField Returns notes sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CollectionOfNotes} and HTTP response\n   */\n  this.getListMemberNotesWithHttpInfo = function(listId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'sort_field': opts['sortField'],\n      'sort_dir': opts['sortDir'],\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/notes', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List recent member notes\n   * Get recent notes for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {module:model/String} opts.sortField Returns notes sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CollectionOfNotes}\n   */\n  this.getListMemberNotes = function(listId, subscriberHash, opts) {\n    return this.getListMemberNotesWithHttpInfo(listId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get member note\n   * Get a specific note for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {String} noteId The id for the note.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MemberNotes} and HTTP response\n   */\n  this.getListMemberNoteWithHttpInfo = function(listId, subscriberHash, noteId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    // verify the required parameter 'noteId' is set\n    if (noteId === undefined || noteId === null) {\n      throw new Error(\"Missing the required parameter 'noteId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash,\n      'note_id': noteId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get member note\n   * Get a specific note for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {String} noteId The id for the note.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MemberNotes}\n   */\n  this.getListMemberNote = function(listId, subscriberHash, noteId, opts) {\n    return this.getListMemberNoteWithHttpInfo(listId, subscriberHash, noteId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List merge fields\n   * Get a list of all merge fields ([audience fields](https://mailchimp.com/help/getting-started-with-merge-tags/)) for a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.type The merge field type.\n   * @param {Boolean} opts.required Whether it's a required merge field.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CollectionOfMergeFields} and HTTP response\n   */\n  this.getListMergeFieldsWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'type': opts['type'],\n      'required': opts['required']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/merge-fields', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List merge fields\n   * Get a list of all merge fields ([audience fields](https://mailchimp.com/help/getting-started-with-merge-tags/)) for a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.type The merge field type.\n   * @param {Boolean} opts.required Whether it's a required merge field.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CollectionOfMergeFields}\n   */\n  this.getListMergeFields = function(listId, opts) {\n    return this.getListMergeFieldsWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get merge field\n   * Get information about a specific merge field ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} mergeId The id for the merge field.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MergeField} and HTTP response\n   */\n  this.getListMergeFieldWithHttpInfo = function(listId, mergeId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'mergeId' is set\n    if (mergeId === undefined || mergeId === null) {\n      throw new Error(\"Missing the required parameter 'mergeId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'merge_id': mergeId\n    };\n    var queryParams = {\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/merge-fields/{merge_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get merge field\n   * Get information about a specific merge field ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} mergeId The id for the merge field.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MergeField}\n   */\n  this.getListMergeField = function(listId, mergeId, opts) {\n    return this.getListMergeFieldWithHttpInfo(listId, mergeId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get segment info\n   * Get information about a specific segment.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Boolean} opts.includeCleaned Include cleaned members in response\n   * @param {Boolean} opts.includeTransactional Include transactional members in response\n   * @param {Boolean} opts.includeUnsubscribed Include unsubscribed members in response\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/List7} and HTTP response\n   */\n  this.getSegmentWithHttpInfo = function(listId, segmentId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'segmentId' is set\n    if (segmentId === undefined || segmentId === null) {\n      throw new Error(\"Missing the required parameter 'segmentId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'segment_id': segmentId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'include_cleaned': opts['includeCleaned'],\n      'include_transactional': opts['includeTransactional'],\n      'include_unsubscribed': opts['includeUnsubscribed']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/segments/{segment_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get segment info\n   * Get information about a specific segment.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Boolean} opts.includeCleaned Include cleaned members in response\n   * @param {Boolean} opts.includeTransactional Include transactional members in response\n   * @param {Boolean} opts.includeUnsubscribed Include unsubscribed members in response\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/List7}\n   */\n  this.getSegment = function(listId, segmentId, opts) {\n    return this.getSegmentWithHttpInfo(listId, segmentId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List members in segment\n   * Get information about members in a saved segment.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Boolean} opts.includeCleaned Include cleaned members in response\n   * @param {Boolean} opts.includeTransactional Include transactional members in response\n   * @param {Boolean} opts.includeUnsubscribed Include unsubscribed members in response\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SegmentMembers} and HTTP response\n   */\n  this.getSegmentMembersListWithHttpInfo = function(listId, segmentId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'segmentId' is set\n    if (segmentId === undefined || segmentId === null) {\n      throw new Error(\"Missing the required parameter 'segmentId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'segment_id': segmentId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'include_cleaned': opts['includeCleaned'],\n      'include_transactional': opts['includeTransactional'],\n      'include_unsubscribed': opts['includeUnsubscribed']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/segments/{segment_id}/members', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List members in segment\n   * Get information about members in a saved segment.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {Boolean} opts.includeCleaned Include cleaned members in response\n   * @param {Boolean} opts.includeTransactional Include transactional members in response\n   * @param {Boolean} opts.includeUnsubscribed Include unsubscribed members in response\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SegmentMembers}\n   */\n  this.getSegmentMembersList = function(listId, segmentId, opts) {\n    return this.getSegmentMembersListWithHttpInfo(listId, segmentId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List signup forms\n   * Get signup forms for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListSignupForms} and HTTP response\n   */\n  this.getListSignupFormsWithHttpInfo = function(listId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/signup-forms', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List signup forms\n   * Get signup forms for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListSignupForms}\n   */\n  this.getListSignupForms = function(listId) {\n    return this.getListSignupFormsWithHttpInfo(listId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List webhooks\n   * Get information about all webhooks for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListWebhooks} and HTTP response\n   */\n  this.getListWebhooksWithHttpInfo = function(listId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/webhooks', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List webhooks\n   * Get information about all webhooks for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListWebhooks}\n   */\n  this.getListWebhooks = function(listId) {\n    return this.getListWebhooksWithHttpInfo(listId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get webhook info\n   * Get information about a specific webhook.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} webhookId The webhook's id.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListWebhooks} and HTTP response\n   */\n  this.getListWebhookWithHttpInfo = function(listId, webhookId) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'webhookId' is set\n    if (webhookId === undefined || webhookId === null) {\n      throw new Error(\"Missing the required parameter 'webhookId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'webhook_id': webhookId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/webhooks/{webhook_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get webhook info\n   * Get information about a specific webhook.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} webhookId The webhook's id.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListWebhooks}\n   */\n  this.getListWebhook = function(listId, webhookId) {\n    return this.getListWebhookWithHttpInfo(listId, webhookId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update lists\n   * Update the settings for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/SubscriberList2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SubscriberList} and HTTP response\n   */\n  this.updateListWithHttpInfo = function(listId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update lists\n   * Update the settings for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/SubscriberList2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SubscriberList}\n   */\n  this.updateList = function(listId, body) {\n    return this.updateListWithHttpInfo(listId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update interest category\n   * Update a specific interest category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {module:model/InterestCategory2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InterestCategory} and HTTP response\n   */\n  this.updateInterestCategoryWithHttpInfo = function(listId, interestCategoryId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'interestCategoryId' is set\n    if (interestCategoryId === undefined || interestCategoryId === null) {\n      throw new Error(\"Missing the required parameter 'interestCategoryId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'interest_category_id': interestCategoryId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories/{interest_category_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update interest category\n   * Update a specific interest category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {module:model/InterestCategory2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InterestCategory}\n   */\n  this.updateInterestCategory = function(listId, interestCategoryId, body) {\n    return this.updateInterestCategoryWithHttpInfo(listId, interestCategoryId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update interest in category\n   * Update interests or 'group names' for a specific category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {String} interestId The specific interest or 'group name'.\n   * @param {module:model/Interest2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Interest} and HTTP response\n   */\n  this.updateInterestCategoryInterestWithHttpInfo = function(listId, interestCategoryId, interestId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'interestCategoryId' is set\n    if (interestCategoryId === undefined || interestCategoryId === null) {\n      throw new Error(\"Missing the required parameter 'interestCategoryId' when calling \");\n    }\n\n    // verify the required parameter 'interestId' is set\n    if (interestId === undefined || interestId === null) {\n      throw new Error(\"Missing the required parameter 'interestId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'interest_category_id': interestCategoryId,\n      'interest_id': interestId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update interest in category\n   * Update interests or 'group names' for a specific category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {String} interestId The specific interest or 'group name'.\n   * @param {module:model/Interest2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Interest}\n   */\n  this.updateInterestCategoryInterest = function(listId, interestCategoryId, interestId, body) {\n    return this.updateInterestCategoryInterestWithHttpInfo(listId, interestCategoryId, interestId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update list member\n   * Update information for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {module:model/AddListMembers3} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.skipMergeValidation If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListMembers2} and HTTP response\n   */\n  this.updateListMemberWithHttpInfo = function(listId, subscriberHash, body, opts) {\n    opts = opts || {};\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'skip_merge_validation': opts['skipMergeValidation']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update list member\n   * Update information for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {module:model/AddListMembers3} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.skipMergeValidation If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListMembers2}\n   */\n  this.updateListMember = function(listId, subscriberHash, body, opts) {\n    return this.updateListMemberWithHttpInfo(listId, subscriberHash, body, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update note\n   * Update a specific note for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {String} noteId The id for the note.\n   * @param {module:model/MemberNotes2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MemberNotes} and HTTP response\n   */\n  this.updateListMemberNoteWithHttpInfo = function(listId, subscriberHash, noteId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    // verify the required parameter 'noteId' is set\n    if (noteId === undefined || noteId === null) {\n      throw new Error(\"Missing the required parameter 'noteId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash,\n      'note_id': noteId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update note\n   * Update a specific note for a specific list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {String} noteId The id for the note.\n   * @param {module:model/MemberNotes2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MemberNotes}\n   */\n  this.updateListMemberNote = function(listId, subscriberHash, noteId, body) {\n    return this.updateListMemberNoteWithHttpInfo(listId, subscriberHash, noteId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update merge field\n   * Update a specific merge field ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} mergeId The id for the merge field.\n   * @param {module:model/MergeField2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MergeField} and HTTP response\n   */\n  this.updateListMergeFieldWithHttpInfo = function(listId, mergeId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'mergeId' is set\n    if (mergeId === undefined || mergeId === null) {\n      throw new Error(\"Missing the required parameter 'mergeId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'merge_id': mergeId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/merge-fields/{merge_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update merge field\n   * Update a specific merge field ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} mergeId The id for the merge field.\n   * @param {module:model/MergeField2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MergeField}\n   */\n  this.updateListMergeField = function(listId, mergeId, body) {\n    return this.updateListMergeFieldWithHttpInfo(listId, mergeId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update segment\n   * Update a specific segment in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {module:model/List9} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/List7} and HTTP response\n   */\n  this.updateSegmentWithHttpInfo = function(listId, segmentId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'segmentId' is set\n    if (segmentId === undefined || segmentId === null) {\n      throw new Error(\"Missing the required parameter 'segmentId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'segment_id': segmentId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/segments/{segment_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update segment\n   * Update a specific segment in a list.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {module:model/List9} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/List7}\n   */\n  this.updateSegment = function(listId, segmentId, body) {\n    return this.updateSegmentWithHttpInfo(listId, segmentId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update webhook\n   * Update the settings for an existing webhook.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} webhookId The webhook's id.\n   * @param {module:model/AddWebhook1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListWebhooks} and HTTP response\n   */\n  this.updateListWebhookWithHttpInfo = function(listId, webhookId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'webhookId' is set\n    if (webhookId === undefined || webhookId === null) {\n      throw new Error(\"Missing the required parameter 'webhookId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'webhook_id': webhookId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/webhooks/{webhook_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update webhook\n   * Update the settings for an existing webhook.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} webhookId The webhook's id.\n   * @param {module:model/AddWebhook1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListWebhooks}\n   */\n  this.updateListWebhook = function(listId, webhookId, body) {\n    return this.updateListWebhookWithHttpInfo(listId, webhookId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add event\n   * Add an event for a list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts email addresses.\n   * @param {module:model/Events} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.createListMemberEventWithHttpInfo = function(listId, subscriberHash, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/events', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add event\n   * Add an event for a list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts email addresses.\n   * @param {module:model/Events} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.createListMemberEvent = function(listId, subscriberHash, body) {\n    return this.createListMemberEventWithHttpInfo(listId, subscriberHash, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add or remove member tags\n   * Add or remove tags from a list member. If a tag that does not exist is passed in and set as 'active', a new tag will be created.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {module:model/MemberTags} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.updateListMemberTagsWithHttpInfo = function(listId, subscriberHash, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/tags', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add or remove member tags\n   * Add or remove tags from a list member. If a tag that does not exist is passed in and set as 'active', a new tag will be created.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {module:model/MemberTags} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.updateListMemberTags = function(listId, subscriberHash, body) {\n    return this.updateListMemberTagsWithHttpInfo(listId, subscriberHash, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add list\n   * Create a new list in your Mailchimp account.\n   * @param {module:model/SubscriberList1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SubscriberList} and HTTP response\n   */\n  this.createListWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add list\n   * Create a new list in your Mailchimp account.\n   * @param {module:model/SubscriberList1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SubscriberList}\n   */\n  this.createList = function(body) {\n    return this.createListWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Batch subscribe or unsubscribe\n   * Batch subscribe or unsubscribe list members.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/MembersToSubscribeUnsubscribeTofromAListInBatch} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.skipMergeValidation If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.\n   * @param {Boolean} opts.skipDuplicateCheck If skip_duplicate_check is true, we will ignore duplicates sent in the request when using the batch sub/unsub on the lists endpoint. The status of the first appearance in the request will be saved. This defaults to false.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BatchUpdateListMembers} and HTTP response\n   */\n  this.batchListMembersWithHttpInfo = function(listId, body, opts) {\n    opts = opts || {};\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'skip_merge_validation': opts['skipMergeValidation'],\n      'skip_duplicate_check': opts['skipDuplicateCheck']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Batch subscribe or unsubscribe\n   * Batch subscribe or unsubscribe list members.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/MembersToSubscribeUnsubscribeTofromAListInBatch} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.skipMergeValidation If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.\n   * @param {Boolean} opts.skipDuplicateCheck If skip_duplicate_check is true, we will ignore duplicates sent in the request when using the batch sub/unsub on the lists endpoint. The status of the first appearance in the request will be saved. This defaults to false.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BatchUpdateListMembers}\n   */\n  this.batchListMembers = function(listId, body, opts) {\n    return this.batchListMembersWithHttpInfo(listId, body, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add interest category\n   * Create a new interest category.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/InterestCategory1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InterestCategory} and HTTP response\n   */\n  this.createListInterestCategoryWithHttpInfo = function(listId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add interest category\n   * Create a new interest category.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/InterestCategory1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InterestCategory}\n   */\n  this.createListInterestCategory = function(listId, body) {\n    return this.createListInterestCategoryWithHttpInfo(listId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add interest in category\n   * Create a new interest or 'group name' for a specific category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {module:model/Interest1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Interest} and HTTP response\n   */\n  this.createInterestCategoryInterestWithHttpInfo = function(listId, interestCategoryId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'interestCategoryId' is set\n    if (interestCategoryId === undefined || interestCategoryId === null) {\n      throw new Error(\"Missing the required parameter 'interestCategoryId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'interest_category_id': interestCategoryId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/interest-categories/{interest_category_id}/interests', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add interest in category\n   * Create a new interest or 'group name' for a specific category.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} interestCategoryId The unique ID for the interest category.\n   * @param {module:model/Interest1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Interest}\n   */\n  this.createInterestCategoryInterest = function(listId, interestCategoryId, body) {\n    return this.createInterestCategoryInterestWithHttpInfo(listId, interestCategoryId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add member to list\n   * Add a new member to the list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/AddListMembers1} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.skipMergeValidation If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListMembers2} and HTTP response\n   */\n  this.addListMemberWithHttpInfo = function(listId, body, opts) {\n    opts = opts || {};\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'skip_merge_validation': opts['skipMergeValidation']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add member to list\n   * Add a new member to the list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/AddListMembers1} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.skipMergeValidation If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListMembers2}\n   */\n  this.addListMember = function(listId, body, opts) {\n    return this.addListMemberWithHttpInfo(listId, body, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete list member\n   * Delete all personally identifiable information related to a list member, and remove them from a list. This will make it impossible to re-import the list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteListMemberPermanentWithHttpInfo = function(listId, subscriberHash) {\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete list member\n   * Delete all personally identifiable information related to a list member, and remove them from a list. This will make it impossible to re-import the list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteListMemberPermanent = function(listId, subscriberHash) {\n    return this.deleteListMemberPermanentWithHttpInfo(listId, subscriberHash)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add member note\n   * Add a new note for a specific subscriber.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {module:model/MemberNotes1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MemberNotes} and HTTP response\n   */\n  this.createListMemberNoteWithHttpInfo = function(listId, subscriberHash, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}/notes', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add member note\n   * Add a new note for a specific subscriber.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {module:model/MemberNotes1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MemberNotes}\n   */\n  this.createListMemberNote = function(listId, subscriberHash, body) {\n    return this.createListMemberNoteWithHttpInfo(listId, subscriberHash, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add merge field\n   * Add a new merge field ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/MergeField1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MergeField} and HTTP response\n   */\n  this.addListMergeFieldWithHttpInfo = function(listId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/merge-fields', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add merge field\n   * Add a new merge field ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/MergeField1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MergeField}\n   */\n  this.addListMergeField = function(listId, body) {\n    return this.addListMergeFieldWithHttpInfo(listId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add segment\n   * Create a new segment in a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/List8} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/List7} and HTTP response\n   */\n  this.createSegmentWithHttpInfo = function(listId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/segments', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add segment\n   * Create a new segment in a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/List8} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/List7}\n   */\n  this.createSegment = function(listId, body) {\n    return this.createSegmentWithHttpInfo(listId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Batch add or remove members\n   * Batch add/remove list members to static segment\n   * @param {module:model/MembersToAddremoveTofromAStaticSegment} body \n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BatchAddremoveListMembersTofromStaticSegment} and HTTP response\n   */\n  this.batchSegmentMembersWithHttpInfo = function(body, listId, segmentId) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'segmentId' is set\n    if (segmentId === undefined || segmentId === null) {\n      throw new Error(\"Missing the required parameter 'segmentId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'segment_id': segmentId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/segments/{segment_id}', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Batch add or remove members\n   * Batch add/remove list members to static segment\n   * @param {module:model/MembersToAddremoveTofromAStaticSegment} body \n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BatchAddremoveListMembersTofromStaticSegment}\n   */\n  this.batchSegmentMembers = function(body, listId, segmentId) {\n    return this.batchSegmentMembersWithHttpInfo(body, listId, segmentId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add member to segment\n   * Add a member to a static segment.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {module:model/Body3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListMembers1} and HTTP response\n   */\n  this.createSegmentMemberWithHttpInfo = function(listId, segmentId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'segmentId' is set\n    if (segmentId === undefined || segmentId === null) {\n      throw new Error(\"Missing the required parameter 'segmentId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'segment_id': segmentId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/segments/{segment_id}/members', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add member to segment\n   * Add a member to a static segment.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} segmentId The unique id for the segment.\n   * @param {module:model/Body3} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListMembers1}\n   */\n  this.createSegmentMember = function(listId, segmentId, body) {\n    return this.createSegmentMemberWithHttpInfo(listId, segmentId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Customize signup form\n   * Customize a list's default signup form.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/SignupForm1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SignupForm} and HTTP response\n   */\n  this.updateListSignupFormWithHttpInfo = function(listId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/signup-forms', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Customize signup form\n   * Customize a list's default signup form.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/SignupForm1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SignupForm}\n   */\n  this.updateListSignupForm = function(listId, body) {\n    return this.updateListSignupFormWithHttpInfo(listId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add webhook\n   * Create a new webhook for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/AddWebhook} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListWebhooks} and HTTP response\n   */\n  this.createListWebhookWithHttpInfo = function(listId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/webhooks', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add webhook\n   * Create a new webhook for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {module:model/AddWebhook} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListWebhooks}\n   */\n  this.createListWebhook = function(listId, body) {\n    return this.createListWebhookWithHttpInfo(listId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List segments\n   * Get information about all available segments for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.type Limit results based on segment type.\n   * @param {String} opts.sinceCreatedAt Restrict results to segments created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeCreatedAt Restrict results to segments created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Boolean} opts.includeCleaned Include cleaned members in response\n   * @param {Boolean} opts.includeTransactional Include transactional members in response\n   * @param {Boolean} opts.includeUnsubscribed Include unsubscribed members in response\n   * @param {String} opts.sinceUpdatedAt Restrict results to segments update after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeUpdatedAt Restrict results to segments update before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CollectionOfSegments} and HTTP response\n   */\n  this.listSegmentsWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'type': opts['type'],\n      'since_created_at': opts['sinceCreatedAt'],\n      'before_created_at': opts['beforeCreatedAt'],\n      'include_cleaned': opts['includeCleaned'],\n      'include_transactional': opts['includeTransactional'],\n      'include_unsubscribed': opts['includeUnsubscribed'],\n      'since_updated_at': opts['sinceUpdatedAt'],\n      'before_updated_at': opts['beforeUpdatedAt']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/segments', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List segments\n   * Get information about all available segments for a specific list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.type Limit results based on segment type.\n   * @param {String} opts.sinceCreatedAt Restrict results to segments created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeCreatedAt Restrict results to segments created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Boolean} opts.includeCleaned Include cleaned members in response\n   * @param {Boolean} opts.includeTransactional Include transactional members in response\n   * @param {Boolean} opts.includeUnsubscribed Include unsubscribed members in response\n   * @param {String} opts.sinceUpdatedAt Restrict results to segments update after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeUpdatedAt Restrict results to segments update before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CollectionOfSegments}\n   */\n  this.listSegments = function(listId, opts) {\n    return this.listSegmentsWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add or update list member\n   * Add or update a list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {module:model/AddListMembers2} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.skipMergeValidation If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListMembers2} and HTTP response\n   */\n  this.setListMemberWithHttpInfo = function(listId, subscriberHash, body, opts) {\n    opts = opts || {};\n    var postBody = body;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'skip_merge_validation': opts['skipMergeValidation']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/members/{subscriber_hash}', 'PUT',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add or update list member\n   * Add or update a list member.\n   * @param {String} listId The unique ID for the list.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {module:model/AddListMembers2} body \n   * @param {Object} opts Optional parameters\n   * @param {Boolean} opts.skipMergeValidation If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListMembers2}\n   */\n  this.setListMember = function(listId, subscriberHash, body, opts) {\n    return this.setListMemberWithHttpInfo(listId, subscriberHash, body, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Search for tags on a list by name.\n   * Search for tags on a list by name. If no name is provided, will return all tags on the list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {String} opts.name The search query used to filter tags.  The search query will be compared to each tag as a prefix, so all tags that have a name starting with this field will be returned.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TagSearchResults} and HTTP response\n   */\n  this.tagSearchWithHttpInfo = function(listId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'listId' is set\n    if (listId === undefined || listId === null) {\n      throw new Error(\"Missing the required parameter 'listId' when calling \");\n    }\n\n    var pathParams = {\n      'list_id': listId\n    };\n    var queryParams = {\n      'name': opts['name']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/lists/{list_id}/tag-search', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Search for tags on a list by name.\n   * Search for tags on a list by name. If no name is provided, will return all tags on the list.\n   * @param {String} listId The unique ID for the list.\n   * @param {Object} opts Optional parameters\n   * @param {String} opts.name The search query used to filter tags.  The search query will be compared to each tag as a prefix, so all tags that have a name starting with this field will be returned.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TagSearchResults}\n   */\n  this.tagSearch = function(listId, opts) {\n    return this.tagSearchWithHttpInfo(listId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Ping service.\n * @module api/PingApi\n */\n\n/**\n * Constructs a new PingApi. \n * @alias module:api/PingApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Ping\n   * A health check for the API that won't return any account-specific information.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/APIHealthStatus} and HTTP response\n   */\n  this.getWithHttpInfo = function() {\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/ping', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Ping\n   * A health check for the API that won't return any account-specific information.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/APIHealthStatus}\n   */\n  this.get = function() {\n    return this.getWithHttpInfo()\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Reporting service.\n * @module api/ReportingApi\n */\n\n/**\n * Constructs a new ReportingApi. \n * @alias module:api/ReportingApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * List facebook ads reports\n   * Get reports of Facebook ads.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2009} and HTTP response\n   */\n  this.getFacebookAdsReportAllWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'sort_field': opts['sortField'],\n      'sort_dir': opts['sortDir']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reporting/facebook-ads', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List facebook ads reports\n   * Get reports of Facebook ads.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2009}\n   */\n  this.getFacebookAdsReportAll = function(opts) {\n    return this.getFacebookAdsReportAllWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get facebook ad report\n   * Get report of a Facebook ad.\n   * @param {String} outreachId The outreach id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse20010} and HTTP response\n   */\n  this.getFacebookAdReportWithHttpInfo = function(outreachId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'outreachId' is set\n    if (outreachId === undefined || outreachId === null) {\n      throw new Error(\"Missing the required parameter 'outreachId' when calling \");\n    }\n\n    var pathParams = {\n      'outreach_id': outreachId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reporting/facebook-ads/{outreach_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get facebook ad report\n   * Get report of a Facebook ad.\n   * @param {String} outreachId The outreach id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse20010}\n   */\n  this.getFacebookAdReport = function(outreachId, opts) {\n    return this.getFacebookAdReportWithHttpInfo(outreachId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List facebook ecommerce report\n   * Get breakdown of product activity for an outreach.\n   * @param {String} outreachId The outreach id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2006} and HTTP response\n   */\n  this.getFacebookAdProductActivityReportWithHttpInfo = function(outreachId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'outreachId' is set\n    if (outreachId === undefined || outreachId === null) {\n      throw new Error(\"Missing the required parameter 'outreachId' when calling \");\n    }\n\n    var pathParams = {\n      'outreach_id': outreachId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'sort_field': opts['sortField']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reporting/facebook-ads/{outreach_id}/ecommerce-product-activity', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List facebook ecommerce report\n   * Get breakdown of product activity for an outreach.\n   * @param {String} outreachId The outreach id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2006}\n   */\n  this.getFacebookAdProductActivityReport = function(outreachId, opts) {\n    return this.getFacebookAdProductActivityReportWithHttpInfo(outreachId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List landing pages reports\n   * Get reports of landing pages.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse20011} and HTTP response\n   */\n  this.getLandingPageReportsAllWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reporting/landing-pages', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List landing pages reports\n   * Get reports of landing pages.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse20011}\n   */\n  this.getLandingPageReportsAll = function(opts) {\n    return this.getLandingPageReportsAllWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get landing page report\n   * Get report of a landing page.\n   * @param {String} outreachId The outreach id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LandingPageReport} and HTTP response\n   */\n  this.getLandingPageReportWithHttpInfo = function(outreachId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'outreachId' is set\n    if (outreachId === undefined || outreachId === null) {\n      throw new Error(\"Missing the required parameter 'outreachId' when calling \");\n    }\n\n    var pathParams = {\n      'outreach_id': outreachId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reporting/landing-pages/{outreach_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get landing page report\n   * Get report of a landing page.\n   * @param {String} outreachId The outreach id.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LandingPageReport}\n   */\n  this.getLandingPageReport = function(outreachId, opts) {\n    return this.getLandingPageReportWithHttpInfo(outreachId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Reports service.\n * @module api/ReportsApi\n */\n\n/**\n * Constructs a new ReportsApi. \n * @alias module:api/ReportsApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * List campaign reports\n   * Get campaign reports.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.type The campaign type.\n   * @param {Date} opts.beforeSendTime Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceSendTime Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignReports1} and HTTP response\n   */\n  this.getAllCampaignReportsWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'type': opts['type'],\n      'before_send_time': opts['beforeSendTime'],\n      'since_send_time': opts['sinceSendTime']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List campaign reports\n   * Get campaign reports.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.type The campaign type.\n   * @param {Date} opts.beforeSendTime Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {Date} opts.sinceSendTime Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignReports1}\n   */\n  this.getAllCampaignReports = function(opts) {\n    return this.getAllCampaignReportsWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get campaign report\n   * Get report details for a specific sent campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignReport} and HTTP response\n   */\n  this.getCampaignReportWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get campaign report\n   * Get report details for a specific sent campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignReport}\n   */\n  this.getCampaignReport = function(campaignId, opts) {\n    return this.getCampaignReportWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List abuse reports\n   * Get a list of abuse complaints for a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AbuseComplaints1} and HTTP response\n   */\n  this.getCampaignAbuseReportsWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/abuse-reports', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List abuse reports\n   * Get a list of abuse complaints for a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AbuseComplaints1}\n   */\n  this.getCampaignAbuseReports = function(campaignId, opts) {\n    return this.getCampaignAbuseReportsWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get abuse report\n   * Get information about a specific abuse report for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} reportId The id for the abuse report.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AbuseComplaint1} and HTTP response\n   */\n  this.getCampaignAbuseReportWithHttpInfo = function(campaignId, reportId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'reportId' is set\n    if (reportId === undefined || reportId === null) {\n      throw new Error(\"Missing the required parameter 'reportId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'report_id': reportId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/abuse-reports/{report_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get abuse report\n   * Get information about a specific abuse report for a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} reportId The id for the abuse report.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AbuseComplaint1}\n   */\n  this.getCampaignAbuseReport = function(campaignId, reportId, opts) {\n    return this.getCampaignAbuseReportWithHttpInfo(campaignId, reportId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List campaign feedback\n   * Get feedback based on a campaign's statistics. Advice feedback is based on campaign stats like opens, clicks, unsubscribes, bounces, and more.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignAdviceReport} and HTTP response\n   */\n  this.getCampaignAdviceWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/advice', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List campaign feedback\n   * Get feedback based on a campaign's statistics. Advice feedback is based on campaign stats like opens, clicks, unsubscribes, bounces, and more.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignAdviceReport}\n   */\n  this.getCampaignAdvice = function(campaignId, opts) {\n    return this.getCampaignAdviceWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List campaign details\n   * Get information about clicks on specific links in your Mailchimp campaigns.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ClickDetailReport} and HTTP response\n   */\n  this.getCampaignClickDetailsWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/click-details', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List campaign details\n   * Get information about clicks on specific links in your Mailchimp campaigns.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ClickDetailReport}\n   */\n  this.getCampaignClickDetails = function(campaignId, opts) {\n    return this.getCampaignClickDetailsWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get campaign link details\n   * Get click details for a specific link in a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} linkId The id for the link.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ClickDetailReport} and HTTP response\n   */\n  this.getCampaignClickDetailsForLinkWithHttpInfo = function(campaignId, linkId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'linkId' is set\n    if (linkId === undefined || linkId === null) {\n      throw new Error(\"Missing the required parameter 'linkId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'link_id': linkId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/click-details/{link_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get campaign link details\n   * Get click details for a specific link in a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} linkId The id for the link.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ClickDetailReport}\n   */\n  this.getCampaignClickDetailsForLink = function(campaignId, linkId, opts) {\n    return this.getCampaignClickDetailsForLinkWithHttpInfo(campaignId, linkId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List clicked link subscribers\n   * Get information about list members who clicked on a specific link in a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} linkId The id for the link.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ClickDetailMembers} and HTTP response\n   */\n  this.getSubscribersInfoWithHttpInfo = function(campaignId, linkId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'linkId' is set\n    if (linkId === undefined || linkId === null) {\n      throw new Error(\"Missing the required parameter 'linkId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'link_id': linkId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/click-details/{link_id}/members', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List clicked link subscribers\n   * Get information about list members who clicked on a specific link in a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} linkId The id for the link.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ClickDetailMembers}\n   */\n  this.getSubscribersInfo = function(campaignId, linkId, opts) {\n    return this.getSubscribersInfoWithHttpInfo(campaignId, linkId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get clicked link subscriber\n   * Get information about a specific subscriber who clicked a link in a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} linkId The id for the link.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ClickDetailMember} and HTTP response\n   */\n  this.getSubscriberInfoWithHttpInfo = function(campaignId, linkId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'linkId' is set\n    if (linkId === undefined || linkId === null) {\n      throw new Error(\"Missing the required parameter 'linkId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'link_id': linkId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get clicked link subscriber\n   * Get information about a specific subscriber who clicked a link in a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} linkId The id for the link.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ClickDetailMember}\n   */\n  this.getSubscriberInfo = function(campaignId, linkId, subscriberHash, opts) {\n    return this.getSubscriberInfoWithHttpInfo(campaignId, linkId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List domain performance stats\n   * Get statistics for the top-performing email domains in a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/DomainPerformance} and HTTP response\n   */\n  this.getDomainPerformanceForCampaignWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/domain-performance', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List domain performance stats\n   * Get statistics for the top-performing email domains in a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/DomainPerformance}\n   */\n  this.getDomainPerformanceForCampaign = function(campaignId, opts) {\n    return this.getDomainPerformanceForCampaignWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List campaign product activity\n   * Get breakdown of product activity for a campaign\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2006} and HTTP response\n   */\n  this.getEcommerceProductActivityForCampaignWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'sort_field': opts['sortField']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/ecommerce-product-activity', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List campaign product activity\n   * Get breakdown of product activity for a campaign\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {module:model/String} opts.sortField Returns files sorted by the specified field.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2006}\n   */\n  this.getEcommerceProductActivityForCampaign = function(campaignId, opts) {\n    return this.getEcommerceProductActivityForCampaignWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List EepURL activity\n   * Get a summary of social activity for the campaign, tracked by EepURL.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EepurlActivity} and HTTP response\n   */\n  this.getEepurlActivityForCampaignWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/eepurl', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List EepURL activity\n   * Get a summary of social activity for the campaign, tracked by EepURL.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EepurlActivity}\n   */\n  this.getEepurlActivityForCampaign = function(campaignId, opts) {\n    return this.getEepurlActivityForCampaignWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List email activity\n   * Get a list of member's subscriber activity in a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.since Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EmailActivity} and HTTP response\n   */\n  this.getEmailActivityForCampaignWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'since': opts['since']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/email-activity', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List email activity\n   * Get a list of member's subscriber activity in a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.since Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EmailActivity}\n   */\n  this.getEmailActivityForCampaign = function(campaignId, opts) {\n    return this.getEmailActivityForCampaignWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get subscriber email activity\n   * Get a specific list member's activity in a campaign including opens, clicks, and bounces.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {String} opts.since Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EmailActivity} and HTTP response\n   */\n  this.getEmailActivityForSubscriberWithHttpInfo = function(campaignId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'since': opts['since']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/email-activity/{subscriber_hash}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get subscriber email activity\n   * Get a specific list member's activity in a campaign including opens, clicks, and bounces.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {String} opts.since Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EmailActivity}\n   */\n  this.getEmailActivityForSubscriber = function(campaignId, subscriberHash, opts) {\n    return this.getEmailActivityForSubscriberWithHttpInfo(campaignId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List top open activities\n   * Get top open locations for a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/OpenLocations} and HTTP response\n   */\n  this.getLocationsForCampaignWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/locations', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List top open activities\n   * Get top open locations for a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/OpenLocations}\n   */\n  this.getLocationsForCampaign = function(campaignId, opts) {\n    return this.getLocationsForCampaignWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List campaign open details\n   * Get detailed information about any campaign emails that were opened by a list member.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.since Restrict results to campaign open events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/OpenDetailReport} and HTTP response\n   */\n  this.getCampaignOpenDetailsWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'since': opts['since']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/open-details', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List campaign open details\n   * Get detailed information about any campaign emails that were opened by a list member.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.since Restrict results to campaign open events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/OpenDetailReport}\n   */\n  this.getCampaignOpenDetails = function(campaignId, opts) {\n    return this.getCampaignOpenDetailsWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get opened campaign subscriber\n   * Get information about a specific subscriber who opened a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/OpenActivity} and HTTP response\n   */\n  this.getSubscriberInfoForOpenedCampaignWithHttpInfo = function(campaignId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/open-details/{subscriber_hash}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get opened campaign subscriber\n   * Get information about a specific subscriber who opened a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/OpenActivity}\n   */\n  this.getSubscriberInfoForOpenedCampaign = function(campaignId, subscriberHash, opts) {\n    return this.getSubscriberInfoForOpenedCampaignWithHttpInfo(campaignId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List campaign recipients\n   * Get information about campaign recipients.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SentTo} and HTTP response\n   */\n  this.getCampaignRecipientsWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/sent-to', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List campaign recipients\n   * Get information about campaign recipients.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SentTo}\n   */\n  this.getCampaignRecipients = function(campaignId, opts) {\n    return this.getCampaignRecipientsWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get campaign recipient info\n   * Get information about a specific campaign recipient.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SentTo} and HTTP response\n   */\n  this.getCampaignRecipientWithHttpInfo = function(campaignId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/sent-to/{subscriber_hash}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get campaign recipient info\n   * Get information about a specific campaign recipient.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SentTo}\n   */\n  this.getCampaignRecipient = function(campaignId, subscriberHash, opts) {\n    return this.getCampaignRecipientWithHttpInfo(campaignId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List child campaign reports\n   * Get a list of reports with child campaigns for a specific parent campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CampaignSubReports} and HTTP response\n   */\n  this.getSubReportsForCampaignWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/sub-reports', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List child campaign reports\n   * Get a list of reports with child campaigns for a specific parent campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CampaignSubReports}\n   */\n  this.getSubReportsForCampaign = function(campaignId, opts) {\n    return this.getSubReportsForCampaignWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List unsubscribed members\n   * Get information about members who have unsubscribed from a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Unsubscribes} and HTTP response\n   */\n  this.getUnsubscribedListForCampaignWithHttpInfo = function(campaignId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/unsubscribed', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List unsubscribed members\n   * Get information about members who have unsubscribed from a specific campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Unsubscribes}\n   */\n  this.getUnsubscribedListForCampaign = function(campaignId, opts) {\n    return this.getUnsubscribedListForCampaignWithHttpInfo(campaignId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get unsubscribed member\n   * Get information about a specific list member who unsubscribed from a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Unsubscribes} and HTTP response\n   */\n  this.getUnsubscribedListMemberWithHttpInfo = function(campaignId, subscriberHash, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'campaignId' is set\n    if (campaignId === undefined || campaignId === null) {\n      throw new Error(\"Missing the required parameter 'campaignId' when calling \");\n    }\n\n    // verify the required parameter 'subscriberHash' is set\n    if (subscriberHash === undefined || subscriberHash === null) {\n      throw new Error(\"Missing the required parameter 'subscriberHash' when calling \");\n    }\n\n    var pathParams = {\n      'campaign_id': campaignId,\n      'subscriber_hash': subscriberHash\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/reports/{campaign_id}/unsubscribed/{subscriber_hash}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get unsubscribed member\n   * Get information about a specific list member who unsubscribed from a campaign.\n   * @param {String} campaignId The unique id for the campaign.\n   * @param {String} subscriberHash The MD5 hash of the lowercase version of the list member's email address.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Unsubscribes}\n   */\n  this.getUnsubscribedListMember = function(campaignId, subscriberHash, opts) {\n    return this.getUnsubscribedListMemberWithHttpInfo(campaignId, subscriberHash, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Root service.\n * @module api/RootApi\n */\n\n/**\n * Constructs a new RootApi. \n * @alias module:api/RootApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * List api root resources\n   * Get links to all other resources available in the API.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/APIRoot} and HTTP response\n   */\n  this.getRootWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List api root resources\n   * Get links to all other resources available in the API.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/APIRoot}\n   */\n  this.getRoot = function(opts) {\n    return this.getRootWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * SearchCampaigns service.\n * @module api/SearchCampaignsApi\n */\n\n/**\n * Constructs a new SearchCampaignsApi. \n * @alias module:api/SearchCampaignsApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Search campaigns\n   * Search all campaigns for the specified query terms.\n   * @param {String} query The search query used to filter results.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Campaigns} and HTTP response\n   */\n  this.searchWithHttpInfo = function(query, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'query' is set\n    if (query === undefined || query === null) {\n      throw new Error(\"Missing the required parameter 'query' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'query': query\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/search-campaigns', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Search campaigns\n   * Search all campaigns for the specified query terms.\n   * @param {String} query The search query used to filter results.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Campaigns}\n   */\n  this.search = function(query, opts) {\n    return this.searchWithHttpInfo(query, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * SearchMembers service.\n * @module api/SearchMembersApi\n */\n\n/**\n * Constructs a new SearchMembersApi. \n * @alias module:api/SearchMembersApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Search members\n   * Search for list members. This search can be restricted to a specific list, or can be used to search across all lists in an account.\n   * @param {String} query The search query used to filter results. Query should be a valid email, or a string representing a contact's first or last name.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {String} opts.listId The unique id for the list.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Members} and HTTP response\n   */\n  this.searchWithHttpInfo = function(query, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'query' is set\n    if (query === undefined || query === null) {\n      throw new Error(\"Missing the required parameter 'query' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'query': query,\n      'list_id': opts['listId']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/search-members', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Search members\n   * Search for list members. This search can be restricted to a specific list, or can be used to search across all lists in an account.\n   * @param {String} query The search query used to filter results. Query should be a valid email, or a string representing a contact's first or last name.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {String} opts.listId The unique id for the list.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Members}\n   */\n  this.search = function(query, opts) {\n    return this.searchWithHttpInfo(query, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * TemplateFolders service.\n * @module api/TemplateFoldersApi\n */\n\n/**\n * Constructs a new TemplateFoldersApi. \n * @alias module:api/TemplateFoldersApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete template folder\n   * Delete a specific template folder, and mark all the templates in the folder as 'unfiled'.\n   * @param {String} folderId The unique id for the template folder.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.removeWithHttpInfo = function(folderId) {\n    var postBody = null;\n\n    // verify the required parameter 'folderId' is set\n    if (folderId === undefined || folderId === null) {\n      throw new Error(\"Missing the required parameter 'folderId' when calling \");\n    }\n\n    var pathParams = {\n      'folder_id': folderId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/template-folders/{folder_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete template folder\n   * Delete a specific template folder, and mark all the templates in the folder as 'unfiled'.\n   * @param {String} folderId The unique id for the template folder.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.remove = function(folderId) {\n    return this.removeWithHttpInfo(folderId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List template folders\n   * Get all folders used to organize templates.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TemplateFolders} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/template-folders', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List template folders\n   * Get all folders used to organize templates.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TemplateFolders}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get template folder\n   * Get information about a specific folder used to organize templates.\n   * @param {String} folderId The unique id for the template folder.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TemplateFolder} and HTTP response\n   */\n  this.getWithHttpInfo = function(folderId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'folderId' is set\n    if (folderId === undefined || folderId === null) {\n      throw new Error(\"Missing the required parameter 'folderId' when calling \");\n    }\n\n    var pathParams = {\n      'folder_id': folderId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/template-folders/{folder_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get template folder\n   * Get information about a specific folder used to organize templates.\n   * @param {String} folderId The unique id for the template folder.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TemplateFolder}\n   */\n  this.get = function(folderId, opts) {\n    return this.getWithHttpInfo(folderId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update template folder\n   * Update a specific folder used to organize templates.\n   * @param {String} folderId The unique id for the template folder.\n   * @param {module:model/TemplateFolder2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TemplateFolder} and HTTP response\n   */\n  this.updateWithHttpInfo = function(folderId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'folderId' is set\n    if (folderId === undefined || folderId === null) {\n      throw new Error(\"Missing the required parameter 'folderId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'folder_id': folderId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/template-folders/{folder_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update template folder\n   * Update a specific folder used to organize templates.\n   * @param {String} folderId The unique id for the template folder.\n   * @param {module:model/TemplateFolder2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TemplateFolder}\n   */\n  this.update = function(folderId, body) {\n    return this.updateWithHttpInfo(folderId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add template folder\n   * Create a new template folder.\n   * @param {module:model/TemplateFolder1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TemplateFolder} and HTTP response\n   */\n  this.createWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/template-folders', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add template folder\n   * Create a new template folder.\n   * @param {module:model/TemplateFolder1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TemplateFolder}\n   */\n  this.create = function(body) {\n    return this.createWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * Templates service.\n * @module api/TemplatesApi\n */\n\n/**\n * Constructs a new TemplatesApi. \n * @alias module:api/TemplatesApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Delete template\n   * Delete a specific template.\n   * @param {String} templateId The unique id for the template.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteTemplateWithHttpInfo = function(templateId) {\n    var postBody = null;\n\n    // verify the required parameter 'templateId' is set\n    if (templateId === undefined || templateId === null) {\n      throw new Error(\"Missing the required parameter 'templateId' when calling \");\n    }\n\n    var pathParams = {\n      'template_id': templateId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/templates/{template_id}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete template\n   * Delete a specific template.\n   * @param {String} templateId The unique id for the template.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteTemplate = function(templateId) {\n    return this.deleteTemplateWithHttpInfo(templateId)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List templates\n   * Get a list of an account's available templates.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.createdBy The Mailchimp account user who created the template.\n   * @param {String} opts.sinceDateCreated Restrict the response to templates created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeDateCreated Restrict the response to templates created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.type Limit results based on template type.\n   * @param {String} opts.category Limit results based on category.\n   * @param {String} opts.folderId The unique folder id.\n   * @param {module:model/String} opts.sortField Returns user templates sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Templates} and HTTP response\n   */\n  this.listWithHttpInfo = function(opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv'),\n      'count': opts['count'],\n      'offset': opts['offset'],\n      'created_by': opts['createdBy'],\n      'since_date_created': opts['sinceDateCreated'],\n      'before_date_created': opts['beforeDateCreated'],\n      'type': opts['type'],\n      'category': opts['category'],\n      'folder_id': opts['folderId'],\n      'sort_field': opts['sortField'],\n      'sort_dir': opts['sortDir']\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/templates', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List templates\n   * Get a list of an account's available templates.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @param {Number} opts.count The number of records to return. Default value is 10. Maximum value is 1000 (default to 10)\n   * @param {Number} opts.offset Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (default to 0)\n   * @param {String} opts.createdBy The Mailchimp account user who created the template.\n   * @param {String} opts.sinceDateCreated Restrict the response to templates created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.beforeDateCreated Restrict the response to templates created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.\n   * @param {String} opts.type Limit results based on template type.\n   * @param {String} opts.category Limit results based on category.\n   * @param {String} opts.folderId The unique folder id.\n   * @param {module:model/String} opts.sortField Returns user templates sorted by the specified field.\n   * @param {module:model/String} opts.sortDir Determines the order direction for sorted results.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Templates}\n   */\n  this.list = function(opts) {\n    return this.listWithHttpInfo(opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get template info\n   * Get information about a specific template.\n   * @param {String} templateId The unique id for the template.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TemplateInstance} and HTTP response\n   */\n  this.getTemplateWithHttpInfo = function(templateId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'templateId' is set\n    if (templateId === undefined || templateId === null) {\n      throw new Error(\"Missing the required parameter 'templateId' when calling \");\n    }\n\n    var pathParams = {\n      'template_id': templateId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/templates/{template_id}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get template info\n   * Get information about a specific template.\n   * @param {String} templateId The unique id for the template.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TemplateInstance}\n   */\n  this.getTemplate = function(templateId, opts) {\n    return this.getTemplateWithHttpInfo(templateId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * View default content\n   * Get the sections that you can edit in a template, including each section's default content.\n   * @param {String} templateId The unique id for the template.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TemplateDefaultContent} and HTTP response\n   */\n  this.getDefaultContentForTemplateWithHttpInfo = function(templateId, opts) {\n    opts = opts || {};\n    var postBody = null;\n\n    // verify the required parameter 'templateId' is set\n    if (templateId === undefined || templateId === null) {\n      throw new Error(\"Missing the required parameter 'templateId' when calling \");\n    }\n\n    var pathParams = {\n      'template_id': templateId\n    };\n    var queryParams = {\n      'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),\n      'exclude_fields': this.apiClient.buildCollectionParam(opts['excludeFields'], 'csv')\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/templates/{template_id}/default-content', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * View default content\n   * Get the sections that you can edit in a template, including each section's default content.\n   * @param {String} templateId The unique id for the template.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<String>} opts.fields A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.\n   * @param {Array.<String>} opts.excludeFields A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TemplateDefaultContent}\n   */\n  this.getDefaultContentForTemplate = function(templateId, opts) {\n    return this.getDefaultContentForTemplateWithHttpInfo(templateId, opts)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Update template\n   * Update the name, HTML, or `folder_id` of an existing template.\n   * @param {String} templateId The unique id for the template.\n   * @param {module:model/TemplateInstance2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TemplateInstance} and HTTP response\n   */\n  this.updateTemplateWithHttpInfo = function(templateId, body) {\n    var postBody = body;\n\n    // verify the required parameter 'templateId' is set\n    if (templateId === undefined || templateId === null) {\n      throw new Error(\"Missing the required parameter 'templateId' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'template_id': templateId\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/templates/{template_id}', 'PATCH',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Update template\n   * Update the name, HTML, or `folder_id` of an existing template.\n   * @param {String} templateId The unique id for the template.\n   * @param {module:model/TemplateInstance2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TemplateInstance}\n   */\n  this.updateTemplate = function(templateId, body) {\n    return this.updateTemplateWithHttpInfo(templateId, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Add template\n   * Create a new template for the account. Only Classic templates are supported.\n   * @param {module:model/TemplateInstance1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TemplateInstance} and HTTP response\n   */\n  this.createWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/templates', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add template\n   * Create a new template for the account. Only Classic templates are supported.\n   * @param {module:model/TemplateInstance1} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TemplateInstance}\n   */\n  this.create = function(body) {\n    return this.createWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n","/*\n * Mailchimp Marketing API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 3.0.58\n * Contact: apihelp@mailchimp.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.12\n *\n * Do not edit the class manually.\n *\n */\n\n\n\nvar ApiClient = require('../ApiClient');\n\n/**\n * VerifiedDomains service.\n * @module api/VerifiedDomainsApi\n */\n\n/**\n * Constructs a new VerifiedDomainsApi. \n * @alias module:api/VerifiedDomainsApi\n * @class\n * @param {module:ApiClient} apiClient Optional API client implementation to use,\n * default to {@link module:ApiClient#instance} if unspecified.\n */\nmodule.exports = function(apiClient) {\n  this.apiClient = apiClient || ApiClient.instance;\n\n  /**\n   * Add domain to account\n   * Add a domain to the account.\n   * @param {module:model/VerifiedDomains2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/VerifiedDomains} and HTTP response\n   */\n  this.createVerifiedDomainWithHttpInfo = function(body) {\n    var postBody = body;\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/verified-domains', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Add domain to account\n   * Add a domain to the account.\n   * @param {module:model/VerifiedDomains2} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/VerifiedDomains}\n   */\n  this.createVerifiedDomain = function(body) {\n    return this.createVerifiedDomainWithHttpInfo(body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Delete domain\n   * Delete a verified domain from the account.\n   * @param {String} domainName The domain name.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n   */\n  this.deleteDomainWithHttpInfo = function(domainName) {\n    var postBody = null;\n\n    // verify the required parameter 'domainName' is set\n    if (domainName === undefined || domainName === null) {\n      throw new Error(\"Missing the required parameter 'domainName' when calling \");\n    }\n\n    var pathParams = {\n      'domain_name': domainName\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/verified-domains/{domain_name}', 'DELETE',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Delete domain\n   * Delete a verified domain from the account.\n   * @param {String} domainName The domain name.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n   */\n  this.deleteDomain = function(domainName) {\n    return this.deleteDomainWithHttpInfo(domainName)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Get domain info\n   * Get the details for a single domain on the account.\n   * @param {String} domainName The domain name.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/VerifiedDomains} and HTTP response\n   */\n  this.getDomainWithHttpInfo = function(domainName) {\n    var postBody = null;\n\n    // verify the required parameter 'domainName' is set\n    if (domainName === undefined || domainName === null) {\n      throw new Error(\"Missing the required parameter 'domainName' when calling \");\n    }\n\n    var pathParams = {\n      'domain_name': domainName\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/verified-domains/{domain_name}', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Get domain info\n   * Get the details for a single domain on the account.\n   * @param {String} domainName The domain name.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/VerifiedDomains}\n   */\n  this.getDomain = function(domainName) {\n    return this.getDomainWithHttpInfo(domainName)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * List sending domains\n   * Get all of the sending domains on the account.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/VerifiedDomains1} and HTTP response\n   */\n  this.getVerifiedDomainsAllWithHttpInfo = function() {\n    var postBody = null;\n\n    var pathParams = {\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/verified-domains', 'GET',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * List sending domains\n   * Get all of the sending domains on the account.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/VerifiedDomains1}\n   */\n  this.getVerifiedDomainsAll = function() {\n    return this.getVerifiedDomainsAllWithHttpInfo()\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n\n  /**\n   * Verify domain\n   * Verify a domain for sending.\n   * @param {String} domainName The domain name.\n   * @param {module:model/VerifyADomainForSending_} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/VerifiedDomains} and HTTP response\n   */\n  this.submitDomainVerificationWithHttpInfo = function(domainName, body) {\n    var postBody = body;\n\n    // verify the required parameter 'domainName' is set\n    if (domainName === undefined || domainName === null) {\n      throw new Error(\"Missing the required parameter 'domainName' when calling \");\n    }\n\n    // verify the required parameter 'body' is set\n    if (body === undefined || body === null) {\n      throw new Error(\"Missing the required parameter 'body' when calling \");\n    }\n\n    var pathParams = {\n      'domain_name': domainName\n    };\n    var queryParams = {\n    };\n    var headerParams = {\n    };\n\n    var formParams = {\n    };\n\n    var authNames = ['basicAuth'];\n    var contentTypes = ['application/json'];\n    var accepts = ['application/json', 'application/problem+json'];\n    var returnType = 'application/json';\n\n    return this.apiClient.callApi(\n      '/verified-domains/{domain_name}/actions/verify', 'POST',\n      pathParams, queryParams, headerParams, formParams, postBody,\n      authNames, contentTypes, accepts, returnType\n    );\n  }\n  /**\n   * Verify domain\n   * Verify a domain for sending.\n   * @param {String} domainName The domain name.\n   * @param {module:model/VerifyADomainForSending_} body \n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/VerifiedDomains}\n   */\n  this.submitDomainVerification = function(domainName, body) {\n    return this.submitDomainVerificationWithHttpInfo(domainName, body)\n      .then(function(response_and_data) {\n        return response_and_data.data;\n      });\n  }\n};\n"],"sourceRoot":""}